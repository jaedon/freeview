/*******************************************************************
	File Description
********************************************************************/
/**
	@file	  layer_module.h File Name을 적습니다.
	@brief	  file_name & simple comment.

	Description: File에 대한 설명을 적습니다.		\n
	Module: Layer와 모듈 명을 적습니다.			 	\n

	Copyright (c) 2008 HUMAX Co., Ltd.				\n
	All rights reserved.							\n
*/

#ifndef	__KEYBOARD_MAIN_H__
#define	__KEYBOARD_MAIN_H__

/*******************************************************************/
/********************      Header Files    *************************/
/*******************************************************************/



/*******************************************************************/
/********************      Global Variables     ********************/
/*******************************************************************/


/*******************************************************************/
/********************      Macro Definition     ********************/
/*******************************************************************/


/*******************************************************************/
/****************************     ID     ***************************/
/*******************************************************************/
#if !defined(CONFIG_PROD_HDR4000T)
	#define		KEY_SUPPORT_LANGUAGE_BTN	1
#endif

#define 		KEY_FRAME_ID						1
#define			KEY_OBJ								2

#define 		KEY_IMG_INPUTBOX_CURSOR_ID			3

#define 		KEY_INPUTBOX1_TEXT_ID				33
#define 		KEY_INPUTBOX2_TEXT_ID				37
#define 		KEY_INPUTBOX3_TEXT_ID				41

/*******************************************************************/
/*********************     SIZE & POSITION     *********************/
/*******************************************************************/

#define 		AP_KEYBOARD_FRAME_X					0
#define 		AP_KEYBOARD_FRAME_Y					355
#define			AP_KEYBOARD_FRAME_W					1280
#define			AP_KEYBOARD_FRAME_H					365

#define 		AP_KEYBOARD_INPUTBOX1_X				60
#define 		AP_KEYBOARD_INPUTBOX1_Y				216

#define 		AP_KEYBOARD_INPUTBOX2_X				60
#define 		AP_KEYBOARD_INPUTBOX2_Y				182

#define 		AP_KEYBOARD_INPUTBOX3_X				60
#define 		AP_KEYBOARD_INPUTBOX3_Y				148

#define			AP_KEYBOARD_MAX_INPUT_WIDTH			1100

#define 		AP_KEYBOARD_INPUTBOX_W				1150
#define 		AP_KEYBOARD_INPUTBOX_H				35

#define 		AP_KEYBOARD_INPUTBOXCUSOR_W			3
#define 		AP_KEYBOARD_INPUTBOXCUSOR_H			41

/*******************************************************************/
/***************************     PATH     **************************/
/*******************************************************************/

#define			KEYBOARD_INPUTBOX_CURSOR			"/usr/image/570_KEY_Input_Cursor.png"

/*******************************************************************/
/**************************     SYMBOL     *************************/
/*******************************************************************/

#define			KEYBOARD_INPUT_NORMAL				0
#define			KEYBOARD_INPUT_PASSWD				1

#define			KEYBOARD_CHARSET_COUNT				2

#define			KEYBOARD_BUFFSIZE					128

#define			KEYBOARD_STRING_LENGTH				1024
#define			KEYBOARD_MAX_LINE_LENGTH			47
#define			KEYBOARD_MAX_TOTAL_LENGTH			140

#define			KEYBOARD_CHAR_BTN_COUNT				28
#define			KEYBOARD_NUM_BTN_COUNT				10
#define			KEYBOARD_NUMERIC_COUNT				5

#define			KEYBOARD_LIMITED_INTERVAL			100
#define			KEYBOARD_NUMERIC_INTERVAL			1500

#define			KEYBOARD_PW_INTERVAL				1000
#define			KEYBOARD_CURSOR_INTERVAL			800

#define			KEYBOARD_ROW_0						0
#define			KEYBOARD_ROW_1						1
#define			KEYBOARD_ROW_2						2
#define			KEYBOARD_ROW_3						3
#define			KEYBOARD_ROW_4						4
#define			KEYBOARD_ROW_5						5
#define			KEYBOARD_ROW_INPUTBOX				6

#define			KEYBOARD_COL_0						0
#define			KEYBOARD_COL_1						1
#define			KEYBOARD_COL_2						2
#define			KEYBOARD_COL_3						3
#define			KEYBOARD_COL_4						4
#define			KEYBOARD_COL_5						5
#define			KEYBOARD_COL_6						6
#define			KEYBOARD_COL_7						7
#define			KEYBOARD_COL_8						8
#define			KEYBOARD_COL_9						9

#define			KEYBOARD_ROW_COUNT					6
#define			KEYBOARD_COL_COUNT					10

#define			KEYBOARD_KEYPADSET_COUNT			5


#define 		FONT_PATH							"/usr/fonts/HelveticaNeueLTW1G-MdCnUpdv3.001.otf"
//#define 		FONT_POSITION_X						(KEYBOARDBG_x + 13)
//#define 		FONT_POSITION_Y						(KEYBOARDBG_Y + 472)
#define			FONT_NORMAL_SIZE							28
#define			FONT_COLOR							0xffaaaaaa

#if 0
typedef enum
{
	eCHARSET_English,
	eCHARSET_German,
	eCHARSET_Turkish,
	eCHARSET_Russian,
	eCHARSET_Arabic,
	eCHARSET_French,
	eCHARSET_Italian,
	eCHARSET_Spanish,
	eCHARSET_Greek,
	eCHARSET_Persian,
	eCHARSET_Max
} Key_Charset_e;

typedef struct Key_Contents
{
	HINT32			currentFocus_Row;  // current focus object
	HINT32			currentFocus_Col;  // current focus object
	HINT32			modeUpLow;		// upper or lower
	HINT32			modeToggle;      // character or extend or special
	HINT32			currentPtr;      // cursor point
	HINT32			inputboxSize;    //
	HINT32			inputMode;
	HINT32			charCount;
	HINT32			pwOnOff;
	HINT32			smsInput;
	HINT32			beforeInput;
	HINT32			isEnglishArea;  // TRUE : hide language btn --  FALSE : display language btn

	Key_Charset_e	language;
	HxSTR_t			*strbuf;

	HINT8				*input1;
	HINT8				*input2;
	HINT8				*input3;
};


HUINT16 s_NumericSet[2][KEYBOARD_NUM_BTN_COUNT][KEYBOARD_NUMERIC_COUNT] =
{
	//capital
	{
		{0x0026, 0x0040,0x005F,0x0030,0x0020}, // 0
		{0x0020, 0x002E,0x002C,0x0031,0x0020}, // 1
		{0x0041, 0x0042,0x0043,0x0032,0x0020}, // 2
		{0x0044, 0x0045,0x0046,0x0033,0x0020}, // 3
		{0x0047, 0x0048,0x0049,0x0034,0x0020}, // 4
		{0x004A, 0x004B,0x004C,0x0035,0x0020}, // 5
		{0x004D, 0x004E,0x004F,0x0036,0x0020}, // 6
		{0x0050, 0x0051,0x0052,0x0053,0x0037}, // 7
		{0x0054, 0x0055,0x0056,0x0038,0x0020}, // 8
		{0x0057, 0x0058,0x0059,0x005A,0x0039}  // 9
	},
	//small
	{
		{0x0026, 0x0040,0x005F,0x0030,0x0020}, // 0
		{0x0020, 0x002E,0x002C,0x0031,0x0020}, // 1
		{0x0061, 0x0062,0x0063,0x0032,0x0020}, // 2
		{0x0064, 0x0065,0x0066,0x0033,0x0020}, // 3
		{0x0067, 0x0068,0x0069,0x0034,0x0020}, // 4
		{0x006A, 0x006B,0x006C,0x0035,0x0020}, // 5
		{0x006D, 0x006E,0x006F,0x0036,0x0020}, // 6
		{0x0070, 0x0071,0x0072,0x0073,0x0037}, // 7
		{0x0074, 0x0075,0x0076,0x0038,0x0020}, // 8
		{0x0077, 0x0078,0x0079,0x007A,0x0039}  // 9
	}
};

// 0x0020 space value
HUINT16 s_CharSet_Eng[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//Capital
		0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A,
		0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054,
		0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2

		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0000, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},
	{
		//Small
		0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A,
		0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072, 0x0073, 0x0074,
		0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2

		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0000, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};

HUINT16 s_CharSet_Ger[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//Capital
		0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A,
		0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054,
		0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x0020, 0x0020,
		//Extra
		0x00C4, 0x00C0, 0x00C9, 0x00D6, 0x00DF, 0x00DC, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0000, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},

	{
		//Small
		0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A,
		0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072, 0x0073, 0x0074,
		0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A, 0x0020, 0x0020,
		//Extra
		0x00E4, 0x00E0, 0x00E9, 0x00F6, 0x00F9, 0x00FC, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0000, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};

HUINT16 s_CharSet_Tur[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//Capital
		0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A,
		0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054,
		0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x0020, 0x0020,
		//Extra
		0x00C2, 0x00C7, 0x011E, 0x0130, 0x00D6, 0x015E, 0x00DB, 0x00DC, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},

	{
		//Small
		0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A,
		0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072, 0x0073, 0x0074,
		0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A, 0x0020, 0x0020,
		//Extra
		0x00E2, 0x00E7, 0x011F, 0x0131, 0x00F6, 0x015F, 0x00FB, 0x00FC, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};

HUINT16 s_CharSet_Rus[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
	 	//Capital
		0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0401, 0x0416, 0x0417, 0x0418,
		0x0419, 0x041A, 0x041B, 0x041C, 0x041D, 0x041E, 0x041F, 0x0420, 0x0421, 0x0422,
		0x0423, 0x0424, 0x0425, 0x0426, 0x0427, 0x0428, 0x0429, 0x042A,
		//Capital Ext
		0x042B, 0x042C, 0x042D, 0x042E, 0x042F, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Extra
		0x0402, 0x0403, 0x0404, 0x0405, 0x0406, 0x0407, 0x0408, 0x0409, 0x040A, 0x040B,
		0x040C, 0x040E, 0x040F, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020


	},

	{
	  	//Small
		0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435, 0x0451, 0x0436, 0x0437, 0x0438,
		0x0439, 0x043A, 0x043B, 0x043C, 0x043D, 0x043E, 0x043F, 0x0440, 0x0441, 0x0442,
		0x0443, 0x0444, 0x0445, 0x0446, 0x0447, 0x0448, 0x0449, 0x044A,
		//Small Ext
		0x044B, 0x044C, 0x044D, 0x044E, 0x044F, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Extra
		0x0452, 0x0453, 0x0454, 0x0455, 0x0456, 0x0457, 0x0458, 0x0459, 0x045A, 0x045B,
		0x045C, 0x045E, 0x045F, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020

	}
};

HUINT16 s_CharSet_Ara[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//(Based on ISO 8859-6, 0x0621 ~ 0x063A)
		0x0621, 0x0622, 0x0623, 0x0624, 0x0625, 0x0626, 0x0627, 0x0628, 0x0629, 0x062A,
		0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631, 0x0632, 0x0633, 0x0634,
		0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063A, 0x0020, 0x0020,
		//(Based on ISO 8859-6, 0x0640 ~ 0x064A)
		0x0640, 0x0641, 0x0642, 0x0643, 0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649,
		0x064A,
		//(Points from ISO 8859-6, 0x064B ~ 0x0652)
		0x064B, 0x064C, 0x064E, 0x064F, 0x0650, 0x0651, 0x0652, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},

	{
		//(Based on ISO 8859-6, 0x0621 ~ 0x063A)
		0x0621, 0x0622, 0x0623, 0x0624, 0x0625, 0x0626, 0x0627, 0x0628, 0x0629, 0x062A,
		0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631, 0x0632, 0x0633, 0x0634,
		0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063A, 0x0020, 0x0020,
		//(Based on ISO 8859-6, 0x0640 ~ 0x064A)
		0x0640, 0x0641, 0x0642, 0x0643, 0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649,
		0x064A,
		//(Points from ISO 8859-6, 0x064B ~ 0x0652)
		0x064B, 0x064C, 0x064E, 0x064F, 0x0650, 0x0651, 0x0652, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};

HUINT16 s_CharSet_Per[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//(Based on ISO 8859-6, 0x0621 ~ 0x063A)
		0x0621, 0x0622, 0x0623, 0x0624, 0x0625, 0x0626, 0x0627, 0x0628, 0x0629, 0x062A,
		0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631, 0x0632, 0x0633, 0x0634,
		0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063A, 0x0020, 0x0020,
		//(Based on ISO 8859-6, 0x0640 ~ 0x064A)
		0x0640, 0x0641, 0x0642, 0x0643, 0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649,
		0x064A,
		//(Points from ISO 8859-6, 0x064B ~ 0x0652)
		0x064B, 0x064C, 0x064E, 0x064F, 0x0650, 0x0651, 0x0652, 0x067E, 0x0686,
		0x0698, 0x06AF, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},

	{
		//(Based on ISO 8859-6, 0x0621 ~ 0x063A)
		0x0621, 0x0622, 0x0623, 0x0624, 0x0625, 0x0626, 0x0627, 0x0628, 0x0629, 0x062A,
		0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631, 0x0632, 0x0633, 0x0634,
		0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063A, 0x0020, 0x0020,
		//(Based on ISO 8859-6, 0x0640 ~ 0x064A)
		0x0640, 0x0641, 0x0642, 0x0643, 0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649,
		0x064A,
		//(Points from ISO 8859-6, 0x064B ~ 0x0652)
		0x064B, 0x064C, 0x064E, 0x064F, 0x0650, 0x0651, 0x0652, 0x067E, 0x0686,
		0x0698, 0x06AF, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};

HUINT16 s_CharSet_Fre[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//Capital
		0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A,
		0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054,
		0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x0020, 0x0020,
		//Extra
		0x00C0, 0x00C2, 0x00C6, 0x00C7, 0x00C9, 0x00C8, 0x00CA, 0x00CB, 0x00CE, 0x00CF,
		0x00D1, 0x00D4, 0x0152, 0x00D9, 0x00DB, 0x0178, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},

	{
		//Small
		0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A,
		0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072, 0x0073, 0x0074,
		0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A, 0x0020, 0x0020,
		//Extra
		0x00E0, 0x00E2, 0x00E6, 0x00E7, 0x00E9, 0x00E8, 0x00EA, 0x00EB, 0x00EE, 0x00EF,
		0x00F1, 0x00F4, 0x0153, 0x00F9, 0x00FB, 0x00FF, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};

HUINT16 s_CharSet_Ita[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//Capital
		0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A,
		0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054,
		0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x0020, 0x0020,
		//Extra
		0x00C0, 0x00C9, 0x00C8, 0x00CC, 0x00D2, 0x00D9, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},

	{
		//Small
		0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A,
		0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072, 0x0073, 0x0074,
		0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A, 0x0020, 0x0020,
		//Extra
		0x00E0, 0x00E9, 0x00E8, 0x00EC, 0x00F2, 0x00F9, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};

HUINT16 s_CharSet_Spa[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//Capital
		0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004A,
		0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052, 0x0053, 0x0054,
		0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x0020, 0x0020,
		//Extra
		0x00C1, 0x00C0, 0x00C7, 0x00C9, 0x00C8, 0x00CD, 0x00CF, 0x00D1, 0x00D3, 0x00D2,
		0x00DA, 0x00DC, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},

	{
		//Small
		0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A,
		0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072, 0x0073, 0x0074,
		0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A, 0x0020, 0x0020,
		//Extra
		0x00E1, 0x00E0, 0x00E7, 0x00E9, 0x00E8, 0x00ED, 0x00EF, 0x00F1, 0x00F3, 0x00F2,
		0x00FA, 0x00FC, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};

HUINT16 s_CharSet_Gre[2][KEYBOARD_CHAR_BTN_COUNT*KEYBOARD_KEYPADSET_COUNT] =
{
	{
		//Capital
		0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 0x0397, 0x0398, 0x0399, 0x039A,
		0x039B, 0x039C, 0x039D, 0x039E, 0x039F, 0x03A0, 0x03A1, 0x03A3, 0x03A4, 0x03A5,
		0x03A6, 0x03A7, 0x03A8, 0x03A9, 0x0020, 0x0020, 0x0020, 0x0020,
		//Extra
		0x0386, 0x0388, 0x0389, 0x038A, 0x03AA, 0x0390, 0x038C, 0x03C2, 0x038E, 0x03AB,
		0x03B0, 0x038F, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	},

	{
		//Small
		0x03B1, 0x03B2, 0x03B3, 0x03B4, 0x03B5, 0x03B6, 0x03B7, 0x03B8, 0x03B9, 0x03BA,
		0x03BB, 0x03BC, 0x03BD, 0x03BE, 0x03BF, 0x03C0, 0x03C1, 0x03C3, 0x03C4, 0x03C5,
	 	0x03C6, 0x03C7, 0x03C8, 0x03C9, 0x0020, 0x0020, 0x0020, 0x0020,
		//Extra
		0x03AC, 0x03AD, 0x03AE, 0x03AF, 0x03CA, 0x0390, 0x03CC, 0x03C2, 0x03CD, 0x03CB,
		0x03B0, 0x03CE, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		//Special 1
		0x0040, 0x002D, 0x002E, 0x005F, 0x0021, 0x003F, 0x0025, 0x002A, 0x007E, 0x0024,
		0x0023, 0x002F, 0x007C, 0x005C, 0x005E, 0x003D, 0x2018, 0x2019, 0x0022, 0x002C,
		0x003A, 0x003B, 0x0028, 0x0029, 0x007B, 0x007D, 0x005B, 0x005D,
		//Special 2
		0x003C, 0x003E, 0x00BF, 0x00A1, 0x00A3, 0x00A4, 0x00A5, 0x00A7, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,

		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020,
		0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020
	}
};
#endif

/*******************************************************************/
/********************      Typedef         *************************/
/*******************************************************************/


/*******************************************************************/
/********************      Public Functions     ********************/
/*******************************************************************/


#endif /* !__KEYBOARD_MAIN_H__ */

