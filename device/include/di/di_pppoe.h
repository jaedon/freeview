#ifndef __DI_PPPOE_H___
#define __DI_PPPOE_H___

#define PPPOE_ID_LEN		(64)
#define PPPOE_PW_LEN		(128)

typedef enum
{
	DI_PPPOE_EVENT_CONNECT_SUCCESS = 0,
	DI_PPPOE_EVENT_CONNECT_FAIL,
	DI_PPPOE_EVENT_DISCONNECT_SUCCESS,
	DI_PPPOE_EVENT_DISCONNECT_FAIL,
	DI_PPPOE_EVENT_SET_INFO,
	DI_PPPOE_EVENT_SET_ONOFF,
	DI_PPPOE_EVENT_MAX
} DI_PPPOE_NOTIFY_EVENT_e;

typedef	struct
{
	HUINT32 ulDevId;
	DI_PPPOE_NOTIFY_EVENT_e eEvent;
} DI_PPPOE_CALLBACK_DATA_t;

typedef struct
{
	HBOOL bConnected;
	HUINT32 ulWaitSeconds;
	HUINT8 aucId[PPPOE_ID_LEN];
	HUINT8 aucPassword[PPPOE_PW_LEN];
} DI_PPPOE_INFO_t;

typedef void (*pfnDI_PPPOE_EVENT_CALLBACK)(void *pvData);

DI_ERR_CODE DI_PPPOE_RegisterEventCallback(HUINT32 ulDevId, DI_PPPOE_NOTIFY_EVENT_e eEvent, pfnDI_PPPOE_EVENT_CALLBACK pfnEventCallback);
DI_ERR_CODE DI_PPPOE_Connect(HUINT32 ulDevId, DI_PPPOE_INFO_t *pstPPPoEInfo);
DI_ERR_CODE DI_PPPOE_Disconnect(HUINT32 ulDevId);
DI_ERR_CODE DI_PPPOE_SetInfo(HUINT32 ulDevId, DI_PPPOE_INFO_t *pstPPPoEInfo);
DI_ERR_CODE DI_PPPOE_GetInfo(HUINT32 ulDevId, DI_PPPOE_INFO_t *pstPPPoEInfo);
#endif

