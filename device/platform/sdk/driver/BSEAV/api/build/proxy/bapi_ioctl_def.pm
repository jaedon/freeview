#!/usr/bin/perl
#############################################################################
#
#		Copyright (c) 2003, Broadcom Corporation.
#		All rights reserved.
#		Confidential Property of Broadcom Corporation.
#
#  THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
#  AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
#  EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
#
# $brcm_Workfile: bapi_ioctl_def.pm $
# $brcm_Revision: 1 $
# $brcm_Date: 2/7/05 6:56p $
#
# File Description:
#
# Revision History:
#
# $brcm_Log: /BSEAV/api/build/proxy/bapi_ioctl_def.pm $
# 
# 1   2/7/05 6:56p dlwin
# Merge down for release 2005_REFSW_MERGETOMAIN:
# 
# Irvine_BSEAVSW_Devel/3   6/24/04 10:24a erickson
# PR11135: added "don't modify" headers
# 
# Irvine_BSEAVSW_Devel/2   6/1/04 11:28a erickson
# PR11135: added comment
#
# Irvine_BSEAVSW_Devel/1   5/17/04 11:13a erickson
# PR11135: added initial linux proxy impl
#
#############################################################################
use strict;

package bapi_ioctl_def;

# this function takes an array of function data structures as input
# it prints out the ioctl definitions, both IOCTL numbers and data structures
sub parse
{
	my ($filename, @funcs) = @_;
	my $func;
	open FILE, ">$filename";
	my $cnt = 0;
	my $settopapi_id = 199;

	print FILE "/*********************************\n";
	print FILE "*\n";
	print FILE "* This file is autogenerated. Do not modify.\n";
	print FILE "*\n";
	print FILE "*********************************/\n";

	for $func (@funcs) {
		my $params = $func->{PARAMS};
		my $param;
		my $i = 0;
		
		if ($func->{NOSTRUCT}) {
			print FILE "#define BSETTOP_IOCTL_$func->{FUNCNAME} _IO(" .
				"$settopapi_id, $cnt)\n\n";
		}
		else {
			print FILE "typedef struct ioctl_settopapi_struct_$func->{FUNCNAME} \{\n";

			# If the RETTYPE is a reference, make it a value
			if ($func->{RETTYPE} =~ /\*$/) {
				my $rettype = $func->{RETTYPE};
				$rettype =~ s/const//;
				$rettype =~ s/\*//;
				print FILE "  $rettype __retval;\n";
			}
			elsif ($func->{RETTYPE} ne "void") {
				print FILE "  $func->{RETTYPE} __retval;\n";
			}

			for $param (@$params) {
				print FILE "  $param->{TYPE} $param->{NAME};\n";
			}
			print FILE "} ioctl_settopapi_struct_$func->{FUNCNAME};\n\n";
			print FILE "#define BSETTOP_IOCTL_$func->{FUNCNAME} _IOWR(" .
				"$settopapi_id, $cnt, " .
				"ioctl_settopapi_struct_$func->{FUNCNAME})\n\n";
		}
		$cnt++;

	}
	close FILE;
}

1;
