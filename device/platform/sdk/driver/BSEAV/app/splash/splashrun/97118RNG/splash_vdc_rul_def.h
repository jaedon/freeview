/***************************************************************************
 File : splash_vdc_rul.h
 Date  : Oct 19 2007 18:18:19
 Description : RUL list for splash BVN configuration
 ***************************************************************************/

#include "splash_magnum.h"


const uint32_t       gSplashWidth   = 720;
const uint32_t       gSplashHeight  = 482;
const uint32_t       gSplashPhysAddr = 0x023d4790; 
const uint32_t       gSplashPitch   = 1440;
const BPXL_Format    gSplashFormat  = (BPXL_Format)0x00000000;
const BFMT_VideoFmt  gVideoFormat   = (BFMT_VideoFmt)0; /* BFMT_VideoFmt_eNTSC */

uint32_t aListCount0[] = 
{
	0,
	439,
	442,
	550,
	607,
	664,
};

uint32_t aList0[] = 
{

	/* LIST: 0 (439 entries) */
	0x01000000,
	0x10180004,
	0x00000001,
	0x01000000,
	0x10180004,
	0x00000000,
	0x01000000,
	0x101805c0,
	0x00000400,
	0x01000000,
	0x101805c0,
	0x00000000,
	0x01000000,
	0x10180504,
	0x00000001,
	0x01000000,
	0x10180504,
	0x00000000,
	0x01000000,
	0x10180484,
	0x00000001,
	0x01000000,
	0x10180484,
	0x00000000,
	0x01000000,
	0x10180544,
	0x00000001,
	0x01000000,
	0x10180544,
	0x00000000,
	0x01000000,
	0x10180604,
	0x00000001,
	0x01000000,
	0x10180604,
	0x00000000,
	0x01000000,
	0x10180684,
	0x00000001,
	0x01000000,
	0x10180684,
	0x00000000,
	0x01000000,
	0x101805c0,
	0x00000210,
	0x06000003,
	0x101805c4,
	0x00000004,
	0x00000001,
	0x00200000,
	0x00000000,
	0x06000007,
	0x10180548,
	0x00003fda,
	0x001ffc00,
	0x12ec0000,
	0x00420000,
	0x00000d71,
	0xe61c0c73,
	0x0000f726,
	0xf5a81332,
	0x01000000,
	0x10180584,
	0x00000020,
	0x06000004,
	0x10180508,
	0x00870000,
	0x001fc05e,
	0x00000018,
	0x21f07c1f,
	0x0400003b,
	0x01000000,
	0x10180524,
	0x00010000,
	0x01000000,
	0x101814f4,
	0x00000000,
	0x01000000,
	0x101814c8,
	0x00312000,
	0x01000000,
	0x101814d4,
	0x0070003f,
	0x01000000,
	0x1018060c,
	0x0200046e,
	0x06000016,
	0x10180488,
	0x00497000,
	0x0200046e,
	0x0f03c010,
	0x0008bc00,
	0x401a0800,
	0x64482e14,
	0x000a05f3,
	0x008604d0,
	0x008cc45f,
	0x9bc348bc,
	0x000a5af0,
	0x0004902a,
	0x005fe4d9,
	0x008b2018,
	0xa16f8745,
	0x0000a00f,
	0x0004902a,
	0x005fe4d9,
	0x008b2018,
	0xa16f8745,
	0x0000a00f,
	0x000000ff,
	0x00000c63,
	0x01000000,
	0x10180488,
	0x00097000,
	0x01000000,
	0x10180490,
	0x0f03c010,
	0x01000000,
	0x1018048c,
	0x0200046e,
	0x06000016,
	0x10180608,
	0x004df14a,
	0x0200046e,
	0x0fb3ec10,
	0x00089000,
	0x401a0800,
	0x64482e14,
	0x00086058,
	0x000ca045,
	0x0089c40e,
	0x9b934e54,
	0x000a5f55,
	0x0005003c,
	0x000fc01f,
	0x04dd34ef,
	0xad3f0903,
	0x0000f05f,
	0x0005003c,
	0x000fc01f,
	0x04dd34ef,
	0xad3f0903,
	0x0000f05f,
	0x000000ff,
	0x00000c63,
	0x01000000,
	0x10180608,
	0x000df14a,
	0x0600000c,
	0x1018000c,
	0xfcfc1400,
	0x009efcfc,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000006,
	0x03805332,
	0x0120c148,
	0x110036e5,
	0x05899b8b,
	0x00cc000c,
	0x00ffff7e,
	0x01000000,
	0x10180048,
	0x00808080,
	0x01000000,
	0x10180050,
	0x00f102d0,
	0x06000001,
	0x1018005c,
	0x00000803,
	0x0000090a,
	0x060000ff,
	0x10180080,
	0x0020400c,
	0x00a24000,
	0x00288059,
	0x0028001b,
	0x0024000d,
	0x0020703f,
	0x00205040,
	0x00204010,
	0x00214044,
	0x00284025,
	0x0028c00f,
	0x0028c1d2,
	0x00288075,
	0x002c800b,
	0x0028e040,
	0x0028c284,
	0x00801000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00460003,
	0x00ad8003,
	0x00462001,
	0x00442005,
	0x00441006,
	0x00442006,
	0x0063700b,
	0x0063c001,
	0x00214018,
	0x0041c1e2,
	0x0021c018,
	0x00414001,
	0x0082d001,
	0x0020200f,
	0x00242010,
	0x00442006,
	0x004c1006,
	0x004c2006,
	0x004c4001,
	0x0064100b,
	0x00646001,
	0x0049c1e0,
	0x0049c001,
	0x004bc001,
	0x00815000,
	0x00444002,
	0x00442005,
	0x004c1006,
	0x004c2006,
	0x0064100b,
	0x00646001,
	0x0049c1e0,
	0x0049c001,
	0x004bc001,
	0x00815000,
	0x0083a002,
	0x00454001,
	0x00554001,
	0x0041c001,
	0x0051c001,
	0x0083f002,
	0x00414001,
	0x00514001,
	0x0041c001,
	0x0051c001,
	0x00844001,
	0x004d4001,
	0x005d4001,
	0x0049c001,
	0x0059c001,
	0x00849001,
	0x00494001,
	0x00594001,
	0x0049c001,
	0x0059c001,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00200012,
	0x00a00018,
	0x0085c004,
	0x00400801,
	0x0020005a,
	0x00657008,
	0x00400801,
	0x00859008,
	0x003000db,
	0x0020103d,
	0x00208052,
	0x0030004c,
	0x00400801,
	0x0020005a,
	0x00660008,
	0x00400801,
	0x00862010,
	0x003000db,
	0x0020103d,
	0x00208052,
	0x0030004c,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00400806,
	0x00a00064,
	0x0067b00f,
	0x00400801,
	0x00c08020,
	0x00c08020,
	0x00c01040,
	0x00c01040,
	0x004008f7,
	0x00a00064,
	0x0067b00f,
	0x00400801,
	0x00c08020,
	0x00c08020,
	0x00c01040,
	0x00c01040,
	0x004008f0,
	0x00869000,
	0x00400801,
	0x00c08020,
	0x00d01040,
	0x00000000,
	0x00400017,
	0x0068c001,
	0x00400011,
	0x0068c001,
	0x0068b009,
	0x00400019,
	0x00400022,
	0x0068c001,
	0x00400011,
	0x0068c001,
	0x0068b009,
	0x0040000f,
	0x00400011,
	0x00a00080,
	0x00504004,
	0x00000000,
	0x00400001,
	0x00200069,
	0x00c03080,
	0x0020300b,
	0x0020c02c,
	0x0020402a,
	0x00400001,
	0x0088f000,
	0x00000000,
	0x00000000,
	0x00200035,
	0x00202036,
	0x00200018,
	0x006a6002,
	0x00400003,
	0x004000f5,
	0x0040000a,
	0x006aa002,
	0x006a6003,
	0x00400003,
	0x004000f4,
	0x0040000a,
	0x006aa002,
	0x00400001,
	0x0020003f,
	0x00202036,
	0x00300018,
	0x00400001,
	0x0020007f,
	0x00202036,
	0x00300018,
	0x00000000,
	0x00200035,
	0x00202036,
	0x00200018,
	0x006bc002,
	0x00400003,
	0x004000f5,
	0x0040000b,
	0x006c0001,
	0x006bc003,
	0x00400003,
	0x004000f4,
	0x0040000b,
	0x006c0001,
	0x00400001,
	0x0020003f,
	0x00202036,
	0x00300018,
	0x00400001,
	0x0020007f,
	0x00202036,
	0x00300018,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x0040001d,
	0x006d5001,
	0x0040000f,
	0x006d5001,
	0x006d400b,
	0x0040001b,
	0x00400026,
	0x006d5001,
	0x0040000f,
	0x006d5001,
	0x006d400b,
	0x00400013,
	0x0040000f,
	0x00a00080,
	0x00504002,
	0x00400001,
	0x00200069,
	0x00c03080,
	0x0020300b,
	0x0020c02c,
	0x0020402a,
	0x00400001,
	0x008d7000,
	0x00000000,
	0x00000000,
	0x00200035,
	0x00202036,
	0x00200018,
	0x006ee002,
	0x00400003,
	0x004000f5,
	0x00400009,
	0x006f2003,
	0x006ee003,
	0x00400003,
	0x004000f4,
	0x00400009,
	0x006f2003,
	0x00400001,
	0x0020003f,
	0x00202036,
	0x00300018,
	0x00400001,
	0x0020007f,
	0x00202036,
	0x00300018,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x008fd000,
	0x00062107,
	0x2ee1e059,
	0x0400001f,
	0x00000001,
	0x01000000,
	0x10180008,
	0x0201030b,
	0x01000000,
	0x10180028,
	0x03805332,

	/* LIST: 1 (3 entries) */
	0x01000000,
	0x101424c0,
	0xbaadf00d,

	/* LIST: 3 (108 entries) */
	0x01000000,
	0x10182004,
	0x00000001,
	0x01000000,
	0x10182010,
	0x00000000,
	0x01000000,
	0x1018004c,
	0x00000001,
	0x01000000,
	0x10146400,
	0x00000100,
	0x01000000,
	0x10146400,
	0x00000000,
	0x06000003,
	0x10142408,
	0x02d000f1,
	0x001cb876,
	0x0002ff34,
	0x000f0000,
	0x01000000,
	0x10142434,
	0x00000000,
	0x06000003,
	0x101424a0,
	0x02d000f1,
	0x00000000,
	0x02d000f1,
	0x00000000,
	0x06000006,
	0x101424cc,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x01000000,
	0x10142430,
	0x00000006,
	0x01000000,
	0x101424b0,
	0x0000ff01,
	0x01000000,
	0x10142404,
	0x00000001,
	0x01000000,
	0x1014105c,
	0x02d000f1,
	0x01000000,
	0x10141018,
	0x00100000,
	0x06000003,
	0x101410f0,
	0x00000000,
	0x10000000,
	0x004ffe50,
	0x09700000,
	0x06000003,
	0x10141028,
	0x00000000,
	0x00000000,
	0x00000000,
	0x0000ff00,
	0x01000000,
	0x10141020,
	0x00000000,
	0x01000000,
	0x1014101c,
	0x00000000,
	0x06000003,
	0x10141038,
	0x00000000,
	0x000002d0,
	0x00000000,
	0x00000b40,
	0x01000000,
	0x10141040,
	0x023d4790,
	0x01000000,
	0x10141048,
	0x00000000,
	0x04000001,
	0x00000000,
	0x11001000,
	0x06000001,
	0x10141010,
	0x00000565,
	0x000b0500,
	0x06000008,
	0x10141100,
	0x01070204,
	0x00640040,
	0x00000000,
	0x3f693ed7,
	0x01c10200,
	0x00000000,
	0x01c13e88,
	0x3fb80200,
	0x00000000,
	0x01000000,
	0x1014100c,
	0x00000010,
	0x01000000,
	0x10141004,
	0x00000001,

	/* LIST: 5 (57 entries) */
	0x01000000,
	0x10182010,
	0x00000000,
	0x01000000,
	0x1018004c,
	0x00000001,
	0x06000003,
	0x10142408,
	0x02d000f1,
	0x001cb876,
	0x0002ff34,
	0x000f0000,
	0x06000003,
	0x101424a0,
	0x02d000f1,
	0x00000000,
	0x02d000f1,
	0x00000000,
	0x06000006,
	0x101424cc,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x01000000,
	0x10142430,
	0x00000006,
	0x01000000,
	0x101424b0,
	0x0000ff01,
	0x01000000,
	0x10142404,
	0x00000001,
	0x06000003,
	0x10141038,
	0x00000000,
	0x000002d0,
	0x00000000,
	0x00000b40,
	0x01000000,
	0x10141040,
	0x023d4790,
	0x01000000,
	0x10141048,
	0x00000000,
	0x04000001,
	0x00000000,
	0x11001000,
	0x01000000,
	0x1014100c,
	0x00000010,
	0x01000000,
	0x10141004,
	0x00000001,

	/* LIST: 7 (57 entries) */
	0x01000000,
	0x10182010,
	0x00000000,
	0x01000000,
	0x1018004c,
	0x00000001,
	0x06000003,
	0x10142408,
	0x02d000f1,
	0x001cb876,
	0x0002ff34,
	0x000f0000,
	0x06000003,
	0x101424a0,
	0x02d000f1,
	0x00000000,
	0x02d000f1,
	0x00000000,
	0x06000006,
	0x101424cc,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x01000000,
	0x10142430,
	0x00000006,
	0x01000000,
	0x101424b0,
	0x0000ff01,
	0x01000000,
	0x10142404,
	0x00000001,
	0x06000003,
	0x10141038,
	0x00000000,
	0x000002d0,
	0x00000000,
	0x00000b40,
	0x01000000,
	0x10141040,
	0x023d4790,
	0x01000000,
	0x10141048,
	0x00000000,
	0x04000001,
	0x00000000,
	0x11001000,
	0x01000000,
	0x1014100c,
	0x00000010,
	0x01000000,
	0x10141004,
	0x00000001,
};

uint32_t aListCount1[] = 
{
	0,
	60,
	117,
	174,
};

uint32_t aList1[] = 
{

	/* LIST: 4 (60 entries) */
	0x01000000,
	0x10182010,
	0x00000000,
	0x01000000,
	0x1018004c,
	0x00000002,
	0x06000003,
	0x10142408,
	0x02d000f1,
	0x001cb876,
	0x0002ff34,
	0x000f0000,
	0x01000000,
	0x10142434,
	0x00000000,
	0x06000003,
	0x101424a0,
	0x02d000f1,
	0x00000000,
	0x02d000f1,
	0x00000000,
	0x06000006,
	0x101424cc,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x01000000,
	0x10142430,
	0x00000006,
	0x01000000,
	0x101424b0,
	0x0000ff01,
	0x01000000,
	0x10142404,
	0x00000001,
	0x06000003,
	0x10141038,
	0x00000000,
	0x000002d0,
	0x00000000,
	0x00000b40,
	0x01000000,
	0x10141040,
	0x023d4d30,
	0x01000000,
	0x10141048,
	0x00000000,
	0x04000001,
	0x00000000,
	0x11001000,
	0x01000000,
	0x1014100c,
	0x00000010,
	0x01000000,
	0x10141004,
	0x00000001,

	/* LIST: 6 (57 entries) */
	0x01000000,
	0x10182010,
	0x00000000,
	0x01000000,
	0x1018004c,
	0x00000002,
	0x06000003,
	0x10142408,
	0x02d000f1,
	0x001cb876,
	0x0002ff34,
	0x000f0000,
	0x06000003,
	0x101424a0,
	0x02d000f1,
	0x00000000,
	0x02d000f1,
	0x00000000,
	0x06000006,
	0x101424cc,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x01000000,
	0x10142430,
	0x00000006,
	0x01000000,
	0x101424b0,
	0x0000ff01,
	0x01000000,
	0x10142404,
	0x00000001,
	0x06000003,
	0x10141038,
	0x00000000,
	0x000002d0,
	0x00000000,
	0x00000b40,
	0x01000000,
	0x10141040,
	0x023d4d30,
	0x01000000,
	0x10141048,
	0x00000000,
	0x04000001,
	0x00000000,
	0x11001000,
	0x01000000,
	0x1014100c,
	0x00000010,
	0x01000000,
	0x10141004,
	0x00000001,

	/* LIST: 8 (57 entries) */
	0x01000000,
	0x10182010,
	0x00000000,
	0x01000000,
	0x1018004c,
	0x00000002,
	0x06000003,
	0x10142408,
	0x02d000f1,
	0x001cb876,
	0x0002ff34,
	0x000f0000,
	0x06000003,
	0x101424a0,
	0x02d000f1,
	0x00000000,
	0x02d000f1,
	0x00000000,
	0x06000006,
	0x101424cc,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x00000000,
	0x01000000,
	0x10142430,
	0x00000006,
	0x01000000,
	0x101424b0,
	0x0000ff01,
	0x01000000,
	0x10142404,
	0x00000001,
	0x06000003,
	0x10141038,
	0x00000000,
	0x000002d0,
	0x00000000,
	0x00000b40,
	0x01000000,
	0x10141040,
	0x023d4d30,
	0x01000000,
	0x10141048,
	0x00000000,
	0x04000001,
	0x00000000,
	0x11001000,
	0x01000000,
	0x1014100c,
	0x00000010,
	0x01000000,
	0x10141004,
	0x00000001,
};


struct stTriggerMap
{
	int TriggerHwNum ;             /* The hardware position of the trigger */
	int SlotNum ;                  /* The RDMA slot correposponding to the trigger */
	int ListCountMaxIndex ;       /* The Max Index of the ListCount Array */
	uint32_t *aListCountArray ; /* The list count array pointer */
	uint32_t *aListArray ;      /* The list array pointer */
	} aTriggerMap[] = 
{
 { 8, 0, 5, aListCount0, aList0 },
 { 9, 1, 3, aListCount1, aList1 },
 { -1, -1, 0, NULL, NULL },
 { -1, -1, 0, NULL, NULL },
 { -1, -1, 0, NULL, NULL },
 { -1, -1, 0, NULL, NULL },
 { -1, -1, 0, NULL, NULL },
 { -1, -1, 0, NULL, NULL },

};


