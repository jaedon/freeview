90500:FUNC:Set a Header with Uplinks and generate a license challenge
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,uplinkHeaderV4.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,0,2, ChallengeBuffer, "UseAesKey")

11487:BVT: get device property. DRM_DGP_PLAYREADY_VERSION and DRM_DGP_WMDRMPD_VERSION
If(WMDRMSupported)
TestManagerGetDeviceProperty(4,NULL)
TestManagerGetDeviceProperty(6,NULL)
EndIf

11486:BVT: get device property. DRM_DGP_CLIENT_INFO
If(WMDRMSupported)
TestManagerGetDeviceProperty(3,NULL)
EndIf

11490:BVT: get content property. DRM_CGP_HEADER_TYPE and DRM_CGP_HEADER
TestManagerGetContentProperty(1,0)
TestManagerGetContentProperty(2,Nothing)=0x8004c03C DRM_E_HEADER_NOT_SET
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetContentProperty(1,2)
TestManagerGetContentProperty(0,"!3x8NSroVg4eXCzWqPU!BA==")
TestManagerGetContentProperty(2,<WRMHEADER version="2.0.0.0"><DATA><LAINFO>http://www.contoso.com/licenseacq.asp</LAINFO><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CHECKSUM>P7ORpD2IpA==</CHECKSUM></DATA><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>dkZeJ1a23pBzQ8INbHzEnjCC+BMWRXc7+Fuc1HHHjbKvmoNIgYnaaQ==</VALUE></SIGNATURE></WRMHEADER>)
TestManagerGetContentProperty(3,Nothing)=0x8004110F ( DRM_E_CH_INCOMPATIBLE_HEADER_TYPE )

11491:BVT: get content property (header type) for V4 UTF-16 little endian header with byte order mark
TestManagerSetHeader(NORMAL, header1V4-UTF16LE-BOM.xml, UTF-16)
TestManagerGetContentProperty(1,6)
TestManagerGetContentProperty(0,"!3x8NSroVg4eXCzWqPU!BA==")

11492:BVT: test of DRMManager Drm_Content_SetProperty function EXCLUDING LiveTV only options
TestManagerSetHeader(NORMAL, header1.xml)
TestManagerGetContentProperty(1,2)
TestManagerGetContentProperty(0,"!3x8NSroVg4eXCzWqPU!BA==")
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL, V24header.xml, UTF-16)
TestManagerGetContentProperty(1,5)
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL, header1V4.xml)
TestManagerGetContentProperty(1,6)
TestManagerGetContentProperty(0,"!3x8NSroVg4eXCzWqPU!BA==")
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL, header1.xml)
TestManagerGetContentProperty(1,2)
TestManagerGetContentProperty(0,"!3x8NSroVg4eXCzWqPU!BA==")
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL, DrmMgrHeaderPR.dat, BINARY)
TestManagerGetContentProperty(1,8)
TestManagerGetContentProperty(0,"lFmb2gxg0Cr5bfEnJXgJeA==")
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL, headerPR_NoELS.dat, BINARY)
TestManagerGetContentProperty(1,8)
TestManagerGetContentProperty(0,"lFmb2gxg0Cr5bfEnJXgJeA==")

' Should Fail With BigEndian BOM
TestManagerReinitialize(Reset)
TestManagerSetHeader(NORMAL, header1V4-UTF16BE-BOM.xml, UTF-16)=0x80041108 DRM_E_CH_INVALID_HEADER

11493:BVT: V2.4 header type can be succesfully "downgraded" to V2;
TestManagerSetHeader(NORMAL, V24header.xml, UTF-16)
TestManagerGetContentProperty(1,5)
TestManagerSetHeader(NORMAL, NULL, UTF-8, NULL, "V2")
TestManagerGetContentProperty(1,2)

11494:BVT: V4, V2 header types cannot be changed; V2.4 header type cannot be "upgraded"
TestManagerSetHeader(NORMAL, header1V4.xml)
TestManagerGetContentProperty(1,6)
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V2")=0x8004110FL (DRM_E_CH_INCOMPATIBLE_HEADER_TYPE)
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V2.4")=0x8004110FL (DRM_E_CH_INCOMPATIBLE_HEADER_TYPE)
' it is ok to change header type V4 to V4
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V4")
TestManagerGetContentProperty(1,6)
TestManagerReinitialize(Reset)
TestManagerSetHeader(NORMAL, header1.xml)
TestManagerGetContentProperty(1,2)
' it is ok to change header type V2 to V2
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V2")
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V2.4")=0x8004110FL (DRM_E_CH_INCOMPATIBLE_HEADER_TYPE)
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V4")=0x8004110FL (DRM_E_CH_INCOMPATIBLE_HEADER_TYPE)
TestManagerGetContentProperty(1,2)
TestManagerReinitialize(Reset)
TestManagerSetHeader(NORMAL, V24header.xml, UTF-16)
TestManagerGetContentProperty(1,5)
' it is ok to change header type V2.4 to V2.4
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V2.4")
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V4")=0x8004110FL (DRM_E_CH_INCOMPATIBLE_HEADER_TYPE)
TestManagerGetContentProperty(1,5)

11495:BVT: get content property (header type and PlayReady object data) for PlayReady object
TestCopyFuzzFile(files\DrmMgrHeaderPR.dat,DrmMgrHeaderPR.dat)
TestManagerSetHeader(NORMAL, DrmMgrHeaderPR.dat, BINARY)
TestManagerGetContentProperty(1,8)
TestManagerGetContentProperty(3,NULL)

11496:BVT: test V1 header: set property with autodetection and get device properties
TestManagerSetV1Header(NORMAL, V1Header.dat, FALSE)
TestManagerGetContentProperty(1,1)
TestManagerGetContentProperty(0,"0qqx5q4y2kOTJDJTZSnwUw==", BYTE)

11497:BVT: test V2 KID as a header: set property with autodetection and get device properties
TestManagerSetKID("0qqx5q4y2kOTJDJTZSnwUw==")
TestManagerGetContentProperty(1,3)
TestManagerGetContentProperty(0,"0qqx5q4y2kOTJDJTZSnwUw==")

11498:BVT:Drm_Content_GetProperty to retrieve the PRO
TestManagerSetHeader(NORMAL, DrmMgrHeaderPR.dat, BINARY)
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE)

11499:BVT: use get content property to retrieve kid from play ready object
TestManagerSetHeader(NORMAL, DrmMgrHeaderPR.dat, BINARY)
TestManagerGetContentProperty(1,8)
TestManagerGetContentProperty(0,"lFmb2gxg0Cr5bfEnJXgJeA==")

11500:BVT:use get content property to get the V2 Header from the AppContext
TestManagerSetHeader(NORMAL, header1.xml)
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V2")
TestManagerGetContentProperty(2,<WRMHEADER version="2.0.0.0"><DATA><LAINFO>http://www.contoso.com/licenseacq.asp</LAINFO><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CHECKSUM>P7ORpD2IpA==</CHECKSUM></DATA><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>dkZeJ1a23pBzQ8INbHzEnjCC+BMWRXc7+Fuc1HHHjbKvmoNIgYnaaQ==</VALUE></SIGNATURE></WRMHEADER>)

11501:BVT: get content property. DRM_CGP_CIPHER_TYPE
TestManagerSetHeader(NORMAL,V4CocktailHeader.xml)
TestManagerGetContentProperty(4,1)

11502:BVT: DRM_Content_Get_Property Test with NULL AppContext and property data Pointers
TestManagerSetHeader(NORMAL, DrmMgrHeaderPR.dat, BINARY)
TestManagerGetContentProperty(2, DrmMgrHeaderPR.dat, FILE, NULL_APPCONTEXT_PROPERTYDATAPTR) = -2147024809(0X80070057, E_INVALIDARG)

11503:BVT: DRM_Content_Get_Property Test with insufficient size
TestManagerSetHeader(NORMAL, DrmMgrHeaderPR.dat, BINARY)
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE, SMALL_CB_PROPERTY_DATA)
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE, NULL_CB_PROPERTY_DATA) = -2147024809 (0X80070057, E_INVALIDARG)
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE, ZERO_CB_PROPERTY_SIZE)

11504:BVT: DRM_Content_Get_Property Test with unsupported eProperty value
TestManagerSetHeader(NORMAL, DrmMgrHeaderPR.dat, BINARY)
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE)
TestManagerGetContentProperty(6, DrmMgrHeaderPR.dat, FILE) = -2147024809 (0X80070057, E_INVALIDARG) ' Unsupported eProperty value


11505:BVT: DRM_Content_Get_Property Test to validate the PlayReadyObject returned, v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE, EMPTY_PLAYREADYOBJECT) = 0X8004C32E ( DRM_E_TEST_UNEXPECTED_CONTENT_PROPERTY )
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE, INVALID_PLAYREADYOBJECT) = 0X8004C32E ( DRM_E_TEST_UNEXPECTED_CONTENT_PROPERTY )


115050:BVT: DRM_Content_Get_Property Test to validate the PlayReadyObject returned, v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE, EMPTY_PLAYREADYOBJECT) = 0X8004C32E ( DRM_E_TEST_UNEXPECTED_CONTENT_PROPERTY )
TestManagerGetContentProperty(3, DrmMgrHeaderPR.dat, FILE, INVALID_PLAYREADYOBJECT) = 0X8004C32E ( DRM_E_TEST_UNEXPECTED_CONTENT_PROPERTY )


11506:BVT:Test UpdateEmbeddedStore_Commit, v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerUpdateEmbeddedStoreCommit(NULL) = 0x80070057 (DRM_E_INVALIDARG)
TestManagerUpdateEmbeddedStoreCommit()


115060:BVT:Test UpdateEmbeddedStore_Commit, v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerUpdateEmbeddedStoreCommit(NULL) = 0x80070057 (DRM_E_INVALIDARG)
TestManagerUpdateEmbeddedStoreCommit()


11507:BVT: get content property. DRM_CGP_CIPHER_TYPE for Playready Object
TestManagerSetHeader( NORMAL, PRCocktailJazz.dat, BINARY)
TestManagerGetContentProperty(4,1)


1896:BVT: Validate that Drm_GetAdditionalResponseData parses Custom Data correctly for nonexception responses, v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TestCustomData)
TestManagerProcessResponse( Dump, Dump, 0, 0 )=2
TestProcessAdditionalData( SharedResponse, CustomData, CUSTOM )
CompareTestVariableToString(CustomData, "TestCustomData")
TestManagerReinitialize(Reset)


18960:BVT: Validate that Drm_GetAdditionalResponseData parses Custom Data correctly for nonexception responses, v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TestCustomData)
TestManagerProcessResponse( Dump, Dump, 0, 0 )=2
TestProcessAdditionalData( SharedResponse, CustomData, CUSTOM )
CompareTestVariableToString(CustomData, "TestCustomData")
TestManagerReinitialize(Reset)


11510:BVT: Test for DRM Envelope write PRO with Embedding leaf license in an Envelope, v4.0 header
TestCopyFile( files\EnvelopeForEmbeddingTest.eny, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI(AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( 0, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerSetRights(Play)
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,jazz_clear_wma.asf)
TestManagerCloseEnvelope(0)


115100:BVT: Test for DRM Envelope write PRO with Embedding leaf license in an Envelope, v4.1 header
TestCopyFile( files\EnvelopeForEmbeddingTest_41.eny, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI(OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( 0, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerSetRights(Play)
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,winter.JPG)
TestManagerCloseEnvelope(0)


11511:BVT: Test for DRM Envelope write PRO with Embedding a simple domain license in an Envelope, v4.0 header
TestCopyFile( files\EnvelopeForEmbeddingTest.eny, files\EnvelopeForEmbeddingTest_tmp2.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp2.eny )

ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore

VerifyEmbeddedLicenseAPI(AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})

TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp2.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( 0, files\EnvelopeForEmbeddingTest_tmp2.eny )
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE )
VerifyEmbeddedLicenseAPI(AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
TestManagerSetRights(Play)
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,jazz_clear_wma.asf)
TestManagerCloseEnvelope(0)


115110:BVT: Test for DRM Envelope write PRO with Embedding a simple domain license in an Envelope, v4.1 header
TestCopyFile( files\EnvelopeForEmbeddingTest_41.eny, files\EnvelopeForEmbeddingTest_tmp2.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp2.eny )

ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore

VerifyEmbeddedLicenseAPI(OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})

TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp2.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( 0, files\EnvelopeForEmbeddingTest_tmp2.eny )
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE )
VerifyEmbeddedLicenseAPI(OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
TestManagerSetRights(Play)
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,winter.JPG)
TestManagerCloseEnvelope(0)


11512:BVT: Test for DRM Envelope write PRO with Embedding leaf and simple domain bound licenses in an Envelope, v4.0 header
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )

' Join Account NeY1NDMyMTA5ODc2NTQzMg==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest2.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NeY1NDMyMTA5ODc2NTQzMg== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerReinitialize( Reset, FALSE, FALSE)
TestManagerInitialize(Dump)
TestCopyFile( files\EnvelopeForEmbeddingTest.eny, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerUpdateEmbeddedStore

VerifyEmbeddedLicenseAPI(AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
VerifyEmbeddedLicenseAPI(AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI(AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})

TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

'Bind to Embedded Domain Bound Simple
TestManagerReinitialize(Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerSetRights(Play)
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerInitializeEnvelopeRead(EnvelopeContextBuffer)
TestManagerReadEnvelope(EnvelopeContextBuffer,jazz_clear_wma.asf)
TestManagerCloseEnvelope(EnvelopeContextBuffer)

' Bind to Embedded Leaf bound to Domain Bound Root
TestManagerReinitialize(Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerSetRights(Play)
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerInitializeEnvelopeRead(EnvelopeContextBuffer)
TestManagerReadEnvelope(EnvelopeContextBuffer,jazz_clear_wma.asf)
TestManagerCloseEnvelope(EnvelopeContextBuffer)

' Bind to Embedded Leaf bound to Device bound root
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerSetRights(Play)
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerInitializeEnvelopeRead(EnvelopeContextBuffer)
TestManagerReadEnvelope(EnvelopeContextBuffer,jazz_clear_wma.asf)
TestManagerCloseEnvelope(EnvelopeContextBuffer)


115120:BVT: Test for DRM Envelope write PRO with Embedding leaf and simple domain bound licenses in an Envelope, v4.1 header
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )

' Join Account NeY1NDMyMTA5ODc2NTQzMg==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest2.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NeY1NDMyMTA5ODc2NTQzMg== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerReinitialize( Reset, FALSE, FALSE)
TestManagerInitialize(Dump)
TestCopyFile( files\EnvelopeForEmbeddingTest_41.eny, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerUpdateEmbeddedStore

VerifyEmbeddedLicenseAPI(OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
VerifyEmbeddedLicenseAPI(OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI(OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})

TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

'Bind to Embedded Domain Bound Simple
TestManagerReinitialize(Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerSetRights(Play)
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerInitializeEnvelopeRead(EnvelopeContextBuffer)
TestManagerReadEnvelope(EnvelopeContextBuffer,winter.JPG)
TestManagerCloseEnvelope(EnvelopeContextBuffer)

' Bind to Embedded Leaf bound to Domain Bound Root
TestManagerReinitialize(Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerSetRights(Play)
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerInitializeEnvelopeRead(EnvelopeContextBuffer)
TestManagerReadEnvelope(EnvelopeContextBuffer,winter.JPG)
TestManagerCloseEnvelope(EnvelopeContextBuffer)

' Bind to Embedded Leaf bound to Device bound root
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp3.eny )
TestManagerSetRights(Play)
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerInitializeEnvelopeRead(EnvelopeContextBuffer)
TestManagerReadEnvelope(EnvelopeContextBuffer,winter.JPG)
TestManagerCloseEnvelope(EnvelopeContextBuffer)


11513:BVT: Test writing to a corrupt envelope.
'As the header is valid the open file operation will pass
TestCopyFile( files\EnvelopeWithEmbeddedDomainInvalidDataTest1.eny, files\EnvelopeForEmbeddingInvalidDataTest_tmp.eny )
TestManagerOpenEnvelope( EnvelopeContext0, files\EnvelopeForEmbeddingInvalidDataTest_tmp.eny )
TestManagerSetRights(Play)
ProcessDomainJoinResponse( EnvelopeContext0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_ECB, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore  =  0x8004C026 ( DRM_E_DSTCORRUPTED )


11555:BVT: Add license to HDS. Pass PRO without licenses in embedded store. Validate PRO is updated with licenses. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense(AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})


115550:BVT: Add license to HDS. Pass PRO without licenses in embedded store. Validate PRO is updated with licenses. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense(OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})


11556:BVT: Pass PRO without licenses in embedded store. Validate PRO is not updated with licenses. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )


115560:BVT: Pass PRO without licenses in embedded store. Validate PRO is not updated with licenses. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )


1336:BVT: Add multiple license to HDS with only one matching PRO KID.  Validate PRO is updated with only correct license. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense(AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(BVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(CVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( BVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( CVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )


13360:BVT: Add multiple license to HDS with only one matching PRO KID.  Validate PRO is updated with only correct license. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense(OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(BVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(CVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( BVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( CVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )


1337:BVT: Add multiple license to HDS with several matching PRO KID.  Validate PRO is updated with only correct licenses. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense(AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(AVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )


13370:BVT: Add multiple license to HDS with several matching PRO KID.  Validate PRO is updated with only correct licenses. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense(OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(OWjhtr3u9k+rdo1ILY0rag==, {65227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {65227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919})= 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )


1333:BVT: Add multiple license to HDS with several matching PRO KID.  Validate PRO is updated with correct licenses and previous licenses in PRO are retained.
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedLeaf2.eny )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {55227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {65227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {FFED4E19-9459-A4B2-7696-DE1761089147}) ' original license in PRO
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}) ' new license in PRO
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}) ' new license in PRO
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {65227A28-3FEE-4EB5-AF13-F77A5258A919}) ' new license in PRO
VerifyEmbeddedLicenseAPI( DVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )


1334:BVT: Open envelope with empty embedded license store. Add licenses and write the PRO back to envelope file. v4.0 header
' Copy the envelope file and open
TestCopyFile( files\EnvelopeForEmbeddingTest.eny, files\EnvelopeForEmbeddingTest_TEMP.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP.eny )
' Add licenses and write PRO to file
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
' Reopen envelope and verify that licenses are embedded
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP.eny )
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No more licenses to embed
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerCloseEnvelope( EnvelopeContextBuffer )


13340:BVT: Open envelope with empty embedded license store. Add licenses and write the PRO back to envelope file. v4.1 header
' Copy the envelope file and open
TestCopyFile( files\EnvelopeForEmbeddingTest_41.eny, files\EnvelopeForEmbeddingTest_TEMP.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP.eny )
' Add licenses and write PRO to file
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {65227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {65227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
' Reopen envelope and verify that licenses are embedded
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP.eny )
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No more licenses to embed
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {65227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerCloseEnvelope( EnvelopeContextBuffer )


11579:BVT:Should use Embedded Store License instead of HDS License. v4.0 header
' Add Initial licenses
TestManagerCreateXMRLicenseFromPool( LEAF, XMRLicenses.xml, "11579 Leaf" )
TestManagerCreateXMRLicenseFromPool( SIMPLE, XMRLicenses.xml, "11579 Simple" )
TestManagerCreateXMRLicenseFromPool( ROOT, XMRLicenses.xml, "Base Root" )
TestManagerGenerateXMRResponse( LEAF, ROOT, SIMPLE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Copy the envelope file
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestCopyFile( files\EnvelopeForEmbeddingTest.eny, files\EnvelopeForEmbeddingTest_TEMP5.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP5.eny )
'Update the store and verify that the Leaf is included.
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP5.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
' Clear the HDS and Add the root
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerGenerateXMRResponse( ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerReinitialize( Reset, FALSE, FALSE  )
TestManagerInitialize( Dump )
'Open the Envelope and verify that we bind the the ELS license.
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP5.eny )
TestManagerSetRights(Play)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerInitializeEnvelopeRead(EnvelopeContextBuffer)
TestManagerReadEnvelope(EnvelopeContextBuffer,jazz_clear_wma.asf)
TestManagerCloseEnvelope(EnvelopeContextBuffer)


115790:BVT:Should use Embedded Store License instead of HDS License. v4.1 header
' Add Initial licenses
TestManagerCreateXMRLicenseFromPool( LEAF, XMRLicenses.xml, "115790 Leaf" )
TestManagerCreateXMRLicenseFromPool( SIMPLE, XMRLicenses.xml, "115790 Simple" )
TestManagerCreateXMRLicenseFromPool( ROOT, XMRLicenses.xml, "Base Root" )
TestManagerGenerateXMRResponse( LEAF, ROOT, SIMPLE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Copy the envelope file
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestCopyFile( files\EnvelopeForEmbeddingTest_41.eny, files\EnvelopeForEmbeddingTest_TEMP5.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP5.eny )
'Update the store and verify that the Leaf is included.
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP5.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
' Clear the HDS and Add the root
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerGenerateXMRResponse( ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerReinitialize( Reset, FALSE, FALSE  )
TestManagerInitialize( Dump )
'Open the Envelope and verify that we bind the the ELS license.
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP5.eny )
TestManagerSetRights(Play)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerInitializeEnvelopeRead(EnvelopeContextBuffer)
TestManagerReadEnvelope(EnvelopeContextBuffer,winter.JPG)
TestManagerCloseEnvelope(EnvelopeContextBuffer)


11571:FUNC: Have older license in the HDS and a full embedded store. Validate that the older license is not added to the store. v4.0 header
Test_SetRandomSeed( FIXED RandomSeedType )
' Add Initial licenses
TestManagerAddManyXMRLicensesFromPool( 50, xmrlicenses.xml, "Leaf with random LID with -500s IssueDate" )
TestManagerCreateXMRLicenseFromPool( LEAF1, xmrlicenses.xml, "Leaf with fixed LID with -10s IssueDate" )
TestManagerCreateXMRLicenseFromPool( LEAF2, xmrlicenses.xml, "Leaf with fixed LID with -5s IssueDate" )
TestManagerCreateXMRLicenseFromPool( ROOT,  xmrlicenses.xml, "Base Root" )
TestManagerGenerateXMRResponse( LEAF1, LEAF2, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Copy the envelope file
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestCopyFile( files\EnvelopeForEmbeddingTest.eny, files\EnvelopeForEmbeddingTest_TEMP2.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP2.eny )
'Update the store and verify that the two newest licenses are included.
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP2.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
' Reopen envelope and verify that licenses are embedded
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP2.eny )
'store a license with an issue date older than the ones in the ELS in the HDS
TestManagerCreateXMRLicenseFromPool( LEAF3, xmrlicenses.xml, "Leaf with fixed LID with -1000s IssueDate" )
TestManagerGenerateXMRResponse( LEAF3, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore = 0x1 (DRM_S_FALSE)  ' No updates to make to the embedded store.
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {75227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' license is not stored
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {65227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerCloseEnvelope( EnvelopeContextBuffer )


115710:FUNC: Have older license in the HDS and a full embedded store. Validate that the older license is not added to the store. v4.1 header
Test_SetRandomSeed( FIXED RandomSeedType )
' Add Initial licenses
TestManagerAddManyXMRLicensesFromPool( 50, xmrlicenses.xml, "Leaf with random LID with -500s IssueDate" )
TestManagerCreateXMRLicenseFromPool( LEAF1, xmrlicenses.xml, "Leaf with fixed LID with -10s IssueDate n2" )
TestManagerCreateXMRLicenseFromPool( LEAF2, xmrlicenses.xml, "Leaf with fixed LID with -5s IssueDate n2" )
TestManagerCreateXMRLicenseFromPool( ROOT,  xmrlicenses.xml, "Base Root" )
TestManagerGenerateXMRResponse( LEAF1, LEAF2, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Copy the envelope file
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestCopyFile( files\EnvelopeForEmbeddingTest_41.eny, files\EnvelopeForEmbeddingTest_TEMP2.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP2.eny )
'Update the store and verify that the two newest licenses are included.
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {65227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP2.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
' Reopen envelope and verify that licenses are embedded
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_TEMP2.eny )
'store a license with an issue date older than the ones in the ELS in the HDS
TestManagerCreateXMRLicenseFromPool( LEAF3, xmrlicenses.xml, "Leaf with fixed LID with -1000s IssueDate" )
TestManagerGenerateXMRResponse( LEAF3, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore = 0x1 (DRM_S_FALSE)  ' No updates to make to the embedded store.
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {75227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' license is not stored
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {65227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerCloseEnvelope( EnvelopeContextBuffer )


1335:BVT: Add multiple license to HDS with several matching PRO KID.  Validate PRO is updated with correct licenses and previous license in PRO is removed.
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {01227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -400)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {02227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -390)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {03227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -380)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {04227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -370)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {05227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -360)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {06227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -350)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {07227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -340)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {08227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -330)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {09227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -320)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {10227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -310)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {11227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -300)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {12227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -290)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {13227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -280)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {14227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -270)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {15227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -260)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {16227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -250)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {17227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -240)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {18227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -230)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {19227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -220)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {20227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -210)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {21227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -200)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {22227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -190)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {23227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -180)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {24227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -170)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {25227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -160)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {26227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -150)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {27227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -140)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {28227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -130)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {29227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -120)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {30227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -110)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {31227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -100)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {32227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -90)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {33227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -80)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {34227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -70)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {35227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -60)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {36227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -50)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {37227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -40)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {38227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -30)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {39227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -20)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {EFED4E19-9459-A4B2-7696-DE1761089146},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -10)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerAddManyXMRLicenses(30,AXMR000ITE0qe11DalmK0D==, RANDOM,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,NULL,NULL,NULL,NULL,60,NULL,NULL,NULL,NULL,NULL)
TestManagerAddManyXMRLicenses(30,!XMR000oVg4eXCzWqPU!BA==, RANDOM,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)

TestManagerReinitialize( Reset, FALSE, FALSE  )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedLeaf2.eny )
TestManagerUpdateEmbeddedStore
' It is expected for original license to get removed from PRO
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {FFED4E19-9459-A4B2-7696-DE1761089147}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' original license in PRO is removed
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {01227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Oldest License Not Stored
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {02227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Next Oldest License Not Stored
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {03227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Next Oldest License Not Stored
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {04227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Next Oldest License Not Stored
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {05227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Next Oldest License Not Stored
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {06227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Next Oldest License Not Stored
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {07227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Next Oldest License Not Stored
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {08227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Next Oldest License Not Stored
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {09227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {10227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {11227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {12227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {13227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {14227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {15227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {16227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {17227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {18227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {19227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {20227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {21227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {22227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {24227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {25227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {26227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {27227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {28227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {29227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {31227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {32227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {33227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {34227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {35227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {36227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {37227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {38227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {39227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {EFED4E19-9459-A4B2-7696-DE1761089146})
TestManagerCloseEnvelope( EnvelopeContextBuffer )

11662:BVT: Add multiple license to HDS. Only one of these licenses should match the KID in PRO. Pass PRO with many licenses
'Validate PRO is updated with correct licenses and previous license in PRO is removed.
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedLeaf2.eny )
TestManagerAddXMRLicense(MKQu3mhKRcy10AHia/h7/A==, {01227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {02227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {03227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {04227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {05227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {06227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {07227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {08227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {09227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {10227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {11227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {12227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {13227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {14227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {15227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {16227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {17227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {18227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {19227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {20227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {21227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {22227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {23227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {24227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {25227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {26227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {27227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {28227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {29227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {30227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {31227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {32227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {33227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {34227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {35227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {36227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {37227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {38227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {39227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {40227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {FFED4E19-9459-A4B2-7696-DE1761089147})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {01227A28-3FEE-4EB5-AF13-F77A5258A919})
'Only licenses for which KID matches are embedded
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {02227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {03227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {04227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {05227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {06227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {07227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {08227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {09227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {10227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {11227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {12227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {13227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {14227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {15227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {16227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {17227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {18227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {19227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {20227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {21227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {22227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {24227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {25227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {26227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {27227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {28227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {29227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {31227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {32227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {33227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {34227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {35227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {36227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {37227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {38227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {39227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {40227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

11566:BVT: Bind to an Embedded License
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedDomain2.eny )
TestManagerSetRights(Play)
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCloseEnvelope( EnvelopeContextBuffer )

11567:BVT: Store PRO with Embedded store. v4.0 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore

115670:BVT: Store PRO with Embedded store. v4.1 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore

11568:BVT: Store PRO without an Embedded store. Store operation should fail
TestManagerSetHeader( NORMAL, header1V4.xml )
TestManagerAddXMRLicense( !3x8NSroVg4eXCzWqPU!BA==, {48227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore = 0x8004110F ( DRM_E_CH_INCOMPATIBLE_HEADER_TYPE )

11569:BVT: Bind to content which contains embedded licenses, but none of EL are valid. Bind to valid license in HDS. v4.0 header
' Add licenses which are not currently valid
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 1800, NULL, NULL, NULL, NULL, 1500, NULL, NULL, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {7E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 1801, NULL, NULL, NULL, NULL, 1501, NULL, NULL, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
' Add valid license to HDS and Bind
TestManagerReinitialize( Reset )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {48227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Bind is successful for license in HDS
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )

115690:BVT: Bind to content which contains embedded licenses, but none of EL are valid. Bind to valid license in HDS. v4.1 header
' Add licenses which are not currently valid
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 1800, NULL, NULL, NULL, NULL, 1500, NULL, NULL, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {7E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 1801, NULL, NULL, NULL, NULL, 1501, NULL, NULL, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
' Add valid license to HDS and Bind
TestManagerReinitialize( Reset )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {48227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Bind is successful for license in HDS
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )

11570:BVT: Bind to a content header for which multiple licenses are valid in HDS and in the Embedded store. v4.0 header
' Expect the earliest added license is used.
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C68BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C78BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {48227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {49227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
' Verify that Bind hits the license added first
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL , {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )

115700:BVT: Bind to a content header for which multiple licenses are valid in HDS and in the Embedded store. v4.1 header
' Expect the earliest added license is used.
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C68BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C78BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {48227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {49227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
' Verify that Bind hits the license added first
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL , {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )

11580:BVT: API Drm_Content_UpdateEmbeddedStore. Test with zeroed embedded store. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore( ZEROED_EMBEEDED_STORE )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0X8004C024 ( DRM_E_DSTSLOTNOTFOUND )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

115800:BVT: API Drm_Content_UpdateEmbeddedStore. Test with zeroed embedded store. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore( ZEROED_EMBEEDED_STORE )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0X8004C024 ( DRM_E_DSTSLOTNOTFOUND )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

11576:BVT: API Drm_Content_UpdateEmbeddedStore. Test with invalid embedded store. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore( INVALID_EMBEDDED_STORE ) =  0x8004C026 ( DRM_E_DSTCORRUPTED )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0X8004C323 ( DRM_E_TEST_LICENSESTORE_NOT_OPEN )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

115760:BVT: API Drm_Content_UpdateEmbeddedStore. Test with invalid embedded store. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore( INVALID_EMBEDDED_STORE ) =  0x8004C026 ( DRM_E_DSTCORRUPTED )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0X8004C323 ( DRM_E_TEST_LICENSESTORE_NOT_OPEN )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

11572:BVT: API Drm_Content_UpdateEmbeddedStore. AppContext without PRO set in header. Setting V2 and V4 header
TestManagerSetHeader(NORMAL, header1.xml)
TestManagerGetContentProperty(1,2)
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V2")
TestManagerUpdateEmbeddedStore = 0x8004110F ( DRM_E_CH_INCOMPATIBLE_HEADER_TYPE )
TestManagerReinitialize( Reset )
TestManagerSetHeader(NORMAL, header1V4.xml)
TestManagerGetContentProperty(1,6)
TestManagerGetContentProperty(0,"!3x8NSroVg4eXCzWqPU!BA==")
TestManagerSetHeader(NORMAL, NULL, NULL, NULL, "V4")
TestManagerUpdateEmbeddedStore = 0x8004110F ( DRM_E_CH_INCOMPATIBLE_HEADER_TYPE )

11573:BVT: API Drm_Content_UpdateEmbeddedStore. AppContext without ELS in PRO
TestManagerSetHeader( NORMAL, header1.xml )
TestManagerGetContentProperty( 1, 2 )
TestManagerGetContentProperty( 0, "!3x8NSroVg4eXCzWqPU!BA==" )
TestManagerUpdateEmbeddedStore = 0x8004110F ( DRM_E_CH_INCOMPATIBLE_HEADER_TYPE )
TestManagerReinitialize( Drm_Reinitialize )
TestManagerSetHeader( NORMAL, header1V4.xml )
TestManagerGetContentProperty( 1, 6 )
TestManagerGetContentProperty( 0, "!3x8NSroVg4eXCzWqPU!BA==" )
TestManagerUpdateEmbeddedStore = 0x8004110F ( DRM_E_CH_INCOMPATIBLE_HEADER_TYPE )
TestManagerReinitialize( Drm_Reinitialize )
TestManagerSetHeader( NORMAL, header1.xml )
TestManagerGetContentProperty( 1, 2 )
TestManagerGetContentProperty( 0, "!3x8NSroVg4eXCzWqPU!BA==" )
TestManagerUpdateEmbeddedStore = 0x8004110F ( DRM_E_CH_INCOMPATIBLE_HEADER_TYPE )

11574:BVT: API Drm_Content_UpdateEmbeddedStore. HDS with one license for the KID in the PRO and the PRO has many licenses, Include Device Bound Licenses
'Add multiple license to HDS. Only one of these licenses should match the KID in PRO. Pass PRO with many licenses including Device Bound Licenses. Validate PRO is updated with correct licenses and previous license in PRO is removed 'For Device Bound Uplink is NULL
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedLeaf2.eny )
TestManagerAddXMRLicense( MKQu3mhKRcy10AHia/h7/A==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( MKQu3mhKRcy10AHia/h7/A==, {65227A28-3FEE-4EB5-AF13-F77A5258A919},YVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, 2099, NULL, NULL, NULL, NULL, NULL, 500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( MKQu3mhKRcy10AHia/h7/A==, {55227A28-3FEE-4EB5-AF13-F77A5258A919},ZVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( MKQu3mhKRcy10AHia/h7/A==, {01227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {02227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {03227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {04227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {05227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {06227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {07227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {08227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {20227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {21227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {22227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {23227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {24227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(NKQu3mhKRcy10AHia/h7/A==, {40227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {FFED4E19-9459-A4B2-7696-DE1761089147})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {01227A28-3FEE-4EB5-AF13-F77A5258A919})
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {65227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Lisence will not be added
VerifyEmbeddedLicenseAPI( MKQu3mhKRcy10AHia/h7/A==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND ) ' Lisence will not be added
'Only licenses for which KID matches are embedded
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {02227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {03227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {04227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {05227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {06227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {07227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {08227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {20227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {21227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {22227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {24227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
VerifyEmbeddedLicenseAPI( NKQu3mhKRcy10AHia/h7/A==, {40227A28-3FEE-4EB5-AF13-F77A5258A919})  = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize(Reset)

11575:BVT: API Drm_Content_UpdateEmbeddedStore. Test with NULL params. v4.0 header
TestManagerUpdateEmbeddedStore( NULL_APPCONTEXT_TEST ) = 0X80070057 ( E_INVALIDARG )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,20,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore( NULL_APPCONTEXT_TEST ) = 0X80070057 ( E_INVALIDARG )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0X8004C323 ( DRM_E_TEST_LICENSESTORE_NOT_OPEN )
TestManagerReinitialize(Reset)

115750:BVT: API Drm_Content_UpdateEmbeddedStore. Test with NULL params. v4.1 header
TestManagerUpdateEmbeddedStore( NULL_APPCONTEXT_TEST ) = 0X80070057 ( E_INVALIDARG )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,20,Acl2BY3ITE0qe11DalmK0D==,NULL,NULL,NULL,NULL,500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore( NULL_APPCONTEXT_TEST ) = 0X80070057 ( E_INVALIDARG )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0X8004C323 ( DRM_E_TEST_LICENSESTORE_NOT_OPEN )
TestManagerReinitialize(Reset)


11581:FUNC: Bind to content containing two leaf licenses and a domain bound simple license. v4.0 header
'The Leaves should be from different roots. This should validate binding to each embedded license
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )

TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {5E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerAddXMRLicense( mFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, mFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {7E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

'Bind To first Leaf
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {5E45CBCC-BF55-4144-AA5D-588221F46A1C} )

'Bind to second leaf
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( mFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {6E45CBCC-BF55-4144-AA5D-588221F46A1C} )

'Bind to Simple Domain
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {7E45CBCC-BF55-4144-AA5D-588221F46A1C} )
TestManagerReinitialize( Reset )


115810:FUNC: Bind to content containing two leaf licenses and a domain bound simple license. v4.1 header
'The Leaves should be from different roots. This should validate binding to each embedded license
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )

TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {5E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerAddXMRLicense( mFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, mFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {7E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerCloseEnvelope( EnvelopeContextBuffer )

'Bind To first Leaf
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {5E45CBCC-BF55-4144-AA5D-588221F46A1C} )

'Bind to second leaf
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( mFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {6E45CBCC-BF55-4144-AA5D-588221F46A1C} )

'Bind to Simple Domain
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {7E45CBCC-BF55-4144-AA5D-588221F46A1C} )
TestManagerReinitialize( Reset )


11582:FUNC: Bind to content with a simple domain-bound expiring license with a begin date in the future in the embedded store and a usable license in the HDS. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 1800, NULL, NULL, NULL, OMIT, 1500, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and add usable license in the HDSverify that Bind succeeds
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
Test_ChangeTimeSeconds ( 1501 ) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {6E45CBCC-BF55-4144-AA5D-588221F46A1C} )
TestManagerReinitialize( Reset )

115820:FUNC: Bind to content with a simple domain-bound expiring license with a begin date in the future in the embedded store and a usable license in the HDS. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 1800, NULL, NULL, NULL, OMIT, 1500, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and add usable license in the HDSverify that Bind succeeds
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
Test_ChangeTimeSeconds ( 1501 ) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {6E45CBCC-BF55-4144-AA5D-588221F46A1C} )
TestManagerReinitialize( Reset )

11583:FUNC: Bind to content with a leaf license with a root with a begin date in the future in the embedded store usable license in the HDS. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1500, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerReinitialize( Reset )

115830:FUNC: Bind to content with a leaf license with a root with a begin date in the future in the embedded store usable license in the HDS. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1500, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {45227A28-3FEE-4EB5-AF13-F77A5258A919} )
TestManagerReinitialize( Reset )

11584:FUNC: Bind to content with a simple domain-bound expiring license with a begin date in the future in the HDS and a usable license in the embedded store. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
'Add usable license
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and add simple domain-bound expiring license with a begin date in the future to HDS and verify that Bind succeeds for usable license in the embedded store
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, 1, NULL, NULL, NULL, NULL, NULL, 1800, NULL, NULL, NULL, NULL, 1500, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )

115840:FUNC: Bind to content with a simple domain-bound expiring license with a begin date in the future in the HDS and a usable license in the embedded store. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
'Add usable license
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and add simple domain-bound expiring license with a begin date in the future to HDS and verify that Bind succeeds for usable license in the embedded store
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, 1, NULL, NULL, NULL, NULL, NULL, 1800, NULL, NULL, NULL, NULL, 1500, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )

11585:FUNC: Bind to content with a leaf license with a root with a begin date in the future in the HDS and a usable license in the embedded store. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
'Add usable license
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and then add the leaf and root license to HDS and verify that Bind succeeds for usable license in the embedded store
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1500, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )

115850:FUNC: Bind to content with a leaf license with a root with a begin date in the future in the HDS and a usable license in the embedded store. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
'Add usable license
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and then add the leaf and root license to HDS and verify that Bind succeeds for usable license in the embedded store
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1500, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


11586:FUNC: The HDS contains a license which is not embedded yet and should be embedded. The updated embedded store is saved and used successfully. v4.0 header
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


115860:FUNC: The HDS contains a license which is not embedded yet and should be embedded. The updated embedded store is saved and used successfully. v4.1 header
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


11587:BVT: Update the PRO in an Envelope File using the Envelope Writing API. v4.0 header
TestCopyFile( files\EnvelopeForEmbeddingTest.eny, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


115870:BVT: Update the PRO in an Envelope File using the Envelope Writing API. v4.1 header
TestCopyFile( files\EnvelopeForEmbeddingTest_41.eny, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {55227A28-3FEE-4EB5-AF13-F77A5258A919})
TestManagerEnvelopeWritePlayReadyObject( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_tmp.eny )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


11588:FUNC: The license in the embedded store is expired. The HDS contains a nonexpired license for the content. v4.0 header
'UpdateEmbeddedStore should remove the expired license and store the usable one from the HDS
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 60, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerSetRights( Play )
Test_ChangeTimeSeconds ( 61 ) 
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C68BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C68BFCC3-08F1-4090-A8E5-F56809A732AA} )
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} ) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {C68BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


115880:FUNC: The license in the embedded store is expired. The HDS contains a nonexpired license for the content. v4.1 header
'UpdateEmbeddedStore should remove the expired license and store the usable one from the HDS
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 60, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerSetRights( Play )
Test_ChangeTimeSeconds ( 61 ) 
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C68BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C68BFCC3-08F1-4090-A8E5-F56809A732AA} )
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} ) = 0x8004c024 ( DRM_E_DSTSLOTNOTFOUND )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {C68BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


11589:FUNC: Process a license response and store the license in the embedded store. Delete the HDS.
'Create a new HDS with a different devcert/privkey. Ensure that the content is still usable	(will need to rejoin domain though)
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedDomain2.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( 56MpA2dbUGNpW+SlSZr4Sw==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedDomain2.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


11590:FUNC: Process a license response containing embeddable licenses. Use the License Ack flags to check for embeddable licenses and embed them. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )

TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, IGNORE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, 0X00000000 DRM_SUCCESS, 0 NO_FLAGS )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( AVhTknNlJOjo7F6b7HeNxg==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, 0X00000000 DRM_SUCCESS, 1 EMBED )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, COPY)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( AVhTknNlJOjo7F6b7HeNxg==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, 0X00000000 DRM_SUCCESS, 1 EMBED )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, g4igeNrthkuY6sPanDBfJA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( AVhTknNlJOjo7F6b7HeNxg==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, 0X00000000 DRM_SUCCESS, 1 EMBED )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( AVhTknNlJOjo7F6b7HeNxg==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, 0X00000000 DRM_SUCCESS, 0 NO_FLAGS )

VerifyEmbeddingBehavior( AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, IGNORE )
VerifyEmbeddingBehavior( AVhTknNlJOjo7F6b7HeNxg==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, MOVE )
VerifyEmbeddingBehavior( AVhTknNlJOjo7F6b7HeNxg==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, COPY )
VerifyEmbeddingBehavior( AVhTknNlJOjo7F6b7HeNxg==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, MOVE)
VerifyEmbeddingBehavior( AVhTknNlJOjo7F6b7HeNxg==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, IGNORE)
TestManagerUpdateEmbeddedStore
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


115900:FUNC: Process a license response containing embeddable licenses. Use the License Ack flags to check for embeddable licenses and embed them. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )

TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, IGNORE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, 0X00000000 DRM_SUCCESS, 0 NO_FLAGS )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( OWjhtr3u9k+rdo1ILY0rag==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, 0X00000000 DRM_SUCCESS, 1 EMBED )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, COPY)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( OWjhtr3u9k+rdo1ILY0rag==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, 0X00000000 DRM_SUCCESS, 1 EMBED )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, g4igeNrthkuY6sPanDBfJA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( OWjhtr3u9k+rdo1ILY0rag==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, 0X00000000 DRM_SUCCESS, 1 EMBED )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( OWjhtr3u9k+rdo1ILY0rag==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, 0X00000000 DRM_SUCCESS, 0 NO_FLAGS )

VerifyEmbeddingBehavior( OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, IGNORE )
VerifyEmbeddingBehavior( OWjhtr3u9k+rdo1ILY0rag==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, MOVE )
VerifyEmbeddingBehavior( OWjhtr3u9k+rdo1ILY0rag==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, COPY )
VerifyEmbeddingBehavior( OWjhtr3u9k+rdo1ILY0rag==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, MOVE)
VerifyEmbeddingBehavior( OWjhtr3u9k+rdo1ILY0rag==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, IGNORE)
TestManagerUpdateEmbeddedStore
TestManagerCloseEnvelope( EnvelopeContextBuffer )
TestManagerReinitialize( Reset )


11710:BVT: Open envelope file containing an embedded licence. Verify that bind and commit can be performed.
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedDomain2.eny )
TestManagerSetRights(Play)
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerReinitialize(Reset)

11711:BVT: Open envelope file not containing an embedded licence. Verify that bind and commit fails. Add license. Verify Bind/Commit succeed. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights(Play)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)= -2147172333(0X8004C013, DRM_E_LICENSENOTFOUND)
TestManagerCommit= -2147172337 (0X8004C00F, DRM_E_LICENSENOTBOUND)
TestManagerAddXMRLicense(AVhTknNlJOjo7F6b7HeNxg==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerReinitialize(Reset)

117110:BVT: Open envelope file not containing an embedded licence. Verify that bind and commit fails. Add license. Verify Bind/Commit succeed. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights(Play)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)= -2147172333(0X8004C013, DRM_E_LICENSENOTFOUND)
TestManagerCommit= -2147172337 (0X8004C00F, DRM_E_LICENSENOTBOUND)
TestManagerAddXMRLicense(OWjhtr3u9k+rdo1ILY0rag==, {45227A28-3FEE-4EB5-AF13-F77A5258A919},XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,NULL,500)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerReinitialize(Reset)

11712:BVT: Open envelope file containing corrupted embedded store.
'As the header is valid the open file operation will pass
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeWithEmbeddedDomainInvalidDataTest.eny )
TestManagerSetRights(Play)
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )= 0x02 ( DRM_S_MORE_DATA )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL) = 0X8004C013 ( DRM_E_LICENSENOTFOUND)
TestManagerReinitialize(Reset)

10713:BVT: compressed digital video restriction level 300
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<MID>pIKx8Wsy5aYRQN8LLIIcTQ==</MID><ONACTION type=\"Play\"><RESTRICTIONS><COMPRESSEDDIGITALVIDEO level='300'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(300,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)
EndIf

10714:BVT: uncompressed digital video restriction level 500
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><UNCOMPRESSEDDIGITALVIDEO level='500'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(100,500,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)
EndIf

10715:BVT: uncompressed digital audio restriction level 400
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><UNCOMPRESSEDDIGITALAUDIO level='400'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(100,100,100,100,400,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)
EndIf

10716:BVT: compressed digital audio restriction level 200
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><COMPRESSEDDIGITALAUDIO level='200'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(100,100,100,200,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)
EndIf

10717:BVT: analog video restriction level 500
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><ANALOGVIDEO level='500'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(100,100,500,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)
EndIf

10722:BVT: analog video restriction level 500, digital video level 400, digital audio 300
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><COMPRESSEDDIGITALAUDIO level='300'/><COMPRESSEDDIGITALVIDEO level='400'/><ANALOGVIDEO level='500'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(400,100,500,300,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)
EndIf

'the first call to callback function will fail since the level is 200. It will keep search a new license and the second one meets the level 500 condition.
10723:BVT: There are more than one licenses of the same KID. One with compressed digital video restriction level 300, one with level 500.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><COMPRESSEDDIGITALVIDEO level='200'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><COMPRESSEDDIGITALVIDEO level='500'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(500,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)
EndIf

50713:BVT: uncompressed digital video restriction level 300 (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 300 , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,300,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

50714:BVT: compressed digital video restriction level 500 (XMR)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 500 , NULL , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(500,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

50715:BVT: uncompressed digital audio restriction level 400 (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 400 , NULL , NULL , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,400,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

50716:BVT: compressed digital audio restriction level 200 (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 200 , NULL , NULL , NULL , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,200,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

50717:BVT: analog video restriction level 500 (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 500 , NULL , NULL , NULL , NULL , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,500,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

50722:BVT: analog video restriction level 500, uncompressed digital video level 400, compressed digital audio 300 (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 500 , 300 , NULL , NULL , 400 , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,400,500,300,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

'the first call to callback function will fail since the level is 200. It will keep search a new license and the second one meets the level 400 condition.
50723:BVT: There are more than one licenses of the same KID. One with uncompressed digital video restriction level 300, one with level 400. (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 300 , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 400 , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,400,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

11239:BVT: get license data on the right of play back
If(WMDRMSupported)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(Reset)
EndIf

11250:DRT:Validate that Bind picks the highest priority license for XML Licenses
If(WMDRMSupported)
Test_SetRandomSeed( FIXED )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{AB08604A-8F67-428e-9A6B-3285CB8D10C1},2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>90</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSELECT><CONDITION><![CDATA[(secstate.PlayCount > 0)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,0)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{19F22F6D-CF8E-4f33-BB4D-3E8107D670FA},2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>100</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION><ONSELECT><CONDITION><![CDATA[(machine.datetime < secstate.ExpirationDate)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,0,NULL,17520)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerAddManyLicenses(10,700000000,!3x8NSroVg4eXCzWqPU!BA==,RANDOM, 0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL, NULL, {19F22F6D-CF8E-4f33-BB4D-3E8107D670FA})
TestManagerCommit
' Expire the highest priority license, should get the next highest one.
'Change Time by two years + 2 days
Test_ChangeTimeSeconds(63244800)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL, NULL, {AB08604A-8F67-428e-9A6B-3285CB8D10C1})
EndIf

9932:BVT: bind multiple times to reduce the play count.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><CONDITION><![CDATA[secstate.PlayCount > 0]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit(0 don't overwrite decrypt context, Dump)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(Reset)
EndIf

9933:BVT: decrypt a regular length of encrypted data
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg==  )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4}, 0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NULL )
TestManagerReinitialize(Reset)
EndIf

9934:BVT: bind multiple times to reduce the copy count.
If(WMDRMSupported)
TestManagerSetRights(Copy)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Copy\"><CONDITION><![CDATA[(secstate.CopyCount >0)?1:(secstate.drmreason=11;0)]]></CONDITION><ACTION><![CDATA[secstate.CopyCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[!exists(secstate.CopyCount)?secstate.CopyCount=2:0;!exists(secstate.BeginCopyCount)?secstate.BeginCopyCount=2:0]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit(0 don't overwrite decrypt context, Dump)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerReinitialize(Reset)
EndIf

59933:BVT: decrypt a regular length of encrypted data (XMR)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL )
TestManagerReinitialize(Reset)

11240:BVT: generate challenge having the right of playback
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
TestManagerReinitialize(Reset)
EndIf

51240:BVT: generate challenge with v4header containing uplink node
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,uplinkHeaderV4.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseuiacq.asp,39,NULL,0,0)
TestManagerReinitialize(Reset)

51241:BVT: generate challenge with v4header containing uplink node and with uplink KID data
If(WMDRMSupported)
TestManagerInitResponse
TestManagerAddLicenseToResponse(4wEEq1ixJEC1na7nmgJT5g==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>10</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSELECT><CONDITION><![CDATA[(secstate.PlayCount > 0)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,2)
TestManagerAddLicenseToResponse(ftRronf2pk+10NT1uvEerQ==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>15</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION><ONSELECT><CONDITION><![CDATA[(machine.datetime < secstate.ExpirationDate)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,1,4wEEq1ixJEC1na7nmgJT5g==, 17520)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,uplinkHeaderV4.xml)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseuiacq.asp,39,NULL,0,0)
EndIf

51242:BVT: generate challenge with v2header containing uplink node
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,uplinkHeaderV2.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0, http://www.contoso.com/E2Etests/MyGenLicChain.asp ,49,http://www.contoso.com/E2Etests/MyGenLicChain.asp ,49,NULL,0,0)
EndIf

51243:BVT: generate challenge with v2header containing uplink node and with uplink KID data
If(WMDRMSupported)
TestManagerInitResponse
TestManagerAddLicenseToResponse(4wEEq1ixJEC1na7nmgJT5g==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>10</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSELECT><CONDITION><![CDATA[(secstate.PlayCount > 0)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,2)
TestManagerAddLicenseToResponse(isVVM+1IM0Cn6NTqoJBWmw==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>15</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION><ONSELECT><CONDITION><![CDATA[(machine.datetime < secstate.ExpirationDate)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,1,4wEEq1ixJEC1na7nmgJT5g==, 17520)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,uplinkHeaderV2.xml)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0, http://www.contoso.com/E2Etests/MyGenLicChain.asp ,49,http://www.contoso.com/E2Etests/MyGenLicChain.asp ,49,NULL,0,0)
EndIf

51244:BVT: Check that the begin date operates properly (XMR)
TestManagerSetRights(Play)
TestManagerSetKID(KQNXs2nvVdiUypvlgcROrA==)
TestManagerAddXMRLicense(KQNXs2nvVdiUypvlgcROrA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,100)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0x8004C00B DRM_E_RIGHTSNOTAVAILABLE
TestManagerGetLicenseData(Dump,3,Dump,1,0)
Test_ChangeTimeSeconds(101)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)

51245:BVT: Check that the end date operates properly (XMR)
TestManagerSetRights(Play)
TestManagerSetKID(KQNXs2nvVdiUypvlgcROrA==)
TestManagerAddXMRLicense(KQNXs2nvVdiUypvlgcROrA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,NULL,100,NULL,NULL,NULL,NULL,NULL)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)
Test_ChangeTimeSeconds(101)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0x8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)

51246:BVT: Check that the combination of begin and end dates operate properly (XMR)
TestManagerSetRights(Play)
TestManagerSetKID(KQNXs2nvVdiUypvlgcROrA==)
TestManagerAddXMRLicense(KQNXs2nvVdiUypvlgcROrA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,NULL,400,NULL,NULL,NULL,NULL,100)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0x8004C00B DRM_E_RIGHTSNOTAVAILABLE
TestManagerGetLicenseData(Dump,3,Dump,1,0)
Test_ChangeTimeSeconds(101)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)
Test_ChangeTimeSeconds(100)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
Test_ChangeTimeSeconds(200)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0x8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
Test_ChangeTimeSeconds(200)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0x8004C009 DRM_E_LICENSEEXPIRED

11241:BVT: process response when it contains one license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000509-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf

10333:BVT: Bind succeeds when the right exists in both leaf and root license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf


50333:BVT: Bind succeeds when the right exists in both leaf and root license (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , Acl2BY3ITE0qe11DalmK0D== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerAddXMRLicense( Acl2BY3ITE0qe11DalmK0D== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL )

10334:BVT: Bind should use the next valid root license if the first root expires
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA6},64,"<ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION><ONSELECT><CONDITION><![CDATA[machine.datetime < secstate.ExpirationDate]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2,NULL,17520)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},64,"<ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
VerifySymmetricOptimizations(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA6},3 DRM_SYMMOPT_STATUS_COMPLETE)
VerifySymmetricOptimizations(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},3 DRM_SYMMOPT_STATUS_COMPLETE)
VerifySymmetricOptimizations(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},2 DRM_SYMMOPT_STATUS_PARTIAL)
'Change Time by two years + 2 days
Test_ChangeTimeSeconds(63244800)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
VerifySymmetricOptimizations(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},3 DRM_SYMMOPT_STATUS_COMPLETE)
TestManagerCommit
EndIf


10350:BVT:Cached Block Headers should be cleared after calling Drm_ClearAllCaches
TestManagerClearHDSCaches
TestManagerReinitialize(Reset)

10730:BVT:Symmetrically optimized XMR license in V3 response (device-bound ILA only)
TestManagerSetRights( Play )
TestManagerInitResponse( V3, OptNewSLK )
TestManagerCreateXMRLicense( LEAF,   lFmb2gxg0Cr5bfEnJXgJeA==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -10 )
TestManagerCreateXMRLicense( SIMPLE, lFmb2gxg0Cr5bfEnJXgJeA==, {D085CDAA-85EB-42AB-B13F-DD69EC15B327}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerCreateXMRLicense( ROOT,   Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerGenerateXMRResponse( LEAF, ROOT, SIMPLE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {D085CDAA-85EB-42AB-B13F-DD69EC15B327} )
VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0X8004C31E (DRM_E_TEST_UNEXPECTED_OUTPUT)
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit

10732:BVT:Symmetrically optimized XMR license in V3 response (domain-bound ILA only)
TestManagerSetRights( Play )
TestManagerInitResponse( V3, OptNewSLK )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, {422C284C-7963-47FF-8435-23FB6552196E}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {422C284C-7963-47FF-8435-23FB6552196E} )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerReinitialize(Reset)

10733:BVT:Verify XML License from v2 DLA gets Symmetrically Optimized on store.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse( V2, NULL )
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},64,"<ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
VerifySymmetricOptimizations( Acl2BY3ITE0qe11DalmK0D==, {00000508-0000-0010-8000-00AA006D2EA5},3 DRM_SYMMOPT_STATUS_COMPLETE )
VerifySymmetricOptimizations( !3x8NSroVg4eXCzWqPU!BA==, {00000508-0000-0010-8000-00AA006D2EA4},2 DRM_SYMMOPT_STATUS_PARTIAL )
'Leaf license is fully optimized and re-signed on Bind
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
VerifySymmetricOptimizations( !3x8NSroVg4eXCzWqPU!BA==, {00000508-0000-0010-8000-00AA006D2EA4},3 DRM_SYMMOPT_STATUS_COMPLETE )
TestManagerCommit
'Verify that the license is still usable after being re-signed
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf

10734:BVT:Verify XMR License from v3 DLA gets Symmetrically Optimized on store.
TestManagerSetRights(Play)
TestManagerInitResponse( V3, NULL )
TestManagerCreateXMRLicense( LEAF,   lFmb2gxg0Cr5bfEnJXgJeA==, {55227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, -10 )
TestManagerCreateXMRLicense( SIMPLE, lFmb2gxg0Cr5bfEnJXgJeA==, {D085CDAA-85EB-42AB-B13F-DD69EC15B327}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerCreateXMRLicense( ROOT,   Acl2BY3ITE0qe11DalmK0D==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerGenerateXMRResponse( LEAF, ROOT, SIMPLE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {D085CDAA-85EB-42AB-B13F-DD69EC15B327} )
VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {55227A28-3FEE-4EB5-AF13-F77A5258A919} ) = 0X8004C31E (DRM_E_TEST_UNEXPECTED_OUTPUT)
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
TestManagerReinitialize(Reset)


10735:BVT:Multiple Symmetrically optimized XMR license in V3 response (domain-bound ILA only)
TestManagerSetRights( Play )
TestManagerInitResponse( V3, OptNewSLK )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerCreateXMRLicense( LICENSE_1, lFmb2gxg0Cr5bfEnJXgJeA==, {D52E05C4-5D2F-4F60-872E-49A92CF3AF76}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerCreateXMRLicense( LICENSE_2, nz/NueNnHDgdPwHsbrQhIw==, {B8896AAF-3903-4047-A476-34334A67CF8D}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerCreateXMRLicense( LICENSE_3, uzzGM1R73USJvmDpVC0Wvg==, {E0D6377E-832B-4D13-B6D3-EE54F3294F0C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerGenerateXMRResponse( LICENSE_1, LICENSE_2, LICENSE_3 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {D52E05C4-5D2F-4F60-872E-49A92CF3AF76} )
VerifySymmetricOptimizations( nz/NueNnHDgdPwHsbrQhIw==, {B8896AAF-3903-4047-A476-34334A67CF8D} )
VerifySymmetricOptimizations( uzzGM1R73USJvmDpVC0Wvg==, {E0D6377E-832B-4D13-B6D3-EE54F3294F0C} )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)

TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)

10736:BVT:Multiple Symmetrically optimized XMR license in V3 response (device-bound ILA only)
TestManagerSetRights( Play )
TestManagerInitResponse( V3, OptNewSLK )
TestManagerCreateXMRLicense( LICENSE_1, lFmb2gxg0Cr5bfEnJXgJeA==, {D52E05C4-5D2F-4F60-872E-49A92CF3AF76}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerCreateXMRLicense( LICENSE_2, nz/NueNnHDgdPwHsbrQhIw==, {B8896AAF-3903-4047-A476-34334A67CF8D}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerCreateXMRLicense( LICENSE_3, TJv0D6CV70SNTiAgs5ZHkQ==, {A55E69C4-698E-4F81-9F7E-8007D42A6481}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerGenerateXMRResponse( LICENSE_1, LICENSE_2, LICENSE_3 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {D52E05C4-5D2F-4F60-872E-49A92CF3AF76} )
VerifySymmetricOptimizations( nz/NueNnHDgdPwHsbrQhIw==, {B8896AAF-3903-4047-A476-34334A67CF8D} )
VerifySymmetricOptimizations( TJv0D6CV70SNTiAgs5ZHkQ==, {A55E69C4-698E-4F81-9F7E-8007D42A6481} )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

10737:BVT:Multiple Symmetrically optimized XMR license in V3 response (device and domain bound ILA)
TestManagerSetRights( Play )
TestManagerInitResponse( V3, OptNewSLK )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )

TestManagerCreateXMRLicense( LICENSE_1, lFmb2gxg0Cr5bfEnJXgJeA==, {D52E05C4-5D2F-4F60-872E-49A92CF3AF76}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )
TestManagerCreateXMRLicense( LICENSE_2, nz/NueNnHDgdPwHsbrQhIw==, {B8896AAF-3903-4047-A476-34334A67CF8D}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerCreateXMRLicense( LICENSE_3, uzzGM1R73USJvmDpVC0Wvg==, {E0D6377E-832B-4D13-B6D3-EE54F3294F0C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerCreateXMRLicense( LICENSE_4, TJv0D6CV70SNTiAgs5ZHkQ==, {A55E69C4-698E-4F81-9F7E-8007D42A6481}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL )

TestManagerGenerateXMRResponse( LICENSE_1, LICENSE_2, LICENSE_3, LICENSE_4 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {D52E05C4-5D2F-4F60-872E-49A92CF3AF76} )
VerifySymmetricOptimizations( nz/NueNnHDgdPwHsbrQhIw==, {B8896AAF-3903-4047-A476-34334A67CF8D} )
VerifySymmetricOptimizations( TJv0D6CV70SNTiAgs5ZHkQ==, {A55E69C4-698E-4F81-9F7E-8007D42A6481} )
VerifySymmetricOptimizations( uzzGM1R73USJvmDpVC0Wvg==, {E0D6377E-832B-4D13-B6D3-EE54F3294F0C} )

TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Reset)

'10740:BVT: Process V4 simple license response with extended restriction on Play right with binary state and must understand
'TestManagerInitResponse
'LoadResponseFromFile( extPlayRestrictionBinaryState.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetRights( Play )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,1)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerCommit
'TestManagerReinitialize(Reset)


10741:BVT: Embed a license in a PlayReady Object from an Envelope file. v4.0 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )


107410:BVT: Embed a license in a PlayReady Object from an Envelope file. v4.1 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )


10744: BVT: Embed a leaf license and Bind to the leaf, where the root is stored in the HDS. v4.0 header
TestManagerInitResponse

' Process the chain and embed the leaf license
TestManagerAddXMRLicense( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {F1539FC5-2274-4CEF-9104-13F2694C9BC0}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, AH+03juKbUGbHl1V/QIwVQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE )
TestManagerReinitialize( AppContext, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
' Attempt to bind without valid root license in the HDS
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, NULL )=DRM_E_UPLINKLICENSENOTFOUND
' Create and process a root license (do not embed)
TestManagerAddXMRLicense( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Bind to the license chain
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {F1539FC5-2274-4CEF-9104-13F2694C9BC0} )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )


107440: BVT: Embed a leaf license and Bind to the leaf, where the root is stored in the HDS. v4.1 header
TestManagerInitResponse

' Process the chain and embed the leaf license
TestManagerAddXMRLicense( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {F1539FC5-2274-4CEF-9104-13F2694C9BC0}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, AH+03juKbUGbHl1V/QIwVQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE )
TestManagerReinitialize( AppContext, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
' Attempt to bind without valid root license in the HDS
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, NULL )=DRM_E_UPLINKLICENSENOTFOUND
' Create and process a root license (do not embed)
TestManagerAddXMRLicense( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Bind to the license chain
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL, NULL, {F1539FC5-2274-4CEF-9104-13F2694C9BC0} )
TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )


10745:BVT: Store Licenses with Different Embedding Policies
'Set IGNORE
TestManagerAddXMRLicense( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, IGNORE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, 0X00000000 DRM_SUCCESS, 0 NO_FLAGS )

'Set MOVE
TestManagerAddXMRLicense( qy9f0gaY/U2G65avQC/0ag==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( qy9f0gaY/U2G65avQC/0ag==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, 0X00000000 DRM_SUCCESS, 1 EMBED )

'Set COPY
TestManagerAddXMRLicense( RVGm0ay2nk2pr4xtltmZlQ==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, COPY)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( RVGm0ay2nk2pr4xtltmZlQ==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, 0X00000000 DRM_SUCCESS, 1 EMBED )

'Leaf is Move
TestManagerAddXMRLicense( /Oy3aHW+H0O0zR0Afrfn9g==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, g4igeNrthkuY6sPanDBfJA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( /Oy3aHW+H0O0zR0Afrfn9g==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, 0X00000000 DRM_SUCCESS, 1 EMBED )

'Simple Device Bound License is Ignore
TestManagerAddXMRLicense( mI7gkrapwEeLhHSF7f+oEw==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( mI7gkrapwEeLhHSF7f+oEw==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, 0X00000000 DRM_SUCCESS, 0 NO_FLAGS )

VerifyEmbeddingBehavior( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, IGNORE )
VerifyEmbeddingBehavior( qy9f0gaY/U2G65avQC/0ag==, {928103DD-A882-4b2f-A09F-93242DE2E06C}, MOVE )
VerifyEmbeddingBehavior( RVGm0ay2nk2pr4xtltmZlQ==, {3EFAE5FA-A923-4afc-A747-F728EFA4D4F6}, COPY )
VerifyEmbeddingBehavior( /Oy3aHW+H0O0zR0Afrfn9g==, {DB3DB663-836A-43e7-B0C3-F7D16187172F}, MOVE)
VerifyEmbeddingBehavior( mI7gkrapwEeLhHSF7f+oEw==, {4DDB605F-0022-48ad-BE2B-20A09B43710A}, IGNORE)


10746:BVT: Embed multiple licenses in the same Envelope file (separate embed calls) and verify bind to each one. v4.0 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet

' Process and embed the first license
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )

' Process and embed the second license
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NeY1NDMyMTA5ODc2NTQzMg== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )

' Clear HDS and verify that Bind succeeds with domain cert #1
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, NULL ) = 0X8004C507 ( DRM_E_DOMAIN_BIND_LICENSE )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerReinitialize( Reset, TRUE, FALSE )

' Clear HDS and verify that Bind succeeds with domain cert #2
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, NULL ) = 0X8004C507 ( DRM_E_DOMAIN_BIND_LICENSE )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {6E45CBCC-BF55-4144-AA5D-588221F46A1C} )
TestManagerCommit

TestManagerCloseEnvelope( EnvelopeContextBuffer )


107460:BVT: Embed multiple licenses in the same Envelope file (separate embed calls) and verify bind to each one. v4.1 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet

' Process and embed the first license
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )

' Process and embed the second license
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NeY1NDMyMTA5ODc2NTQzMg== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )

' Clear HDS and verify that Bind succeeds with domain cert #1
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, NULL ) = 0X8004C507 ( DRM_E_DOMAIN_BIND_LICENSE )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerReinitialize( Reset, TRUE, FALSE )

' Clear HDS and verify that Bind succeeds with domain cert #2
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, NULL ) = 0X8004C507 ( DRM_E_DOMAIN_BIND_LICENSE )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {6E45CBCC-BF55-4144-AA5D-588221F46A1C} )
TestManagerCommit

TestManagerCloseEnvelope( EnvelopeContextBuffer )


10747:BVT: Embed multiple licenses in the same Envelope file (one embed call) and verify bind to each one. v4.0 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet

' Process and embed both licenses
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NeY1NDMyMTA5ODc2NTQzMg== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )

' Clear HDS and verify that Bind succeeds with domain cert #1
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, NULL ) = 0X8004C507 ( DRM_E_DOMAIN_BIND_LICENSE )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerReinitialize( Reset, TRUE, FALSE )

' Clear HDS and verify that Bind succeeds with domain cert #2
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, NULL ) = 0X8004C507 ( DRM_E_DOMAIN_BIND_LICENSE )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {6E45CBCC-BF55-4144-AA5D-588221F46A1C} )
TestManagerCommit

TestManagerCloseEnvelope( EnvelopeContextBuffer )


107470:BVT: Embed multiple licenses in the same Envelope file (one embed call) and verify bind to each one. v4.1 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet

' Process and embed both licenses
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NeY1NDMyMTA5ODc2NTQzMg== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )

' Clear HDS and verify that Bind succeeds with domain cert #1
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, NULL ) = 0X8004C507 ( DRM_E_DOMAIN_BIND_LICENSE )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {C58BFCC3-08F1-4090-A8E5-F56809A732AA} )
TestManagerCommit
TestManagerReinitialize( Reset, TRUE, FALSE )

' Clear HDS and verify that Bind succeeds with domain cert #2
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, NULL ) = 0X8004C507 ( DRM_E_DOMAIN_BIND_LICENSE )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest2.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function, NULL, {6E45CBCC-BF55-4144-AA5D-588221F46A1C} )
TestManagerCommit

TestManagerCloseEnvelope( EnvelopeContextBuffer )


10748:BVT: Add Embedded License to PRO and Retrieve, v4.0 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )

TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
'TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )


107480:BVT: Add Embedded License to PRO and Retrieve, v4.1 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )

TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
'TestManagerCommit
TestManagerCloseEnvelope( EnvelopeContextBuffer )


10749:BVT: Add Multiple licenses to PRO, v4.0 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet

' Process and embed the first licenses (simple, non-domain-bound)
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A0}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A1}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A2}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A3}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A4}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A5}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A6}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A7}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A8}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A9}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AB}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AC}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AD}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AE}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AF}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B0}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B1}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Domain-bound licenses
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B2}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, MOVE, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' License chain
TestManagerAddXMRLicense( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B3}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, AH+03juKbUGbHl1V/QIwVQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A0})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A1})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A2})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A3})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A4})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A5})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A6})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A7})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A8})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A9})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AB})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AC})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AD})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AE})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AF})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B0})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B1})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B2})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B3})

' Clear domain store and HDS
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )

' Process and embed the last licenses
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B4}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B5}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B6}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B7}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B8}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore

' Verify the embedded licenses
' A0 and A1 and A2 have been bumped off due to last in reverse order.
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A3})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A4})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A5})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A6})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A7})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A8})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732A9})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AB})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AC})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AD})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AE})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732AF})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B0})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B1})
' B2 has been bumped off due to invalid domain
' B3 has been bumped off due to missing root license
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B2})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B3})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)
' B4 and B5 have replaced the bumped off licenses
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B4})
VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B5})
' B6-B8 were not added
'VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B6})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)
'VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B7})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)
'VerifyEmbeddedLicenseAPI( AVhTknNlJOjo7F6b7HeNxg==, {C58BFCC3-08F1-4090-A8E5-F56809A732B8})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)

TestManagerReinitialize( Reset, TRUE )
TestManagerCloseEnvelope( EnvelopeContextBuffer )


107490:BVT: Add Multiple licenses to PRO, v4.1 header
TestManagerInitResponse
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerUpdateEmbeddedStore = 0x00 ( DRM_SUCCESS ) ' Creates the embedded store
TestManagerUpdateEmbeddedStore = 0x01 ( DRM_S_FALSE ) ' No license to embed yet

' Process and embed the first licenses (simple, non-domain-bound)
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A0}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A1}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A2}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A3}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A4}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A5}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A6}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A7}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A8}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A9}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AB}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AC}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AD}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AE}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AF}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B0}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B1}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Domain-bound licenses
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat )=0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B2}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, MOVE, NjU0MzIxMDk4NzY1NDMyMQ==  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' License chain
TestManagerAddXMRLicense( AH+03juKbUGbHl1V/QIwVQ==, {45227A28-3FEE-4EB5-AF13-F77A5258A919}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B3}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, AH+03juKbUGbHl1V/QIwVQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerUpdateEmbeddedStore
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A0})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A1})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A2})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A3})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A4})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A5})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A6})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A7})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A8})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A9})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AB})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AC})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AD})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AE})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AF})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B0})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B1})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B2})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B3})

' Clear domain store and HDS
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )

' Process and embed the last licenses
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B4}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B5}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B6}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B7}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B8}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR, MOVE )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore

' Verify the embedded licenses
' A0 and A1 and A2 have been bumped off due to last in reverse order.
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A3})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A4})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A5})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A6})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A7})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A8})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732A9})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AA})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AB})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AC})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AD})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AE})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732AF})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B0})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B1})
' B2 has been bumped off due to invalid domain
' B3 has been bumped off due to missing root license
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B2})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B3})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)
' B4 and B5 have replaced the bumped off licenses
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B4})
VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B5})
' B6-B8 were not added
'VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B6})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)
'VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B7})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)
'VerifyEmbeddedLicenseAPI( OWjhtr3u9k+rdo1ILY0rag==, {C58BFCC3-08F1-4090-A8E5-F56809A732B8})=0x8004C024 (DRM_E_HDS_SLOTNOTFOUND)

TestManagerReinitialize( Reset, TRUE )
TestManagerCloseEnvelope( EnvelopeContextBuffer )


10750:BVT: Bind to content with a simple domain-bound non-expiring license in the embeded store, v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and verify that Bind succeeds
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerReinitialize( Reset )

107500:BVT: Bind to content with a simple domain-bound non-expiring license in the embeded store, v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and verify that Bind succeeds
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerReinitialize( Reset )

10751:BVT: Bind to content with a simple domain-bound expiring license in the embeded store, v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 180, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and verify that Bind succeeds
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )  
Test_ChangeTimeSeconds (181) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )= 0X8004C009 (DRM_E_LICENSEEXPIRED) ' As license has expired
TestManagerReinitialize( Reset )

107510:BVT: Bind to content with a simple domain-bound expiring license in the embeded store, v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 180, NULL, NULL, NULL, OMIT, NULL, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and verify that Bind succeeds
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )  
Test_ChangeTimeSeconds (181) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )= 0X8004C009 (DRM_E_LICENSEEXPIRED) ' As license has expired
TestManagerReinitialize( Reset )

10752:BVT: Bind to content with a simple domain-bound expiring license with a begining date in future in the embeded store, v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 1800, NULL, NULL, NULL, OMIT, 1500, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and verify that Bind succeeds
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) = 0x8004C00B ( DRM_E_RIGHTSNOTAVAILABLE ) ' As begin date of the license is in future
Test_ChangeTimeSeconds (1501) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
Test_ChangeTimeSeconds (300) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )= 0X8004C009 (DRM_E_LICENSEEXPIRED) ' As license has expired
TestManagerReinitialize( Reset )

107520:BVT: Bind to content with a simple domain-bound expiring license with a begining date in future in the embeded store, v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 1800, NULL, NULL, NULL, OMIT, 1500, AES_128_CTR, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and verify that Bind succeeds
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) = 0x8004C00B ( DRM_E_RIGHTSNOTAVAILABLE ) ' As begin date of the license is in future
Test_ChangeTimeSeconds (1501) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
Test_ChangeTimeSeconds (300) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )= 0X8004C009 (DRM_E_LICENSEEXPIRED) ' As license has expired
TestManagerReinitialize( Reset )

10753:BVT: Bind to content with a leaf license with a root with a begin date in the future in the embedded store, v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1500, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and then add the root license to HDS and verify that Bind succeeds for Leaf in Embedded Store
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1500, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) = DRM_E_UPLINKLICENSENOTFOUND ' As begin date of the root is in future
Test_ChangeTimeSeconds (1501) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )

107530:BVT: Bind to content with a leaf license with a root with a begin date in the future in the embedded store, v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1500, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and then add the root license to HDS and verify that Bind succeeds for Leaf in Embedded Store
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1500, AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) = DRM_E_UPLINKLICENSENOTFOUND ' As begin date of the root is in future
Test_ChangeTimeSeconds (1501) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )

10754:BVT: Bind to content with a leaf license in the embedded store. This assumes no Root, so Bind should fail. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) = 0X8004C013 ( DRM_E_LICENSENOTFOUND ) ' No Root license

107540:BVT: Bind to content with a leaf license in the embedded store. This assumes no Root, so Bind should fail. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) = 0X8004C013 ( DRM_E_LICENSENOTFOUND ) ' No Root license

10755:BVT: Embedded store contains leaf license whoes root license is expired. Bind should fail. Root should be updated and client should now use leaf. v4.0 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest.eny )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( AVhTknNlJOjo7F6b7HeNxg==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and then add the root license to HDS and verify that Bind succeeds for Leaf in Embedded Store
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 180, NULL, NULL, NULL, NULL, NULL, AES_128_ECB ) 'expire in 180 sec
TestManagerProcessResponse( Dump, Dump, 0, 0 )
Test_ChangeTimeSeconds (181) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) = DRM_E_UPLINKLICENSENOTFOUND ' As root has expired
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB ) 'no expiry
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerReinitialize( Reset )

107550:BVT: Embedded store contains leaf license whoes root license is expired. Bind should fail. Root should be updated and client should now use leaf. v4.1 header
TestManagerOpenEnvelope( EnvelopeContextBuffer, files\EnvelopeForEmbeddingTest_41.eny )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( OWjhtr3u9k+rdo1ILY0rag==, {6E45CBCC-BF55-4144-AA5D-588221F46A1C}, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_CTR )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerUpdateEmbeddedStore
TestManagerGetContentProperty( 3, NULL )
TestManagerReinitialize( Reset, TRUE, FALSE )
' Clear HDS and then add the root license to HDS and verify that Bind succeeds for Leaf in Embedded Store
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL )
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 180, NULL, NULL, NULL, NULL, NULL, AES_128_ECB ) 'expire in 180 sec
TestManagerProcessResponse( Dump, Dump, 0, 0 )
Test_ChangeTimeSeconds (181) 
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) = DRM_E_UPLINKLICENSENOTFOUND ' As root has expired
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB ) 'no expiry
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerReinitialize( Reset )

-------------------BVTs end here--------------------------

11693:Get license state with expected license state DRM_LICENSE_STATE_UNLIM
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4}, 0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerReinitialize(Reset)
EndIf


1941:set enhanced data to the drm manager context
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerReinitialize(Reset)


10286:process response without adding the enhance data
If(WMDRMSupported)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


'9927 is also covered. 10018 is also covered
1942:get license data on three rights (play, copy-to-CD and CREATE_PM_LICENSE_STRING)
If(WMDRMSupported)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,1,Dump,3,0)
EndIf


'9931 is also covered.
11242:bind to a license while a valid license in the store
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf


11261:decrypt an encrypted data of length 1 byte
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 5000 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 1 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NULL )
EndIf


11262:decrypt a lengthy encrypted data then generate a challenge using the content header in the sync store
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 5000 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><CONDITION><![CDATA[secstate.PlayCount > 0]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[secstate.PlayCount=1]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 5000 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NULL )
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,NULL,NULL,NULL,0,0)
EndIf


9941:generate challenge having the right of copy to CD
If(WMDRMSupported)
TestManagerSetRights(Print.redbook)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
EndIf


11266:generate challenge having the right of copy to SDMI device
If(WMDRMSupported)
TestManagerSetRights(CREATE_PM_LICENSE)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
EndIf


11267:generate challenge having the right of copy to non SDMI device
If(WMDRMSupported)
TestManagerSetRights(CREATE_PM_LICENSE)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
EndIf


9945:generate challenge having all rights
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetRights(Print.redbook)
TestManagerSetRights(CREATE_PM_LICENSE)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
EndIf


11268:process response when it contains multiple licenses
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000501-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl22==,{00000502-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


9949:process response when the store has the license of the same KID
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000501-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl22==,{00000502-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000503-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl11==,{00000504-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


9968:DRM_Manager_Initialize when pDrmContext is NULL
TestManagerInitialize(NULL)=-2147024809

9971:set enhance data while the context is NULL
TestManagerSetRights(Play)
TestManagerSetHeader(NULL,header1.xml)=-2147024809

9972:set enhance data while cbData is 0, 1, 2 or 4. cbData is not tested as -1 because its unsigned.
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL, header1.xml, UTF-8, 0)=0x80070057 (DRM_E_INVALIDARG)
TestManagerSetHeader(NORMAL, header1.xml, UTF-8, 1)=0x80041108 (DRM_E_CH_INVALID_HEADER)
TestManagerSetHeader(NORMAL, header1.xml, UTF-8, 2)=0x80041108 (DRM_E_CH_INVALID_HEADER)
TestManagerSetHeader(NORMAL, header1.xml, UTF-8, 4)=0x80041108 (DRM_E_CH_INVALID_HEADER)
TestManagerSetHeader(NORMAL, header1.xml, UTF-8)

9973:set enhance data while pbData is NULL
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,NULL)=0x80070057 (DRM_E_INVALIDARG)

9975:get license data when pDrmContext is NULL
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(NULL,1,Dump,3,1)=-2147024809
TestManagerGetLicenseData(Dump,2,Dump,3,0)
EndIf


9976:get license data when pwszAction is NULL or invalid
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,0,Dump,0,0)=-2147024809
TestManagerGetLicenseData(Dump,2,Dump,3,0)
EndIf


9977:get license data when pStateData is NULL
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,1,NULL,3,0)=-2147024809
TestManagerGetLicenseData(Dump,2,Dump,3,0)
EndIf


9978:get license data when dwNumActionsQueried is invalid
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
'0 actions
TestManagerGetLicenseData(Dump,1,Dump,0,0)=-2147024809
'less than max actions (this should not cause an error)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
'max actions (this should not cause an error)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
'too many actions (this should cause an error)
'Disabled.  The function under test has annotation that causes errors during static analysis if too many actions are queried
'TestManagerGetLicenseData(Dump,3,Dump,4,0)
'TestManagerGetLicenseData(Dump,1,Dump,4,0)
'TestManagerGetLicenseData(Dump,2,Dump,100,0)
EndIf


9979:binding while pDrmContext is NULL
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(1 drmcontext is null, NULL, Dump,NULL)=-2147024809(0X80070057)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf


9983:decrypt while pDrmContext is NULL
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerDecrypt(NULL,10,1234567890,0,NULL,66)=-2147024809
EndIf


9984:decrypt while cbData is 0, 1, or -1
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 0 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NULL )=-2147024809
EndIf


9985:decrypt while pbData is NULL
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NULL, 0 MisAlignmentBytes, NULL )=-2147024809
EndIf


9993:generate challenge when pDrmContext is NULL
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(NULL,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,1)=-2147024809

9995:generate challenge when pcchUrl is NULL
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,NULL,NULL,NULL,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)=-2147024774
EndIf


9997:generate challenge when cchUrl is 0,1
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
TestManagerGenerateChallenge(Dump,a,1,a,1,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
EndIf


1640:generate challenge when pcchChallenge is NULL
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,NULL,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)=-2147024809

1291:generate challenge when cchChallenge is 0,1
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,a,1,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
EndIf


1921:process response when pDrmContext is NULL
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Ygiiuk82iokl11==,{00000511-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl22==,{00000512-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(NULL,Dump,0,1)=-2147172350(0X8004C002)

1922:process response when pbResponse is NULL
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Ygiiuk82iokl11==,{00000521-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl22==,{00000522-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,NULL,0,32)=-2147024809

1919:process response when cbResponse is 0, 1, or -1
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Ygiiuk82iokl11==,{00000531-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl22==,{00000532-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,16)=-2147024809
'TestManagerProcessResponse(Dump,Dump,-1,16)=-2147024809
'TestManagerProcessResponse(Dump,Dump,1,16)=-2147024809

10013:get license data while there is no matched license in the store
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize(Dump)
TestManagerSetRights(Play)
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL,header2.xml)
TestManagerGetLicenseData(Dump,1,Dump,3,0)
EndIf


10014:get license data while there is no license in the store
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header2.xml)
TestManagerGetLicenseData(Dump,1,Dump,3,0)

10015:get license data while drm manager context has been closed.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(AppContext)
TestManagerGetLicenseData(Dump,1,Dump,3,0)=-2147172292(0X8004C03C)
EndIf


10016:get license data repeatedly
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,1,Dump,3,0)
TestManagerGetLicenseData(Dump,1,Dump,3,0)
EndIf


10018:BVT:bind a license repeatedly
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
EndIf


2068:BVT: bind a license repeatedly (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit

10019:bind a license without enhanced data
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(AppContext)
TestManagerSetRights(Play)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=-2147172292(0X8004C03C)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf


10021:bind a license while the context has been closed
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(AppContext)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=-2147172292(0X8004C03C)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf


50021:FUNC: bind a license while the context has been closed (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerReinitialize(AppContext)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)= 0X8004C03C (DRM_E_HEADER_NOT_SET)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit

10022:bind a license while the license does not exist.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(AppContext)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header_shortkid.xml)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=-2147172333(0X8004C013, DRM_E_LICENSENOTFOUND)
EndIf


50022:FUNC: bind a license while the license does not exist. (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerReinitialize(AppContext)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,headerXMR.xml)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=-2147172333(0X8004C013, DRM_E_LICENSENOTFOUND)

10024:commit repeatedly
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerCommit()=-2147024809(0X80070057, E_INVALIDARG)
EndIf


50024:FUNC: commit repeatedly (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerCommit()=-2147024809(0X80070057, E_INVALIDARG)

10025:commit while the drm context has been shutdown
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerReinitialize( AppContext, FALSE, FALSE )
TestManagerCommit = 0x80070057 (DRM_E_INVALIDARG)
EndIf


50025:FUNC: commit while the drm context has been shutdown (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerReinitialize( AppContext, FALSE, FALSE )
TestManagerCommit = 0x80070057 (DRM_E_INVALIDARG)

10027:decrypt while the drm context has been shutdown. It is OK since the decrypt context is still untouched.
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerReinitialize( AppContext, FALSE, FALSE )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NULL )
EndIf


50027:FUNC: decrypt while the drm context has been shutdown. It is OK since the decrypt context is still untouched. (XMR)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerReinitialize( AppContext, FALSE, FALSE )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL AesCounterCtx )

10031:generate challenge when the drm manager context has been shutdown or when settings are not done
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
TestManagerReinitialize(Reset)
TestManagerSetRights(Play)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)= -2147172292(0X8004C03C)
TestManagerReinitialize(Reset)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
TestManagerReinitialize(Reset)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)= -2147172292(0X8004C03C)
EndIf


10032:process response when pDrmContext has already shutdown. Since the response is still there, it should be OK.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Ygiiuk82iokl11==,{00000541-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl22==,{00000542-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerReinitialize(AppContext)
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


10033:process the same response repeatedly
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Ygiiuk82iokl11==,{00000551-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl22==,{00000552-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Ygiiuk82iokl11==,{00000551-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(Ygiiuk82iokl22==,{00000552-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)=-1072879854(0XC00D2712)
EndIf


10332:Bind fails when the right only exists in root license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},64,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 DRM_E_LICENSEEXPIRED
EndIf


1293:Bind fails if right only exists in leaf license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},64,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
EndIf


10335:Bind should fail if the root expires
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA6},64,"<ONSELECT><CONDITION><![CDATA[machine.datetime < secstate.ExpirationDate]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2,NULL,17520)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
'Change Time by two years + 2 days
Test_ChangeTimeSeconds(63244800)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
EndIf


10292:decrypt data with one byte mis-alignment
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 1 MisAlignmentBytes, NULL )
EndIf


10293:decrypt data with two bytes mis-alignment
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 2 MisAlignmentBytes, NULL )
EndIf


10294:decrypt data with 3 bytes mis-alignment
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 3 MisAlignmentBytes, NULL )
EndIf


10295:decrypt data with 4 bytes mis-alignment
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 4 MisAlignmentBytes, NULL )
EndIf


10718:analog video restriction level 500 with one extension
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><ANALOGVIDEO level='500'><EXTENSIONLIST><EXTENSION guid='{00000507-0005-0010-8000-00AA006D2EA4}' value='0x01'/></EXTENSIONLIST></ANALOGVIDEO></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(100,100,500,100,100,0,1)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,Use Callback function)
TestManagerCommit
EndIf


10719:analog video restriction level 200 with more than one one extensions
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><ANALOGVIDEO level='200'><EXTENSIONLIST><EXTENSION guid='{00000507-0005-0010-8000-00AA006D2EA4}' value='0x01'/><EXTENSION guid='{00000507-0006-0010-8000-00AA006D2EA4}' value='0x1A633'/></EXTENSIONLIST></ANALOGVIDEO></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(100,100,200,100,100,0,2)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,Use Callback function)
TestManagerCommit
EndIf


10725:Bind a license with restriction but does not check the restriction. It should fail
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><RESTRICTIONS><COMPRESSEDDIGITALVIDEO level='300'/></RESTRICTIONS><CONDITION><![CDATA[1]]></CONDITION></ONACTION>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump, NULL)=0X8004C06E DRM_E_NO_OPL_CALLBACK
EndIf


10724:Bind a license without restriction but use call back function.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump, Use Callback function)
TestManagerCommit
EndIf


'the purpose of multiple store test cases: we want to verify the the store files in the memory
'do not mess up between the store switch
11322:add license to multiple stores
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000509-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(Reset, TRUE, FALSE)
TestManagerInitializeForNewStore(secondstore.hds,1 delete previous second store if any)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!4x8NSroVg4eXCzWqPU!BA==,{00000509-0001-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


11323:add license to multiple stores, and bind to the licenses
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(Reset, TRUE, FALSE)
TestManagerInitializeForNewStore(secondstore.hds,1 delete previous second store if any)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000509-0001-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf


11324:add license to multiple stores at different sequences
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000509-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(Reset, FALSE, FALSE)
'now switch to second store
TestManagerInitializeForNewStore(secondstore.hds, 1 delete previous second store if any)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!4x8NSroVg4eXCzWqPU!BA==,{00000509-0001-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(Reset, FALSE, TRUE)
'now swtich back to first store
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!5x8NSroVg4eXCzWqPU!BA==,{00000509-0002-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(Reset, FALSE, FALSE)
'now switch to second store
TestManagerInitializeForNewStore(secondstore.hds, 0 don't delete the second store)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!6x8NSroVg4eXCzWqPU!BA==,{00000509-0003-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


11489:get device property. Undefined
TestManagerGetDeviceProperty(10,NULL)=-2147172258(0X8004C05E)

11562:generate challenge having the right of playback. With 1 byte misalignment
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,1,0)
EndIf


11563:generate challenge having the right of playback. With 2 byte misalignment
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,2,0)
EndIf


11564:generate challenge having the right of playback. With 3 byte misalignment
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,3,0)
EndIf


11565:generate challenge having the right of playback. With 4 byte misalignment
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,4,0)
EndIf


11665:Bind should succeed on short non base64 KID string
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header_shortkid.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(short,NULL,0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


11666:Bind should succeed on long non base64 KID string
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header_longkid.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(verylooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongKID,NULL,0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


11667:Bind should succeed on short base64 KID string
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header_shortkid64.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Asn4CikJ9s==,NULL,0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


11668:Bind should succeed on long base64 KID string
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header_longkid64.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=,NULL,0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf


11811:_ProcessLicenseRevocationList should delete multiple licenses with the same KID
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerMakeDeviceLicenseRevocationBlob("OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==", "SM4Gl3D7DlyHykqBC7takGkhSEw=", "!3x8NSroVg4eXCzWqPU!BA==", 1)
TestManagerProcessDeviceLicenseRevocation(0, 1, NORMAL, 1, 2)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",0)
EndIf


11833:_ProcessLicenseRevocationList should not delete licenses with different LGPUBKEY
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnXxpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnXxpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerMakeDeviceLicenseRevocationBlob("OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==", "SM4Gl3D7DlyHykqBC7takGkhSEw=", "!3x8NSroVg4eXCzWqPU!BA==", 1)
TestManagerProcessDeviceLicenseRevocation(0, 1, NORMAL, 1, 0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
EndIf


11834:_ProcessLicenseRevocationList should not delete licenses without LGPUBKEY
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerMakeDeviceLicenseRevocationBlob("OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==", "SM4Gl3D7DlyHykqBC7takGkhSEw=", "!3x8NSroVg4eXCzWqPU!BA==", 1)
TestManagerProcessDeviceLicenseRevocation(0, 1, NORMAL, 1, 0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
EndIf


11835:_ProcessLicenseRevocationList should not delete licenses with different KID using the same LGPUBKEY
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(!3y8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3y8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerMakeDeviceLicenseRevocationBlob("OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==", "SM4Gl3D7DlyHykqBC7takGkhSEw=", "!3x8NSroVg4eXCzWqPU!BA==", 1)
TestManagerProcessDeviceLicenseRevocation(0, 1, NORMAL, 1, 1)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3y8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
EndIf


11836:_ProcessLicenseRevocationList should process multiple KIDs in the list
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(/Hx8NSroVg4eXCzWqPU+BA==,{00000508-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>/Hx8NSroVg4eXCzWqPU+BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerMakeDeviceLicenseRevocationBlob("OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==", "SM4Gl3D7DlyHykqBC7takGkhSEw=", "!3x8NSroVg4eXCzWqPU!BA==", 2)
TestManagerProcessDeviceLicenseRevocation(0, 2, NORMAL, 2, 2)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>/Hx8NSroVg4eXCzWqPU+BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",0)
EndIf


11837:_ProcessLicenseRevocationList should process partial list in the revocation list
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerAddLicenseToResponse(/Hx8NSroVg4eXCzWqPU+BA==,{00000508-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>/Hx8NSroVg4eXCzWqPU+BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerMakeDeviceLicenseRevocationBlob("OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==", "SM4Gl3D7DlyHykqBC7takGkhSEw=", "!3x8NSroVg4eXCzWqPU!BA==", 2)
TestManagerProcessDeviceLicenseRevocation(0, 1, NORMAL, 1, 1)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>/Hx8NSroVg4eXCzWqPU+BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerProcessDeviceLicenseRevocation(1, 1, NORMAL, 1, 1)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>/Hx8NSroVg4eXCzWqPU+BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",0)
EndIf


11838:_ProcessLicenseRevocationList should fail if the revocation signature is broken
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<META><LGPUBKEY>OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==</LGPUBKEY></META>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
TestManagerMakeDeviceLicenseRevocationBlob("OnTqpHXhTdZxm4FsTMwHYS1M*iaqk8z!29jU7z9QrdF3em*jEgl!WQ==", "SM4Gl3D7DlyHykqBC7takGkhSEw=", "!3x8NSroVg4eXCzWqPU!BA==", 1, BAD_SIGNATURE)
TestManagerProcessDeviceLicenseRevocation(0, 1, NORMAL, 0, 0)=0x8004a014( DRM_E_INVALID_LICENSE_REVOCATION_LIST_SIGNATURE )
TestManagerGetLicenseState("<LICENSESTATE type = \"challenge\"><DATA><ACTION>Play</ACTION><KID>!3x8NSroVg4eXCzWqPU!BA==</KID><CANBIND>1</CANBIND></DATA></LICENSESTATE>",1)
EndIf


'SOURCEID test cases

30260:Test Sourceid for simple license where source id value is present in license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<SOURCEID>3</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(3,1,1)
TestManagerCommit
EndIf


30270:Test Sourceid for simple license where source id value is not present in license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(0,1,1)
TestManagerCommit
EndIf


30280:Test Sourceid for chained license where leaf has sourceid 2
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<SOURCEID>2</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(2,1,1)
TestManagerCommit
EndIf


30290:Test Sourceid for chained license where leaf has sourceid 2 and root has sourceid 1
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<SOURCEID>1</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<SOURCEID>2</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(2,1,1)
TestManagerCommit
EndIf

30300:Test Sourceid for chained license where leaf has sourceid 2 and root has sourceid 3
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<SOURCEID>3</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<SOURCEID>2</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(2,1,1)
TestManagerCommit
EndIf


30310:Test Sourceid for chained license where leaf has sourceid NULL and root has sourceid 3
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<SOURCEID>3</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(0,1,1)
TestManagerCommit
EndIf


30320:Test Sourceid for chained license where leaf has sourceid NULL and root has sourceid NULL
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(0,1,1)
TestManagerCommit
EndIf


30330:Test Sourceid passing NULL for drmmanagercontext
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<SOURCEID>3</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(3,0,1)=-2147024809(0X80070057)
EndIf


30340:Test Sourceid passing NULL for sourceid holder
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<SOURCEID>3</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetSourceID(3,1,0)=-2147024809(0X80070057)
EndIf


50260:Test Sourceid for simple license where source id value is present in license (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 3 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(3,1,1)
TestManagerCommit

50270:Test Sourceid for simple license where source id value is not present in license
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(0,1,1)
TestManagerCommit

50280:Test Sourceid for chained license where leaf has sourceid 2
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerInitResponse
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , 8ouFnKYiJtBjWpeoQpyD+g== , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 2 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( 8ouFnKYiJtBjWpeoQpyD+g== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(2,1,1)
TestManagerCommit

50290:Test Sourceid for chained license where leaf has sourceid 2 and root has sourceid 1
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , 8ouFnKYiJtBjWpeoQpyD+g== , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 2 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( 8ouFnKYiJtBjWpeoQpyD+g== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , AES_128_ECB , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 1 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(2,1,1)
TestManagerCommit

50300:Test Sourceid for chained license where leaf has sourceid 2 and root has sourceid 3
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , 8ouFnKYiJtBjWpeoQpyD+g== , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 2 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( 8ouFnKYiJtBjWpeoQpyD+g== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , AES_128_ECB , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 3 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(2,1,1)
TestManagerCommit

50310:Test Sourceid for chained license where leaf has sourceid NULL and root has sourceid 3
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , 8ouFnKYiJtBjWpeoQpyD+g== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( 8ouFnKYiJtBjWpeoQpyD+g== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , AES_128_ECB , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 3 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(0,1,1)
TestManagerCommit

50320:Test Sourceid for chained license where leaf has sourceid NULL and root has sourceid NULL
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , 8ouFnKYiJtBjWpeoQpyD+g== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( 8ouFnKYiJtBjWpeoQpyD+g== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , AES_128_ECB , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(0,1,1)
TestManagerCommit

50330:Test Sourceid passing NULL for drmmanagercontext
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 3 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(3,0,1)=-2147024809(0X80070057)

50340:Test Sourceid passing NULL for sourceid holder
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 3 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerGetSourceID(3,1,0)=-2147024809(0X80070057)

30600:DRT:Test that the cleanup license store function properly deletes expired licenses
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>15</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION><ONSELECT><CONDITION><![CDATA[(machine.datetime < secstate.ExpirationDate)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2,NULL,17520)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>10</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSELECT><CONDITION><![CDATA[(secstate.PlayCount > 0)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,2)
TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,2)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,2)
'Change Time by two years + 2 days
Test_ChangeTimeSeconds(63244800)
TestManagerCleanLicenseStore( FALSE, 0, DELETE_EXPIRED_LICENSES)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
EndIf

30601:DRT:Test that the cleanup license store function properly deletes expired playcount licenses
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>15</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION><ONSELECT><CONDITION><![CDATA[(machine.datetime < secstate.ExpirationDate)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2,NULL,17520)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>10</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSELECT><CONDITION><![CDATA[(secstate.PlayCount > 0)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,2)
TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,2)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,2)
'Change Time by two years + 2 days
Test_ChangeTimeSeconds(63244800)
TestManagerCleanLicenseStore( FALSE, 0, DELETE_EXPIRED_LICENSES)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
EndIf

'' Disabled, Priority not supported on XMR V3
'30602:DRT:Test that Bind properly cleans up expired expired on store licenses even with an unlimited license of lower priority
'TestManagerSetKID( +3x8NSroVg4eXCzWqPU+BA== )
'TestManagerSetRights(Play)
'TestManagerInitResponse
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,10)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,100)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
''Change Time by two years + 2 days
'Test_ChangeTimeSeconds(63244800)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)

'' Disabled, Priority not supported on XMR V3
'30603:DRT:Test that Bind properly cleans up expired expired after first use licenses even with an unlimited license of lower priority
'TestManagerSetRights(Play)
'TestManagerInitResponse
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,10)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,100)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerSetKID( +3x8NSroVg4eXCzWqPU+BA== )
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
''Change Time by two years + 2 days
'Test_ChangeTimeSeconds(63244800)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)


'' Disabled. PlayCount not supported in XMR V3
'30604:DRT:Test that the cleanup license store function properly deletes expired XMR playcount licenses
'TestManagerSetKID( +3x8NSroVg4eXCzWqPU+BA== )
'TestManagerSetRights(Play)
'TestManagerInitResponse
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,2,NULL,NULL,NULL,NULL,NULL,NULL,NULL,OMIT)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 DRM_E_LICENSEEXPIRED
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,0)

'' Disabled, Priority not supported on XMR V3
'30607:DRT:Test that clean store properly cleans up expire on store licenses even with an unlimited license of lower priority
'TestManagerSetRights(Play)
'TestManagerInitResponse
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,10)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,100)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerSetKID( +3x8NSroVg4eXCzWqPU+BA== )
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Change Time by two years + 2 days
'Test_ChangeTimeSeconds(63244800)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)


'' Disabled, Priority not supported on XMR V3
'30610:DRT:Test that cleanup store properly cleans up expire after first use licenses even with an unlimited license of lower priority
'TestManagerSetRights(Play)
'TestManagerInitResponse
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,10)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,100)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerSetKID( +3x8NSroVg4eXCzWqPU+BA== )
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
''Change Time by two years + 2 days
'Test_ChangeTimeSeconds(63244800)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)

'' Disabled, Priority not supported on XMR V3
'30608:DRT:Test that cleanup store properly cleans up expire after first use licenses even with an unlimited license of lower priority
'TestManagerSetRights(Play)
'TestManagerInitResponse
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,10)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,100)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerSetKID( +3x8NSroVg4eXCzWqPU+BA== )
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
''Change Time by two years + 2 days
'Test_ChangeTimeSeconds(63244800)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
'TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
'TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)

30609:DRT:Test that the cleanup license store function won't delete licenses that have at least 1 non-expired right
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,3600  ,NULL,NULL,0   ,NULL,NULL,NULL)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,NULL,7200 ,0   ,NULL,NULL,NULL)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,2)
TestManagerSetKID( !3x8NSroVg4eXCzWqPU!BA== )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
Test_ChangeTimeSeconds(5000)
TestManagerCleanLicenseStore( FALSE, 0, DELETE_EXPIRED_LICENSES)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)

TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,1)
Test_ChangeTimeSeconds(10000)

TestManagerCleanLicenseStore( FALSE, 0, DELETE_EXPIRED_LICENSES)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XMR,0)

30605:DRT:P1:Test that binding but not committing a license that expired deletes the license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>15</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION><ONSELECT><CONDITION><![CDATA[(machine.datetime < secstate.ExpirationDate)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2,NULL,17520)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS,"<PRIORITY>10</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSELECT><CONDITION><![CDATA[(secstate.PlayCount > 0)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,2)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,2)
'Change Time by two years + 2 days
Test_ChangeTimeSeconds(63244800)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
EndIf

30900:DRT:Test GetLicenseMID with single MID
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==")
TestManagerCommit
EndIf

30901:DRT:Test GetLicenseMID with two different MIDs
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<MID>abcadCv6D0KmSrTgf1HV0Q==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(2,"abcadCv6D0KmSrTgf1HV0Q==","pgUadCv6D0KmSrTgf1HV0w==")
EndIf

30902:DRT:Test GetLicenseMID with two identical MIDs
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(2, "pgUadCv6D0KmSrTgf1HV0w==","pgUadCv6D0KmSrTgf1HV0w==")
EndIf

30903:BVT:P0:Test GetLicenseMID with no MID in license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(0)
EndIf

30904:FUNC:P1:Test GetLicenseMID with null output buffer
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==", FALSE, TRUE) = -2147024809(0X80070057, E_INVALIDARG)
EndIf

30905:FUNC:P0:Test GetLicenseMID with two different MIDs and output buffer too small but not null
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<MID>abcadCv6D0KmSrTgf1HV0Q==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(2,"abcadCv6D0KmSrTgf1HV0Q==","pgUadCv6D0KmSrTgf1HV0w==", FALSE, FALSE, FALSE, 1) = -2147024809(0X80070057, E_INVALIDARG)
EndIf

30906:FUNC:P2:Test GetLicenseMID after committing
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==")=0X8004C00F DRM_E_LICENSENOTBOUND
EndIf

30907:FUNC:P2:Test GetLicenseMID with null buffer size
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==", FALSE, FALSE, TRUE) = -2147024809(0X80070057, E_INVALIDARG)
EndIf

30908:FUNC:P2:Test GetLicenseMID with null context
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<MID>pgUadCv6D0KmSrTgf1HV0w==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==", TRUE) = -2147024809(0X80070057, E_INVALIDARG)
EndIf

50900:BVT:Test GetLicenseMID with single MID (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==")
TestManagerCommit

50901:BVT:Test GetLicenseMID with two different MIDs (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , !3x8NSroVg4eXCzWqPU!BA== , NULL , abcadCv6D0KmSrTgf1HV0Q== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( !3x8NSroVg4eXCzWqPU!BA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , pgUadCv6D0KmSrTgf1HV0w==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(2,"abcadCv6D0KmSrTgf1HV0Q==","pgUadCv6D0KmSrTgf1HV0w==")

50902:FUNC:Test GetLicenseMID with two identical MIDs (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , !3x8NSroVg4eXCzWqPU!BA== , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( !3x8NSroVg4eXCzWqPU!BA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , pgUadCv6D0KmSrTgf1HV0w==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(2, "pgUadCv6D0KmSrTgf1HV0w==","pgUadCv6D0KmSrTgf1HV0w==")

50903:FUNC:P0:Test GetLicenseMID with no MID in license (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , !3x8NSroVg4eXCzWqPU!BA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( !3x8NSroVg4eXCzWqPU!BA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(0)

50904:FUNC:P1:Test GetLicenseMID with null output buffer (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==", FALSE, TRUE) = -2147024809(0X80070057, E_INVALIDARG)

50905:FUNC:P0:Test GetLicenseMID with two different MIDs and output buffer too small but not null (XMR)
TestManagerSetRights(Play)
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , !3x8NSroVg4eXCzWqPU!BA== , NULL , abcadCv6D0KmSrTgf1HV0Q== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( !3x8NSroVg4eXCzWqPU!BA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , pgUadCv6D0KmSrTgf1HV0w==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(2,"abcadCv6D0KmSrTgf1HV0Q==","pgUadCv6D0KmSrTgf1HV0w==", FALSE, FALSE, FALSE, 1) = -2147024809(0X80070057, E_INVALIDARG)

50906:FUNC:P2:Test GetLicenseMID after committing (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==")=0X8004C00F DRM_E_LICENSENOTBOUND

50907:FUNC:P2:Test GetLicenseMID with null buffer size (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==", FALSE, FALSE, TRUE) = -2147024809(0X80070057, E_INVALIDARG)

50908:FUNC:P2:Test GetLicenseMID with null context (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetLicenseMID(1, "pgUadCv6D0KmSrTgf1HV0w==", TRUE) = -2147024809(0X80070057, E_INVALIDARG)

30910:DRT:Test IsInclusionGUIDPresent with chain license
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerIsInclusionGUIDPresent(TRUE,{12300508-0000-0010-8000-00AA006D2EA5})
EndIf

30911:BVT:P0:Test IsInclusionGUIDPresent with chain license for GUID which isn't present
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerIsInclusionGUIDPresent(FALSE,{95EE268C-2D75-493b-9708-E85E02ECF869})
EndIf

30912:FUNC:P1:Test IsInclusionGUIDPresent with chain license in which GUID is present only in root.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{95EE268C-2D75-493b-9708-E85E02ECF869}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerIsInclusionGUIDPresent(FALSE,{12300508-0000-0010-8000-00AA006D2EA5})
EndIf

30913:FUNC:P1:Test IsInclusionGUIDPresent with chain license in which GUID is present only in leaf.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{95EE268C-2D75-493b-9708-E85E02ECF869}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerIsInclusionGUIDPresent(FALSE,{95EE268C-2D75-493b-9708-E85E02ECF869})
EndIf

30914:FUNC:P2:Test IsInclusionGUIDPresent with null context
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerIsInclusionGUIDPresent(FALSE,{12300508-0000-0010-8000-00AA006D2EA5}, TRUE) = -2147024809(0X80070057, E_INVALIDARG)
EndIf

30915:FUNC:P2:Test IsInclusionGUIDPresent with null inputs
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerIsInclusionGUIDPresent(FALSE,{12300508-0000-0010-8000-00AA006D2EA5}, FALSE, TRUE) = -2147024809(0X80070057, E_INVALIDARG)
EndIf

30916:FUNC:P2:Test IsInclusionGUIDPresent with multiple GUIDs in list
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerIsInclusionGUIDPresent(TRUE,{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8})
EndIf

30917:FUNC:P2:Test IsInclusionGUIDPresent with multiple GUIDs in list, but not the one being looked for
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerIsInclusionGUIDPresent(FALSE,{95EE268C-2D75-493b-9708-E85E02ECF869})
EndIf

30920:DRT:Test inclusion GUID store license callback with chain license where GUID is acceptable
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,64)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,1)
EndIf

30921:DRT:Test inclusion GUID store license callback with chain license where one license has no inclusion list
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,64)=-1072879777
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,0)
EndIf

30922:DRT:Test inclusion GUID store license callback with chain license where both have no inclusion list
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,64)=-1072879854
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,0)
EndIf

30923:DRT:Test inclusion GUID store license callback with chain license where both have a non-valid GUID
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID><GUID>{12300508-0000-0010-8000-00AA006D2EA5}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,64)=-1072879854
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,0)
EndIf

30924:DRT:Test inclusion GUID store license callback with chain license where both have 3 acceptable GUIDs
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,"<INCLUSIONLIST><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID><GUID>{95EE268C-2D75-493b-9708-E85E02ECF869}</GUID><GUID>{87CDF6BC-4E01-48cd-93B6-AB7B352B107D}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<INCLUSIONLIST><GUID>{4117F57A-D8BD-4ac7-AD1B-D6FE5A3EA4E8}</GUID><GUID>{95EE268C-2D75-493b-9708-E85E02ECF869}</GUID><GUID>{87CDF6BC-4E01-48cd-93B6-AB7B352B107D}</GUID></INCLUSIONLIST>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,64)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,1)
EndIf

30930:BVT: Test DRM_MGR_BIND output when binding and committing successfully with valid inputs
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><CONDITION><![CDATA[secstate.PlayCount > 0]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerCheckDecryptContext(!3x8NSroVg4eXCzWqPU!BA==, 300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
EndIf

30950:DRT:P0:Test deleting licenses by KID
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000708-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,2)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerDeleteLicensesByKID(Acl2BY3ITE0qe11DalmK0D==,1);
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,2)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
TestManagerDeleteLicensesByKID(NULL,2);
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0x8004C013 DRM_E_LICENSENOTFOUND
EndIf

30951:DRT:P0:Test deleting licenses by KID (XMR)
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestEnumLicense( lFmb2gxg0Cr5bfEnJXgJeA==, XMR, 1 )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump )
TestManagerCommit
TestManagerDeleteLicensesByKID( lFmb2gxg0Cr5bfEnJXgJeA==, 1 )
TestEnumLicense( lFmb2gxg0Cr5bfEnJXgJeA==, XMR, 0 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump,NULL )=0X8004C013 ( DRM_E_LICENSENOTFOUND )

30952:DRT: Test deleting license using V1 header
'LoadResponseFromFile( V4ResponseForV1HeaderTest.dat )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetV1Header(NORMAL, PDRMHeader.dat, FALSE)
TestEnumLicense(lFmb2gxg0Cr5bfEnJXgJeA==,XMR,1)
TestManagerDeleteLicensesByKID(NULL,1)
TestEnumLicense(lFmb2gxg0Cr5bfEnJXgJeA==,XMR,0)

30953:DRT: Test deleting license using V2 KID
If(WMDRMSupported)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,1)
TestManagerSetKID(Acl2BY3ITE0qe11DalmK0D==,,NULL,FALSE)
TestManagerDeleteLicensesByKID(NULL,1)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
EndIf

30931:BVT: Test DRM_MGR_BIND output when binding and not committing successfully with valid inputs
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><CONDITION><![CDATA[secstate.PlayCount > 0]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestPrintSyncStore
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCheckDecryptContext(!3x8NSroVg4eXCzWqPU!BA==, 300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
EndIf


31000:Test license acquisition with cached content header
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><CONDITION><![CDATA[secstate.PlayCount > 0]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestPrintSyncStore
TestManagerInitLicenseSyncEnum
TestManagerLicenseSyncEnumNext(3,24)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,0,NULL,0,http://www.contoso.com/licenseacq.asp,37,http://www.contoso.com/licenseacq.asp,37,NULL,0,0)
EndIf


30932:BVT: Test Drm_Reader_Bind output when binding for the first time to an expired license do verify that content key is not exposed
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><CONDITION><![CDATA[secstate.PlayCount > 0]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCheckDecryptContext(!3x8NSroVg4eXCzWqPU!BA==, 300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCheckDecryptContext(!3x8NSroVg4eXCzWqPU!BA==, 300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerCommit(0 don't overwrite decrypt context, Dump)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerCheckDecryptContext(!3x8NSroVg4eXCzWqPU!BA==, 300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)=0x800480D2, DRM_E_CIPHER_NOTINITIALIZED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
EndIf


30933:FUNC:P1: Drm_Reader_Bind should return DRM_E_LICENSEEXPIRED for expired and deleted licenses (XML)
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Play\"><CONDITION><![CDATA[secstate.PlayCount > 0]]></CONDITION><ACTION><![CDATA[secstate.PlayCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[secstate.PlayCount=2]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit(0 don't overwrite decrypt context, Dump)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
EndIf


30934:FUNC:P1: Drm_Reader_Bind should return DRM_E_LICENSEEXPIRED for expired licenses with an extensible right and restriction with no play right (XMR)
TestManagerSetExtensiblePolicy( TRUE, 63, TRUE, 1 XMR_OBJECT_TYPE_OUTER_CONTAINER, 6 XMR_FLAGS_CONTAINER | XMR_FLAGS_ALLOW_EXTERNAL_PARSE )
TestManagerSetExtensiblePolicy( FALSE, 1001, TRUE, 63, 21 XMR_FLAGS_HAS_SECURE_STATE | XMR_FLAGS_ALLOW_EXTERNAL_PARSE | XMR_FLAGS_MUST_UNDERSTAND, 3 XMR_EXTENSIBLE_RESTRICTON_STATE_DATE, 0, AAAABQI= )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, OMIT, NULL, NULL, NULL, 500, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE, TRUE, NULL, NULL, NULL)
TestManagerProcessResponse( Dump, Dump, 0, 0 )

TestManagerSetRights(63,TRUE)
TestManagerSetHeader(NORMAL,headerXMR.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,TRUE)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)

TestManagerSetRights(63,TRUE)
TestManagerSetHeader(NORMAL,headerXMR.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,TRUE)
TestManagerCommit(0 don't overwrite decrypt context, Dump)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)

Test_ChangeTimeSeconds( 500 )


TestManagerSetRights(63,TRUE)
TestManagerSetHeader(NORMAL,headerXMR.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,TRUE)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)

TestManagerSetRights(63,TRUE)
TestManagerSetHeader(NORMAL,headerXMR.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,TRUE)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)

TestManagerSetRights(63,TRUE)
TestManagerSetHeader(NORMAL,headerXMR.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerCleanLicenseStore(1, 0, DELETE_EXPIRED_LICENSES)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,TRUE)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)

TestManagerSetRights(Play,TRUE)
TestManagerSetHeader(NORMAL,headerXMR.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,TRUE)=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)

32000:DRT:P0:Test metercert store
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<MID>pIKx8Wsy5aYRQN8LLIIcTQ==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump,NULL)
TestManagerCommit
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp,,,,,TRUE)
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp)=-2147024637(0X80070103 DRM_E_NOMORE)
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp,<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,,,,TRUE)
TestManagerMeterCertEnumNext(qQLyYVScOZadMWZ90Wypfw==,http://www.contoso.com/licenseacq.asp)
EndIf

32001:BVT:P0:Metercertstore-- make sure that UpdateMeterCert Rejects cert with incorrect signature
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>VVVV0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)=0X8004A015( DRM_E_METERING_SIGNATURE_VERIFICATION_FAILED )

32002:BVT:P0:Metercertstore-- make sure that Drm_MeterCert_EnumNext returns DRM_E_NOMORE with an empty cert store
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp)=-2147024637(0X80070103 DRM_E_NOMORE)

32003:BVT:P0:Metercertstore-- make sure null Cert Pointer is handled correctly in Enum
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(qQLyYVScOZadMWZ90Wypfw==,,<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,,NULL)

32004:BVT:P0:Metercertstore-- make sure null LAINFO Pointer is handled correctly in Enum
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(qQLyYVScOZadMWZ90Wypfw==,,,NULL,)

32005:BVT:P0:Metercertstore-- make sure we can invalidate a cert
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerInvalidateMeterCert(qQLyYVScOZadMWZ90Wypfw==)

32006:BVT:P0:Metercertstore-- make sure we can't invalidate a cert if it isn't in the store!
TestManagerInvalidateMeterCert(qQLyYVScOZadMWZ90Wypfw==,,,NULL)=0X8004C3F2 DRM_E_METERCERTNOTFOUND

32007:BVT:P0:Metercertstore-- make sure we can Delete a cert
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerDeleteMeterCert(qQLyYVScOZadMWZ90Wypfw==)

32008:BVT:P0:Metercertstore-- make sure we can't delete a cert if it isn't in the store!
TestManagerDeleteMeterCert(qQLyYVScOZadMWZ90Wypfw==,,,NULL)=0X8004C3F2 DRM_E_METERCERTNOTFOUND

32009:BVT:P0:Metercertstore-- make sure we can enumerate an invalidated cert and see it as invalid
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerInvalidateMeterCert(qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(qQLyYVScOZadMWZ90Wypfw==,http://www.contoso.com/licenseacq.asp)

32010:FUNC:P1:Metercertstore-- try to call UpdateMeterCert with a NULL manager context
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==, NULL) = 0x80070057 DRM_E_INVALIDARG

32011:FUNC:P1:Metercertstore-- try to call UpdateMeterCert with a NULL Metercert context
TestManagerUpdateMeterCert(NULL,qQLyYVScOZadMWZ90Wypfw==) = 0x80070057 DRM_E_INVALIDARG

32012:FUNC:P1:Metercertstore-- try to call UpdateMeterCert with a NULL MID
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>, NULL)

32013:FUNC:P1:Metercertstore-- call InitEnum with a NULL manager context
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum(NULL, Valid Enum) = 0x80070057 DRM_E_INVALIDARG

32014:FUNC:P1:Metercertstore-- call InitEnum with a NULL enum pointer
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum( Valid Manager, NULL ) = 0x80070057 DRM_E_INVALIDARG

32015:FUNC:P1:Metercertstore-- call EnumNext with the LAINFO buffer too small
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<MID>pIKx8Wsy5aYRQN8LLIIcTQ==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump,NULL)
TestManagerCommit
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp,<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>, BADSIZE LAINFO)
EndIf


32016:FUNC:P1:Metercertstore-- call EnumNext with the cert buffer too small
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(qQLyYVScOZadMWZ90Wypfw==,http://www.contoso.com/licenseacq.asp,<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,, BADSIZE CERT)

32017:FUNC:P1:Metercertstore-- call EnumNext NULL MID Pointer
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(NULL,http://www.contoso.com/licenseacq.asp,<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,,) = 0x80070057 DRM_E_INVALIDARG

32018:FUNC:P1:Metercertstore-- call EnumNext with NULL Enum
TestManagerUpdateMeterCert(<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,qQLyYVScOZadMWZ90Wypfw==)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(qQLyYVScOZadMWZ90Wypfw==,http://www.contoso.com/licenseacq.asp,<METERCERT version="1.0"><DATA><MID>qQLyYVScOZadMWZ90Wypfw==</MID><PUBLICKEY>nm0yQ6CXLcQIBf*Zc*VKGL!SziEdTT!ehGxDotUazwFtE7X40IlqAQ==</PUBLICKEY> <URL>http://www.contoso.com</URL></DATA><CERTIFICATECHAIN><CERTIFICATE>AAEAADgAAAB17bfg!cqDLB2clHGU7P6zkrOCVUddX95UYkqpjqvoIr4ezqw2zgwfrvKR1dq!EzdGD8ND2Ihkn0OPEoWZZKCwgidp7Y5SHR!NFJJazdPWfBQEBB4AAAABAAAAAQAAAAE=</CERTIFICATE></CERTIFICATECHAIN><SIGNATURE><HASHALGORITHM type="SHA"></HASHALGORITHM><SIGNALGORITHM type="MSDRM"></SIGNALGORITHM><VALUE>GorN0cwihpqe9726ewMinm6FTgRwsN4rdI07G9aGl62LlkwgQFaxLQ==</VALUE></SIGNATURE></METERCERT>,,,NULL)=0x80070057 DRM_E_INVALIDARG

32019:FUNC:P1:Metercertstore-- try Invalidate with a NULL MAanger Context
TestManagerInvalidateMeterCert(qQLyYVScOZadMWZ90Wypfw==,NULL,,NULL)=0x80070057 DRM_E_INVALIDARG

32020:FUNC:P1:Metercertstore-- try Invalidate with a NULL MID
TestManagerInvalidateMeterCert(qQLyYVScOZadMWZ90Wypfw==,,NULL,NULL)=0x80070057 DRM_E_INVALIDARG

32021:FUNC:P1:Metercertstore-- try Delete with a NULL MAanger Context
TestManagerDeleteMeterCert(qQLyYVScOZadMWZ90Wypfw==,NULL,,NULL)=0x80070057 DRM_E_INVALIDARG

32022:FUNC:P1:Metercertstore-- try Delete with a NULL MID
TestManagerDeleteMeterCert(qQLyYVScOZadMWZ90Wypfw==,,NULL,NULL)=0x80070057 DRM_E_INVALIDARG

32023:FUNC:P1:Metercertstore-- try to commit a license that needs metering wich already has an entry for the MID in the cert store with a different URL
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<MID>pIKx8Wsy5aYRQN8LLIIcTQ==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump,NULL)
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL,header3.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lXqzQHyYKUu30unG3bUrMg==,{00000508-0000-0010-8000-00AA006D2EA5},0, "<MID>pIKx8Wsy5aYRQN8LLIIcTQ==</MID>",emxn97LSqGQaNENxoJlVK1SyQFp8p8YrcpQ36VaawN63bDegD0QVFw==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump,NULL)
TestManagerCommit
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/get3.asp)
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/get3.asp)=0X80070103 DRM_E_NOMORE
EndIf


32024:FUNC:P1:Metercertstore-- try to commit a license that doesn't need metering when there is a an entry in the store, sotre should still have the old entry
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<MID>pIKx8Wsy5aYRQN8LLIIcTQ==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump,NULL)
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL,header3.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lXqzQHyYKUu30unG3bUrMg==,{00000508-0000-0010-8000-00AA006D2EA5},0, NULL,emxn97LSqGQaNENxoJlVK1SyQFp8p8YrcpQ36VaawN63bDegD0QVFw==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump,NULL)
TestManagerCommit
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp)
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp)=0X80070103 DRM_E_NOMORE
EndIf


32025:FUNC:P1:Metercertstore-- try to commit a license that needs metering wich already has an entry for the MID in the cert store with the same URL
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<MID>pIKx8Wsy5aYRQN8LLIIcTQ==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump,NULL)
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lXqzQHyYKUu30unG3bUrMg==,{00000508-0000-0010-8000-00AA006D2EA5},0, "<MID>pIKx8Wsy5aYRQN8LLIIcTQ==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump,Dump,NULL)
TestManagerCommit
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp)
TestManagerMeterCertEnumNext(pIKx8Wsy5aYRQN8LLIIcTQ==,http://www.contoso.com/licenseacq.asp)=0X80070103 DRM_E_NOMORE
EndIf


32026:FUNC:P1:Metering-- Verify the correct play count is contained in the metering challenge after two bind/commit calls
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},0, "<MID>P1zEyiNcMVA074CGwMydbg==</MID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(AppContext)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit(0 don't overwrite decrypt context, Dump)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerReinitialize(Reset)
TestDRM_Manager_GenerateMeterChallengeV3(NORMAL, binmetercert2.dat, "Hello World", NORMAL, NORMAL, NORMAL, "1RNCT1Rw2rgtZBUL7drLPEnQerRAwSRUGSDyQOg6CH4=", "+3x8NSroVg4eXCzWqPU+BA==", "Play", "2")
'Skip this step until bug in TestDRM_Manager_GenerateMeterChallengeV3 is fixed
'TestDRM_Manager_ProcessMeterResponseV3(NORMAL, __MeterResponse.txt, NORMAL, 0)
EndIf


32027:FUNC:P1:Metercertstore-- Add a binary meter cert and enum it.
TestManagerUpdateMeterCertFromFile(files\PlayReadyMeterCert.dat)
TestManagerMeterCertInitEnum
TestManagerMeterCertEnumNext(KXb4c+eaDkuUH6ueOLGATw==,,,NULL)

34000:DRT:P0:Envelope-- Read a protected envelope file
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lFmb2gxg0Cr5bfEnJXgJeA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0, files\test_envelope_rc4.eny)
TestManagerReOpenEnvelope(0,1, files\test_envelope_rc4.eny)
TestManagerGetEnvelopeOriginalFilename(0, test_envelope_file1.txt)
TestManagerGetEnvelopeOriginalFilename(1, test_envelope_file1.txt)
TestManagerGetEnvelopeSize(0, 1040)
TestManagerGetEnvelopeSize(1, 1040)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,test_envelope_file1.txt, 0, 500)
TestManagerInitializeEnvelopeRead(1)
TestManagerReadEnvelope(1,test_envelope_file1.txt)
TestManagerReadEnvelope(0,test_envelope_file1.txt, 500)
TestManagerCloseEnvelope(0)
TestManagerCloseEnvelope(1)
EndIf

34001:BVT:P0:Envelope-- Get file size after read a protected envelope file
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lFmb2gxg0Cr5bfEnJXgJeA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0, files\test_envelope_rc4.eny)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerReadEnvelope(0,test_envelope_file1.txt)
TestManagerGetEnvelopeSize(0,1040)
TestManagerCloseEnvelope(0)
EndIf

34002:FUNC:P1:Envelope-- Open Envelope with null manager context
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lFmb2gxg0Cr5bfEnJXgJeA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0,files\test_envelope_rc4.eny,NULL)=0X80070057 (DRM_E_INVALIDARG)
EndIf

34003:FUNC:P1:Envelope-- Open Envelope with invalid filename
TestManagerSetRights(Play)
TestManagerOpenEnvelope(0,files\notestenvelopefile.eny)=-2147286930(0X8003006E)

34004:FUNC:P2:Envelope-- Open Envelope with NULL Filename
TestManagerSetRights(Play)
TestManagerOpenEnvelope(0,NULL)=0X80070057

34009:FUNC:P1:Envelope-- Open Envelope with NULL Envelope Context
TestManagerSetRights(Play)
TestManagerOpenEnvelope(NULL,files\test_envelope_rc4.eny)=0X80070057 (DRM_E_INVALIDARG)

34005:FUNC:P1:Envelope-- Close file with NULL File context
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lFmb2gxg0Cr5bfEnJXgJeA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0,files\test_envelope_rc4.eny)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,test_envelope_file1.txt)
TestManagerGetEnvelopeSize(0,1040)
TestManagerCloseEnvelope(NULL)=0X80070057
TestManagerCloseEnvelope(0)
EndIf

34006:FUNC:P2:Envelope-- InitializeEnvelopeRead with NULL File context
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lFmb2gxg0Cr5bfEnJXgJeA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0,files\test_envelope_rc4.eny)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerInitializeEnvelopeRead(0,NULL)=0X80070057
TestManagerCloseEnvelope(0)
EndIf

34007:FUNC:P1:Envelope-- Get File Size with NULL File context
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lFmb2gxg0Cr5bfEnJXgJeA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0,files\test_envelope_rc4.eny)
TestManagerGetEnvelopeSize(NULL,1040)=0X80070057 (DRM_E_BUFFERTOOSMALL)
TestManagerCloseEnvelope(0)
EndIf

34010:BVT:P0:Envelope-- Read protected envelope file with image content
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Gs5RG23nYOF4yM7edcJWNA==,{00000507-0000-0010-8000-00AA006D2EA9},0,NULL,LApl/jtXYKinlmqMNmJIKeTMtFE=,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0,files\winter.eny)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,winter.jpg)
TestManagerCloseEnvelope(0)
EndIf

34013:BVT:P0:Envelope-- Open two protected envelope files and read contents, try to close an already closed envelope context
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lFmb2gxg0Cr5bfEnJXgJeA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0,files\test_envelope_rc4.eny)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,test_envelope_file1.txt)

TestManagerInitResponse
TestManagerAddLicenseToResponse(Gs5RG23nYOF4yM7edcJWNA==,{00000507-0000-0010-8000-00AA006D2EA9},0,NULL,LApl/jtXYKinlmqMNmJIKeTMtFE=,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(1,files\winter.eny)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerInitializeEnvelopeRead(1)
TestManagerReadEnvelope(1,winter.jpg)


'Reading past the end of the file will mean that the "cbRead" returned by ReadFile will be less than what was asked for
TestManagerReadEnvelope(0,test_envelope_file1.txt)=0X8004C31D DRM_E_TEST_INCOMPLETE
TestManagerCloseEnvelope(0)
TestManagerCloseEnvelope(1)
TestManagerCloseEnvelope(0)=0x80070057 DRM_E_INVALIDARG
EndIf

34014:BVT:P0:Envelope-- Read first, then second,  10 bytes of content
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(lFmb2gxg0Cr5bfEnJXgJeA==,{00000507-0000-0010-8000-00AA006D2EA4},0,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0,files\test_envelope_rc4.eny)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,test_envelope_file1.txt, 0, 10)
TestManagerReadEnvelope(0,test_envelope_file1.txt, 10, 10)
TestManagerCloseEnvelope(0)
EndIf

34016:DRT:P0:Envelope-- Read a protected envelope file encrypted with AES counter mode
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerGetEnvelopeSize(0,1040)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,test_envelope_file1.txt)
TestManagerCloseEnvelope(0)

34017:DRT:P0:Envelope-- Seek in a protected envelope file encrypted with AES counter mode
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerGetEnvelopeSize(0,1040)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerSeekEnvelope(0,0,-10)=0x80070057 DRM_E_INVALIDARG
TestManagerSeekEnvelope(0,0,10)
TestManagerReadEnvelope(0,test_envelope_file1.txt,10,20)
TestManagerReadEnvelope(0,test_envelope_file1.txt,30,1)
TestManagerReadEnvelope(0,test_envelope_file1.txt,31,7)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerReadEnvelope(0,test_envelope_file1.txt,38,1002)
TestManagerSeekEnvelope(0,0,0)
TestManagerReadEnvelope(0,test_envelope_file1.txt)
TestManagerSeekEnvelope(0,0,599)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerReadEnvelope(0,test_envelope_file1.txt,599,441)
TestManagerCloseEnvelope(0)

34012:BVT:P0:Envelope-- Seek in Envelope from OEM_FILE_CURRENT
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerGetEnvelopeSize(0,1040)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerSeekEnvelope(0,0,10)
TestManagerSeekEnvelope(0,1,39)
TestManagerReadEnvelope(0,test_envelope_file1.txt,49,20)
TestManagerReadEnvelope(0,test_envelope_file1.txt,69,1)
TestManagerReadEnvelope(0,test_envelope_file1.txt,70,7)
TestManagerSeekEnvelope(0,1,-37)
TestManagerReadEnvelope(0,test_envelope_file1.txt,40,20)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerCloseEnvelope(0)

34011:BVT:P0:Envelope-- Seek in Envelope from OEM_FILE_END
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerGetEnvelopeSize(0,1040)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerSeekEnvelope(0,2,-51)
TestManagerSeekEnvelope(0,2,23)=0X80070057 DRM_E_INVALIDARG
TestManagerReadEnvelope(0,test_envelope_file1.txt,989,50)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
TestManagerCloseEnvelope(0)

34015:BVT:P0:Envelope-- Test params for GetOriginalFileName
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt)
'Null buffer, non null size
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt, 3) =0x8007007A DRM_E_BUFFERTOOSMALL
'Non Null Buffer and 0 size
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt, 5) =0x8007007A DRM_E_BUFFERTOOSMALL
'Null Context
TestManagerGetEnvelopeOriginalFilename(NULL,test_envelope_file1.txt) =0x80070057 DRM_E_INVALIDARG
'Null count Pointer
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt, 9) =0x80070057 DRM_E_INVALIDARG
'Null count Pointer and null buffer
TestManagerGetEnvelopeOriginalFilename(0,test_envelope_file1.txt, 11) =0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34018:BVT:P0:Envelope-- Seek in a reopened Envelope
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReOpenEnvelope(0,1,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(1)
TestManagerSeekEnvelope(0, 0, 500 )
TestManagerSeekEnvelope(1, 0, 499 )
TestManagerReadEnvelope(0, test_envelope_file1.txt, 500, 150 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 499, 10 )
TestManagerSeekEnvelope(0, 1, 121 )
TestManagerSeekEnvelope(1, 1, 50 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 559, 10 )
TestManagerReadEnvelope(0, test_envelope_file1.txt, 771, 10 )
TestManagerSeekEnvelope(1, 1, -100 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 469, 10 )
TestManagerCloseEnvelope(0)
TestManagerCloseEnvelope(1)

34019:BVT:P0:Envelope-- Seek in a reopened Envelope after Closing the Original
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReOpenEnvelope(0,1,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(1)
TestManagerSeekEnvelope(0, 0, 500 )
TestManagerSeekEnvelope(1, 0, 499 )
TestManagerReadEnvelope(0, test_envelope_file1.txt, 500 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 499, 10 )
TestManagerCloseEnvelope(0)
TestManagerSeekEnvelope(1, 1, 50 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 559, 10 )
TestManagerSeekEnvelope(1, 1, -100 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 469, 10 )
TestManagerCloseEnvelope(1)

34020:FUNC:P1:Envelope-- Open 3 Contexts for the same envelope
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReOpenEnvelope(0,1,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(1)
TestManagerReOpenEnvelope(0,2,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(2)
TestManagerSeekEnvelope(0, 0, 500 )
TestManagerSeekEnvelope(1, 0, 499 )
TestManagerSeekEnvelope(2, 0, 798 )
TestManagerReadEnvelope(0, test_envelope_file1.txt, 500, 150 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 499, 10 )
TestManagerReadEnvelope(2, test_envelope_file1.txt, 798, 100 )
TestManagerSeekEnvelope(0, 1, 121 )
TestManagerSeekEnvelope(1, 1, 50 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 559, 10 )
TestManagerReadEnvelope(0, test_envelope_file1.txt, 771, 10 )
TestManagerSeekEnvelope(1, 1, -100 )
TestManagerReadEnvelope(1, test_envelope_file1.txt, 469, 10 )
TestManagerSeekEnvelope(2, 1, -100 )
TestManagerReadEnvelope(2, test_envelope_file1.txt, 798, 10 )
TestManagerCloseEnvelope(0)
TestManagerCloseEnvelope(1)
TestManagerCloseEnvelope(2)

34021:FUNC:P1:Envelope-- ReOPen with an invalid source pointer
TestManagerReOpenEnvelope(INVALID,1,files\test_envelope_aes.eny) =0x80070057 DRM_E_INVALIDARG

34022:FUNC:P1:Envelope-- ReOPen with an invalid filename
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerReOpenEnvelope(0,1,files\notestenvelope.eny)=-2147286930(0X8003006E)(DRM_E_FILEOPEN)
TestManagerCloseEnvelope(0)

34023:FUNC:P2:Envelope-- ReOPen with NULL args
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerReOpenEnvelope(NULL,1,files\test_envelope_aes.eny)=0x80070057 DRM_E_INVALIDARG
TestManagerReOpenEnvelope(0,NULL,files\test_envelope_aes.eny)=0x80070057 DRM_E_INVALIDARG
TestManagerReOpenEnvelope(0,1,NULL) =0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34024:BVT:P0:Envelope-- InitializeRead with a NULL crypto context pointer
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0, NULL)=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34025:FUNC:P1:Envelope-- Get the size of an Invalid file context
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerGetEnvelopeSize(INVALID,1040)=0x80070057 DRM_E_INVALIDARG
TestManagerGetEnvelopeSize(0,1040)
TestManagerCloseEnvelope(0)

34026:FUNC:P1:Envelope-- Seek an Invalid file context
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerSeekEnvelope(INVALID,0,10)=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34027:FUNC:P1:Envelope-- Read an Invalid file context
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(INVALID,test_envelope_file1.txt, 500, 150 )=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34028:FUNC:P1:Envelope-- Get the original filename with an Invalid file context
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerGetEnvelopeOriginalFilename(INVALID,test_envelope_file1.txt, 1 Cause it to use a non null string pointer )=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34029:FUNC:P1:Envelope-- close an envelope with an Invalid file context
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCloseEnvelope(INVALID)=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34030:FUNC:P1:Envelope-- InitializeRead on an envelope with an Invalid file context
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(INVALID)=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34031:FUNC:P1:Envelope-- Seek a NULL file context
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerSeekEnvelope(NULL,0,10)=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34032:FUNC:P1:Envelope-- Seek a 0 distance
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerSeekEnvelope(0,0,0)
TestManagerSeekEnvelope(0,1,0)
TestManagerSeekEnvelope(0,2,0)
TestManagerCloseEnvelope(0)

34033:FUNC:P1:Envelope-- Read a 0 distance
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,test_envelope_file1.txt, 0, 0 )
TestManagerCloseEnvelope(0)

34034:FUNC:P1:Envelope-- Read with a NULL file context
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(NULL,test_envelope_file1.txt, 0, 0 )=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34035:FUNC:P1:Envelope-- Read with a NULL byte pointer
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,test_envelope_file1.txt, 0, 0 , 1 NULL Byte Pointer)=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34036:FUNC:P1:Envelope-- Read with a NULL count read pointer
TestManagerOpenEnvelope(0,files\test_envelope_aes.eny)
TestManagerCreateDecryptContext(7k2zPudV9AMlUhVDLC7zrw==)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,test_envelope_file1.txt, 0, 0, 2 NULL count Read Pointer )=0x80070057 DRM_E_INVALIDARG
TestManagerCloseEnvelope(0)

34037:FUNC:P1:Envelope--Try to open a file with an incorrect envelope signature
TestManagerOpenEnvelope(0,files\winter_bad_envelope_signature.eny) = 0x8004a019 DRM_E_ENVELOPE_CORRUPT

34038:FUNC:P1:Envelope--Try to open a file with a bad RM Header
TestManagerOpenEnvelope(0,files\winter_bad_rm_header.eny) = 0x80041108 DRM_E_CH_INVALID_HEADER

34039:FUNC:P1:Envelope--Try to open a file without a RM Header
TestManagerOpenEnvelope(0,files\winter_no_rm_header.eny) = 0x80041108 DRM_E_CH_INVALID_HEADER

34040:FUNC:P1:Envelope--Try to open a file with envelope compatibility version and envelope version = 2
TestManagerOpenEnvelope(0,files\winter_bad_envelope_header_version.eny) = 0x8004a01a DRM_E_ENVELOPE_FILE_NOT_COMPATIBLE

34041:FUNC:P1:Envelope--Try to open a file with envelope compatibility version and envelope version = 2
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Gs5RG23nYOF4yM7edcJWNA==,{00000507-0000-0010-8000-00AA006D2EA9},0,NULL,LApl/jtXYKinlmqMNmJIKeTMtFE=,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)

TestManagerOpenEnvelope(0,files\winter_envelope_version_2_compat_version_1.eny)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerInitializeEnvelopeRead(0)
TestManagerReadEnvelope(0,winter.jpg)
TestManagerCloseEnvelope(0)
EndIf


10337:DRT: Process V4 license response and Bind to XMR License (Play)
TestManagerSetRights( Play )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump)
TestManagerCommit

10338:DRT: Process V4 license response and Bind to XMR License (Copy)
TestManagerSetRights( Copy )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit

'10339:DRT: Bind to XMR license multiple times to reduce play count
'TestManagerSetRights( Play )
'TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL , NULL , 3 )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetHeader( NORMAL, headerXMR.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL)
'TestManagerCommit
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetHeader( NORMAL, headerXMR.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
'TestManagerCommit
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetHeader( NORMAL, headerXMR.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
'TestManagerCommit
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetHeader( NORMAL, headerXMR.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )=0X8004C009 DRM_E_LICENSEEXPIRED
'TestManagerCommit

10340:DRT: Bind to XMR license multiple times to reduce copy count
TestManagerSetRights( Copy )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 2  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )=0X8004C009 DRM_E_LICENSEEXPIRED
TestManagerCommit


10341:DRT: Bind to license with invalid right (XMR)
TestManagerSetRights( Invalid )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )=0x8004c00b ( DRM_E_RIGHTSNOTAVAILABLE )
TestManagerCommit

10342:DRT: Bind to license with unavailable right (XMR)
TestManagerSetRights( PlaylistBurn )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetHeader( NORMAL, headerXMR.xml )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )=0x8004c00b ( DRM_E_RIGHTSNOTAVAILABLE )
TestManagerCommit

'10343:DRT: Process V4 license response and Bind to XMR License (CreateThumbnailImage) and make sure it is not metered
'TestManagerAddXMRLicense(eFY0IjQSNBISNBI0VniavA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, 'lVvvpn!q4bMJi!BosMpAPZ9IERg=)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetRights( CreateThumbnailImage )
'TestManagerOpenEnvelope(4,jazzV4_AES.eny)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
'TestManagerCommit = 1
'TestManagerGenerateMeterChallenge(files\metercert.xml, "lVvvpn!q4bMJi!BosMpAPZ9IERg=")

'Disabled because XMR V3 Doesn't have Expire On Store
'50343:FUNC: Bind to Chained license with Root OnStore Expiration (XMR)
'TestManagerSetRights( Play )
'TestManagerSetHeader( NORMAL, music1V4header.xml )
'TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , ROOT , NULL , NULL , NULL , 1000 )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
'TestManagerCommit
'TestManagerReinitialize(Reset)


50344:FUNC: Bind to Chained license with Root OnFirstUse Expiration (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , ROOT , NULL , NULL , 1000 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

50345:FUNC: Bind to Chained license with Root Exp Date Expiration (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , ROOT , NULL , NULL , NULL , NULL , 2000 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

'Disabled because XMR V3 dossn't have count
'50347:FUNC: Bind to Chained license with Root PlayCount Expiration of 3 (XMR)
'TestManagerSetRights( Play )
'TestManagerSetHeader( NORMAL, music1V4header.xml )
'TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , ROOT , 3)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
'TestManagerCommit
'TestManagerReinitialize(Reset)


50348:FUNC: Bind to Chained license with Root GracePeriod of 1 hr (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , ROOT , NULL , NULL , NULL , NULL , NULL , 3600  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

'Disabled because XMR V3 doesn't support expire on store
'50349:FUNC: Bind to Chained license with Leaf OnStore Expiration (XMR)
'TestManagerSetRights( Play )
'TestManagerSetHeader( NORMAL, music1V4header.xml )
'TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== , NULL , NULL , NULL , 3600 , NULL , 3600 , NULL , NULL  )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
'TestManagerCommit
'TestManagerReinitialize(Reset)


50350:FUNC: Bind to Chained license with Leaf OnFirstUse Expiration (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== , NULL , NULL , 3600 , NULL , NULL , NULL , NULL , NULL  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

50351:FUNC: Bind to Chained license with Leaf Exp Date Expiration (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== , NULL , NULL , NULL , NULL , 3600 , NULL , NULL , NULL  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

'Disabled Because XMR V3 doesn't have counts
'50353:FUNC: Bind to Chained license with Root PlayCount Expiration of 3 (XMR)
'TestManagerSetRights( Play )
'TestManagerSetHeader( NORMAL, music1V4header.xml )
'TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== , 3 , NULL , NULL )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
'TestManagerCommit
'TestManagerReinitialize(Reset)


50354:FUNC: Bind to Chained license with Root GracePeriod of 1 hr (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL , pgUadCv6D0KmSrTgf1HV0w== , NULL , NULL , NULL , NULL , 3600 , NULL , NULL  )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, 3600 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

50355:FUNC: Bind to a Simple Domain-Bound license (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

'Disabled because xmr v3 doesn't support playcont.
'50356:FUNC: Bind to a Simple Domain-Bound license with Playcount of 3 (XMR)
'TestManagerSetRights( Play )
'TestManagerSetHeader( NORMAL, music1V4header.xml )
'ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
'TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, 3, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
'TestManagerCommit
'TestManagerReinitialize(Reset)


50357:FUNC: Bind to a Simple Domain-Bound license with Expiration Date(XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, 3600, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

50358:FUNC: Bind to a Chained Domain-Bound license (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, pgUadCv6D0KmSrTgf1HV0w==)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

'Disabled because XMR V3 doesn't support counts
'50359:FUNC: Bind to a Chained Domain-Bound license with Leaf Playcount 3(XMR)
'TestManagerSetRights( Play )
'TestManagerSetHeader( NORMAL, music1V4header.xml )
'ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
'TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, pgUadCv6D0KmSrTgf1HV0w== , 3)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
'TestManagerCommit
'TestManagerReinitialize(Reset)


50360:FUNC: Bind to a Chained Domain-Bound license with Leaf Exp Date (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, pgUadCv6D0KmSrTgf1HV0w== , NULL, NULL, NULL, NULL, 3600)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

50361:FUNC: Bind to a Simple Domain-Bound license with 500 Ana. Video OPL (XMR)
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== , 500 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,500,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

'Disabled due to PS #3760 Content Access Technologies
'The Root contains an OPL Restriction on Uncom. Dig Video for 200, while the Leaf
'contains an OPL Restriction on Uncom. Dig Video for 400 - the OPL Callback
'attempts to return the more restrictive OPL
'50363:FUNC: Attempt to bind to a Chained License with stricter OPL in the Root than the Leaf.
'TestManagerSetRights( Play )
'TestManagerSetHeader( NORMAL, music1V4header.xml )
'TestManagerInitResponse
'LoadResponseFromFile( XMROPL8.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerPrepareOPLCallback(100,400,100,100,100,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
'TestManagerCommit
'TestManagerReinitialize(Reset)

'The Root contains an OPL Restriction on Uncom. Dig Video for 400, while the Leaf
'contains an OPL Restriction on Uncom. Dig Video for 200 - the OPL Callback
'attempts to return the more restrictive OPL
50364:FUNC: Attempt to bind to a Chained License with different OPL Restrictions in the Leaf and Root Licenses.
TestManagerSetRights( Play )
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, AH+03juKbUGbHl1V/QIwRA==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL , NULL , NULL , NULL , NULL , 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( AH+03juKbUGbHl1V/QIwRA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL , NULL , NULL , NULL , NULL , 400 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,400,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

'Disabled due to PS #3760 Content Access Technologies
'The Root contains an OPL Restriction on Uncom. Dig Audio for 400, while the Leaf
'contains an OPL Restriction on Com. Dig Audio for 200 - both otherwise contain
'the minmum OPL restrictions (100) in all other OPLs. The OPL Callback
'attempts to return the more restrictive of all OPL - with Com. Dig Audio for 200, Uncom. Dig Audio for 400.
'50365:FUNC: Attempt to bind to a Chained License with stricter OPL in the Leaf than Root.
'TestManagerSetRights( Play )
'TestManagerSetHeader( NORMAL, music1V4header.xml )
'TestManagerInitResponse
'LoadResponseFromFile( XMROPL10.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerPrepareOPLCallback(100,100,100,200,400,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
'TestManagerCommit
'TestManagerReinitialize(Reset)

10433:DRT: Get license data on the right of play back (XMR)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerGetLicenseData( Dump, 3, Dump, 1, 0 )

10434:DRT: Get license data with invalid right (XMR)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerGetLicenseData( Dump, 2, Dump, 3, 0 )

10435:DRT: Get license data with valid right not in license (XMR)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerGetLicenseData( Dump, 1, Dump, 3, 0 )


'
' Test call back function module 0 expects EkVVY3E= as the secure data with right 1234 and restriction 1000
'
'
' Test callback when not using secure data in restrictions returns: 
'    success with restriction policy AAAABQI=
'    fail with policy AAAABQE=
'    and license expired with policy AAAABQA=
'
10436:DRT: Process V4 license response and Bind to extensible right with extensible restrictions in XMR license (RIGHT 1234)
TestManagerSetRights( 1234 )
TestManagerSetExtensiblePolicy( TRUE, 1234, TRUE, 1 XMR_OBJECT_TYPE_OUTER_CONTAINER, 6 XMR_FLAGS_CONTAINER | XMR_FLAGS_ALLOW_EXTERNAL_PARSE )
TestManagerSetExtensiblePolicy( FALSE, 1000, TRUE, 1234, 20 XMR_FLAGS_HAS_SECURE_STATE | XMR_FLAGS_ALLOW_EXTERNAL_PARSE, 4 XMR_EXTENSIBLE_RESTRICTON_STATE_BYTEARRAY, EkVVY3E=, AAAABQI= )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, P1zEyiNcMVA074CGwMydbg==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE, TRUE, NULL, NULL, TestCustomData)
TestManagerProcessResponse( Dump, Dump, 0, 0 ) = 2 DRM_S_MORE_DATA
TestManagerSetKID( lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerReinitialize(Reset)
TestDRM_Manager_GenerateMeterChallengeV3(NORMAL, binmetercert2.dat, "Hello World", NORMAL, NORMAL, NORMAL, "1RNCT1Rw2rgtZBUL7drLPEnQerRAwSRUGSDyQOg6CH4=", "lFmb2gxg0Cr5bfEnJXgJeA==", "1234", "3")
'Skip this step until bug in TestDRM_Manager_GenerateMeterChallengeV3 is fixed
'TestDRM_Manager_ProcessMeterResponseV3(NORMAL, __MeterResponse.txt, NORMAL, 0)


10437:DRT: Process V4 license response and Bind to extensible right with extensible restrictions in XMR license (EXECUTERIGHT)
TestManagerSetRights( 63 )
TestManagerSetExtensiblePolicy( TRUE, 63, TRUE, 1 XMR_OBJECT_TYPE_OUTER_CONTAINER, 6 XMR_FLAGS_CONTAINER | XMR_FLAGS_ALLOW_EXTERNAL_PARSE )
TestManagerSetExtensiblePolicy( FALSE, 1001, TRUE, 63, 20 XMR_FLAGS_HAS_SECURE_STATE | XMR_FLAGS_ALLOW_EXTERNAL_PARSE, 3 XMR_EXTENSIBLE_RESTRICTON_STATE_DATE, 0, AAAABQI= )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, P1zEyiNcMVA074CGwMydbg==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE, TRUE, NULL, NULL, TestCustomData)
TestManagerProcessResponse( Dump, Dump, 0, 0 ) = 2 DRM_S_MORE_DATA
TestManagerSetKID( lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerReinitialize(Reset)
TestDRM_Manager_GenerateMeterChallengeV3(NORMAL, binmetercert2.dat, "Hello World", NORMAL, NORMAL, NORMAL, "1RNCT1Rw2rgtZBUL7drLPEnQerRAwSRUGSDyQOg6CH4=", "lFmb2gxg0Cr5bfEnJXgJeA==", "63", "2")
'Skip this step until bug in TestDRM_Manager_GenerateMeterChallengeV3 is fixed
'TestDRM_Manager_ProcessMeterResponseV3(NORMAL, __MeterResponse.txt, NORMAL, 0)


10438:DRT: Process V4 license response and Bind to extensible right with extensible restrictions in XMR license (1234) without extensible handler
TestManagerSetRights( 1234 )
TestManagerSetExtensiblePolicy( TRUE, 1234, TRUE, 1 XMR_OBJECT_TYPE_OUTER_CONTAINER, 6 XMR_FLAGS_CONTAINER | XMR_FLAGS_ALLOW_EXTERNAL_PARSE )
TestManagerSetExtensiblePolicy( FALSE, 4321, TRUE, 1234, 20 XMR_FLAGS_HAS_SECURE_STATE | XMR_FLAGS_ALLOW_EXTERNAL_PARSE, 3 XMR_EXTENSIBLE_RESTRICTON_STATE_DATE, 0, AAAABQI= )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, P1zEyiNcMVA074CGwMydbg==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE, TRUE, NULL, NULL, TestCustomData)
TestManagerProcessResponse( Dump, Dump, 0, 0 ) = 2 DRM_S_MORE_DATA
TestManagerSetKID( lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
TestManagerReinitialize(Reset)
TestDRM_Manager_GenerateMeterChallengeV3(NORMAL, binmetercert2.dat, "Hello World", NORMAL, NORMAL, NORMAL, "1RNCT1Rw2rgtZBUL7drLPEnQerRAwSRUGSDyQOg6CH4=", "lFmb2gxg0Cr5bfEnJXgJeA==", "1234", "1")
'Skip this step until bug in TestDRM_Manager_GenerateMeterChallengeV3 is fixed
'TestDRM_Manager_ProcessMeterResponseV3(NORMAL, __MeterResponse.txt, NORMAL, 0)


10439:DRT: Process V4 license response and Bind to extensible right with expired extensible restrictions in XMR license (EXECUTERIGHT) without extensible handler
TestManagerSetRights( 63 )
TestManagerSetExtensiblePolicy( TRUE, 63, TRUE, 1 XMR_OBJECT_TYPE_OUTER_CONTAINER, 6 XMR_FLAGS_CONTAINER | XMR_FLAGS_ALLOW_EXTERNAL_PARSE )
TestManagerSetExtensiblePolicy( FALSE, 1000, TRUE, 63, 20 XMR_FLAGS_HAS_SECURE_STATE | XMR_FLAGS_ALLOW_EXTERNAL_PARSE, 4 XMR_EXTENSIBLE_RESTRICTON_STATE_BYTEARRAY, EkVVY3E=, AAAABQI= )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, P1zEyiNcMVA074CGwMydbg==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE, TRUE, NULL, NULL, TestCustomData)
TestManagerProcessResponse( Dump, Dump, 0, 0 ) = 2 DRM_S_MORE_DATA
TestManagerSetKID( lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
TestManagerReinitialize(Reset)
TestDRM_Manager_GenerateMeterChallengeV3(NORMAL, binmetercert2.dat, "Hello World", NORMAL, NORMAL, NORMAL, "1RNCT1Rw2rgtZBUL7drLPEnQerRAwSRUGSDyQOg6CH4=", "lFmb2gxg0Cr5bfEnJXgJeA==", "63", "3")
'Skip this step until bug in TestDRM_Manager_GenerateMeterChallengeV3 is fixed
'TestDRM_Manager_ProcessMeterResponseV3(NORMAL, __MeterResponse.txt, NORMAL, 0)

10440:DRT: Process V4 license response and bind to existing Play right with extensible restrictions
TestManagerSetRights( Play )
TestManagerSetExtensiblePolicy( FALSE, 1000, TRUE, 4 PLAYRIGHT, 20 XMR_FLAGS_HAS_SECURE_STATE | XMR_FLAGS_ALLOW_EXTERNAL_PARSE, 2 XMR_EXTENSIBLE_RESTRICTON_STATE_COUNT, 145, AAAABQI= )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, P1zEyiNcMVA074CGwMydbg==, 500, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, FALSE, TRUE, NULL, NULL, TestCustomData)
TestManagerProcessResponse( Dump, Dump, 0, 0 ) = 2 DRM_S_MORE_DATA
TestManagerSetKID( lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
TestManagerReinitialize(Reset)
TestDRM_Manager_GenerateMeterChallengeV3(NORMAL, binmetercert2.dat, "Hello World", NORMAL, NORMAL, NORMAL, "1RNCT1Rw2rgtZBUL7drLPEnQerRAwSRUGSDyQOg6CH4=", "lFmb2gxg0Cr5bfEnJXgJeA==", "Play", "2")
'Skip this step until bug in TestDRM_Manager_GenerateMeterChallengeV3 is fixed
'TestDRM_Manager_ProcessMeterResponseV3(NORMAL, __MeterResponse.txt, NORMAL, 0)

' TFS 158143 - Test XMR builder cannot add extensible restrictions in copy and playlistburn objects
'10441:DRT: Process V4 license response and bind to existing PlaylistBurn right with extensible restrictions
'TestManagerSetRights( 15 )
'TestManagerSetExtensiblePolicy( FALSE, 1000, TRUE, 15 PlayListBurn, 4 XMR_FLAGS_ALLOW_EXTERNAL_PARSE, NULL, NULL, AAAABQI= )
'TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, P1zEyiNcMVA074CGwMydbg==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, FALSE, TRUE, AddPlaylistBurn, NULL, TestCustomData)
'TestManagerProcessResponse( Dump, Dump, 0, 0 ) = 2 DRM_S_MORE_DATA
'TestManagerSetKID( lFmb2gxg0Cr5bfEnJXgJeA== )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerCommit
'TestManagerReinitialize(Reset)
'TestDRM_Manager_GenerateMeterChallengeV3(NORMAL, binmetercert2.dat, "Hello World", NORMAL, NORMAL, NORMAL, "1RNCT1Rw2rgtZBUL7drLPEnQerRAwSRUGSDyQOg6CH4=", "lFmb2gxg0Cr5bfEnJXgJeA==", "15", "1")
''Skip this step until bug in TestDRM_Manager_GenerateMeterChallengeV3 is fixed
''TestDRM_Manager_ProcessMeterResponseV3(NORMAL, __MeterResponse.txt, NORMAL, 0)

' TFS 158143 - Test XMR builder cannot add extensible restrictions in copy and playlistburn objects
'10442:DRT: Process V4 license response and bind to existing Copy right with extensible restrictions
'TestManagerSetRights( Copy )
'TestManagerSetExtensiblePolicy( FALSE, 1000, TRUE, 60 CopyRight, 4 XMR_FLAGS_ALLOW_EXTERNAL_PARSE, NULL, NULL, AAAABQA= )
'TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, pIKx8Wsy5aYRQN8LLIIcTQ==, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, FALSE, TRUE, NULL, NULL, TestCustomData)
'TestManagerProcessResponse( Dump, Dump, 0, 0 ) = 2 DRM_S_MORE_DATA
'TestManagerSetKID( lFmb2gxg0Cr5bfEnJXgJeA== )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=0x8004C009 DRM_E_LICENSEEXPIRED
'TestManagerReinitialize(Reset)

10501:DRT: Bind to Domain-Bound license for play (XMR)
TestManagerSetHeader( NORMAL, music1V4header.xml )
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback )
TestManagerCommit

10502:DRT: Bind to license bound to invalid domain (XMR)
TestManagerSetHeader( NORMAL, music1V4header.xml )
' Force the XMR license builder to use a random domain key since no domain cert is available
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ==)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetRights( Play )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback )=0x8004C009( DRM_E_LICENSEEXPIRED )

10503:DRT: Bind to license bound to valid domain with bad revision (XMR)
TestManagerSetHeader( NORMAL, music1V4header.xml )
' Force the XMR license build to use a random domain key since no domain cert is available
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ==)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
' Now join the domain
ProcessDomainJoinResponse( 0, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights( Play )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback )=0x8004C009( DRM_E_LICENSEEXPIRED )

10526:DRT: Basic encrypt/decrypt
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NULL )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext )

10527:DRT: Decrypt should fail if InitDecrypt not called (Cocktail)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NULL )=0x800480D3(DRM_E_DECRYPT_NOTINITIALIZED)

1530:DRT: Decrypt should succeed if InitDecrypt not called (AES)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext )

10528:FUNC: InitDecrypt should fail with NULL DecryptContext
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt )
TestManagerInitDecrypt( NULL, 0 OffsetFromLast15 )=-2147024809(0X80070057, E_INVALIDARG)
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerInitDecrypt( NULL, 0 OffsetFromLast15 )=-2147024809(0X80070057, E_INVALIDARG)

10529:FUNC: InitDecrypt should fail with NULL pbLast15 (Cocktail)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt )
TestManagerInitDecrypt( NORMAL DecryptContext, NULL )=-2147024809(0X80070057, E_INVALIDARG)

1531:FUNC: InitDecrypt should succeed with NULL pbLast15 (AES)
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerInitDecrypt( NORMAL DecryptContext, NULL )

10530:DRT: InitDecrypt should fail if Cipher not initialized
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )=0x800480D2(DRM_E_CIPHER_NOTINITIALIZED)

10531:FUNC: Decrypt should fail with NULL CounterModeContext (AES)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NULL )=-2147024809(0X80070057, E_INVALIDARG)

10532:FUNC: Decrypt should succeed with non-NULL CounterModeContext (RC4)
If(WMDRMSupported)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerEncrypt( RC4 CipherType, 100 DataLengthToEncrypt, DRdSjIAZVg== )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
TestManagerReinitialize( AppContext, FALSE, FALSE )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext )
EndIf


10535:FUNC: Decrypt should succeed with several different counter-mode parameters (AES)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, 1234, 5678 )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, 1234, 5678 )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, 1, 100 )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, 1, 100 )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, 80, 80 )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, 80, 80 )

10536:FUNC: Decrypt should fail with mismatched counter-mode parameters (AES)
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, 1234, 5678 )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, 1234, 1 )=0X8004C304(DRM_E_TEST_DECRYPT_FAILURE)
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, 1, 100 )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, 100, 1 )=0X8004C304(DRM_E_TEST_DECRYPT_FAILURE)
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, 80, 80 )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, 0, 0 )=0X8004C304(DRM_E_TEST_DECRYPT_FAILURE)

10560:FUNC:Encrypt and decrypt AES with block offest at and near MAX QWORD
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, NULL, 0xFFFFFFFF-0xFFFFFFFF )
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15, 55 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, NULL, 0xFFFFFFFF-0xFFFFFFFF )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, NULL, 0xFFFFFFFF-0xFFFFFFFE )
TestManagerInitDecrypt( NORMAL DecryptContext,  0 OffsetFromLast15)
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, NULL, 0xFFFFFFFF-0xFFFFFFFE )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL, NULL, 0xEFFFFFFF-0xFFFFFFFE )
TestManagerInitDecrypt( NORMAL DecryptContext,  0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext, NULL, 0xEFFFFFFF-0xFFFFFFFE )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt, NULL )
TestManagerInitDecrypt( NORMAL DecryptContext,  0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL CounterModeContext )


'10460:Func: Process V4 license response and bind to an ringtone license - right id 0x2f
'TestManagerInitResponse
'LoadResponseFromFile( extRingToneLicense.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetRights( 47 )
'TestManagerOpenEnvelope(4,jazzV4_AES.eny)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerInitializeEnvelopeRead(4)
'TestManagerReadEnvelope(4,jazz.wma)
'TestManagerCommit
'TestManagerReinitialize(Reset)


10461:Func: Process V4 license response with "expire after first use" restriction of 5 seconds
TestManagerInitResponse
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, 5 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetRights( Play )
TestManagerSetKID(nz/NueNnHDgdPwHsbrQhIw==)
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
TestManagerCommit
Test_ChangeTimeSeconds(6)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=0x8004C009 DRM_E_LICENSEEXPIRED

'10462:FUNC: Process V4 simple license response with extended restriction on Play right with count state and must understand
'TestManagerInitResponse
'LoadResponseFromFile( extPlayRestrictionCountState.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetRights( Play )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,2)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerCommit
'TestManagerReinitialize(Reset)

'10463:FUNC: Process V4 simple license response with extended restriction on Play right and another extended right with extended restriction
'TestManagerInitResponse
'LoadResponseFromFile( extPlayRestrictionExtRightExtRestriction.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetRights( Play )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,3)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerCommit
'TestManagerReinitialize(Reset)


'10464:FUNC: Process V4 simple license response with extended right and extended restriction, must understand.
'TestManagerInitResponse
'LoadResponseFromFile( extRightExtRestriction.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetRights( 100 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,3)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerCommit
'TestManagerReinitialize(Reset)

'10465:FUNC: Process V4 chained license with root and leaf with the same extended right with extended restriction with count state.
'TestManagerInitResponse
'LoadResponseFromFile( r-extRightExtRestCountStateL-ExtRightExtRestCountState.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetRights( 100 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,4)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerCommit
'TestManagerReinitialize(Reset)


'10466:FUNC: Process V4 chained license with root with extended right with extended restriction. Leaf with just extneded restriction on the Play right
'TestManagerInitResponse
'LoadResponseFromFile( r-extRightExtRestL-PlayExtRest.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset )
'TestManagerSetRights( Play )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,6)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=2147786779(0x8004a01b) DRM_E_EXTENDED_RESTRICTION_NOT_UNDERSTOOD
'TestManagerReinitialize( Reset )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,3)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerReinitialize( Reset )
'TestManagerSetRights( 100 )
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=2147794953(0x8004c009) DRM_E_LICENSEEXPIRED


'10467:FUNC: Process V4 chained license with root and leaf with extended right with extended restriction with Date state, optional (0x4) flag
'TestManagerInitResponse
'LoadResponseFromFile( Leaf_ExRight1000_ExRestriction2001_Optional_Date20080101.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'LoadResponseFromFile( Root_ExRight1000_ExRestriction2001_Optional_Date20080101.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset )
'TestManagerSetRights( 1000 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,6)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerReinitialize( Reset, )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,8)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )


'10468:FUNC: Process V4 chained license with root and leaf with extended right with extended restriction best effort (0x4 + 0x8) flag
'TestManagerInitResponse
'LoadResponseFromFile( Leaf_ExRight1000_ExRestriction2001_BestEffort.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'LoadResponseFromFile( Root_ExRight1000_ExRestriction2001_BestEffort.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset )
'TestManagerSetRights( 1000 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,6)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerReinitialize( Reset )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,5)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerReinitialize( Reset )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,7)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147172343(0x8004c009) DRM_E_LICENSEEXPIRED


'10469:FUNC: Process V4 chained license with root and leaf with extended right with two extended restrictions must understand best effort (0x1 + 0x4 + 0x8) flag
'TestManagerInitResponse
'LoadResponseFromFile( Leaf_ExRight1000_ExRestriction2001_BothFlags_ExRestriction2002_BothFlags.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'LoadResponseFromFile( Root_ExRight1000_ExRestriction2001_BothFlags_ExRestriction2002_BothFlags.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset )
'TestManagerSetRights( 1000 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,6)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147180517(0x8004A01B) DRM_E_EXTENDED_RESTRICTION_NOT_UNDERSTOOD
'TestManagerReinitialize( Reset )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,10)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147172341(0x8004c00b) DRM_E_RIGHTSNOTAVAILABLE
'TestManagerReinitialize( Reset )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,9)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )


'10470:FUNC: Process V4 chained license with leaf having an extended right, but the root doesn't
'TestManagerInitResponse
'LoadResponseFromFile( Leaf_ExRight1000.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'LoadResponseFromFile( Root.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset )
'TestManagerSetRights( 1000 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,5)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147172341(0x8004c00b) DRM_E_RIGHTSNOTAVAILABLE


'10471:FUNC: Process V4 chained license with leaf having extended right with extended restriction (0x1 + 0x4 + 0x8), root has the same extended right but no restriction
'TestManagerInitResponse
'LoadResponseFromFile( Leaf_ExRight1000_ExRestriction2001_BothFlags_ExRestriction2002_BothFlags.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'LoadResponseFromFile( Root_ExRight1000.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset )
'TestManagerSetRights( 1000 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,6)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147180517(0x8004A01B) DRM_E_EXTENDED_RESTRICTION_NOT_UNDERSTOOD
'TestManagerReinitialize( Reset )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,10)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147172341(0x8004c00b) DRM_E_RIGHTSNOTAVAILABLE
'TestManagerReinitialize( Reset )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,9)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )


'10472:FUNC: Process V4 chained license with leaf having extended restriction (0x1 + 0x4) on Play right, root doesnt have this restriction for Playextended right but no restriction
'TestManagerInitResponse
'LoadResponseFromFile( Leaf_PlayRight_ExRestriction2001_MustUnderstand.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'LoadResponseFromFile( Root.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize(Reset)
'TestManagerSetRights( Play )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,6)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147180517(0x8004A01B) DRM_E_EXTENDED_RESTRICTION_NOT_UNDERSTOOD
'TestManagerReinitialize(Reset)
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,7)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147172343(0x8004c009) DRM_E_LICENSEEXPIRED
'TestManagerReinitialize(Reset)
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,11)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )


'10473:FUNC: Process V4 chained license with root having 2 extended restrictions, both must understand must enforce (0x1 + 0x4 + 0x8), one with binary data and another with date data for Play right.  Leaf doesnt have this restriction for Play
'TestManagerInitResponse
'LoadResponseFromFile( Leaf.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'LoadResponseFromFile( Root_PlayRight_ExRestriction2001_BothFlags_BinaryBinaryData_ExRestriction2002_Optional_Date20080101.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize(Reset)
'TestManagerSetRights( Play )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,6)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147180517(0x8004A01B) DRM_E_EXTENDED_RESTRICTION_NOT_UNDERSTOOD
'TestManagerReinitialize(Reset)
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,7)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=-2147172343(0x8004c009) DRM_E_LICENSEEXPIRED
'TestManagerReinitialize(Reset)
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0,12)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )

'10474:FUNC: Process V4 chained ringtone licnese.  Root license with Play right and ringtone right, leaf license with ringtone right but no play right.
'TestManagerInitResponse
'LoadResponseFromFile( LeafRingtone.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetRights( 47 )
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=0x8004c009 (DRM_E_LICENSEEXPIRED)
'LoadResponseFromFile( RootRingtone.txt )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize(Reset)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerSetRights( Play )
'TestManagerReinitialize(Drm_Reinitialize)
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=0x8004c009 (DRM_E_LICENSEEXPIRED)

'10475:Func: Process V4 license response and bind to large extended right ID - right id 32768
'TestManagerInitResponse
'LoadResponseFromFile( LargeExtendedRightID.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetRights( 32768 )
'TestManagerSetHeader( NORMAL, headerXMR2.xml )
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )
'TestManagerCommit
'TestManagerReinitialize(Reset)


10570:FUNC: Test V2 license processing after GetLicenseData is called.
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<SOURCEID>2</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf


10800:DRT: Process generated XMR license response and Bind
TestManagerAddXMRLicense(eFY0IjQSNBISNBI0VniavA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetRights( Play )
TestManagerOpenEnvelope(4,jazzV4_AES.eny)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
TestManagerInitializeEnvelopeRead(4)
TestManagerReadEnvelope(4,jazz.wma)

10801:DRT: Process generated chain XMR license response with a single playcount and Bind
TestManagerAddXMRLicense(eFY0IjQSNBISNBI0VniavA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,1 Play count)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetRights( Play )
TestManagerOpenEnvelope(EnvelopeBuffer,jazzV4_AES.eny)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL ) =DRM_E_UPLINKLICENSENOTFOUND
TestManagerCloseEnvelope( EnvelopeBuffer )

'10802:DRT:Symmetrically optimized XMR license in V3 response using PDRM-style 6-byte Cocktail key and V1 header
'LoadResponseFromFile( V4ResponseForV1HeaderTest.dat )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetRights( Play )
'VerifySymmetricOptimizations( lFmb2gxg0Cr5bfEnJXgJeA==, {D085CDAA-85EB-42AB-B13F-DD69EC15B327} )
'TestManagerSetV1Header(NORMAL, PDRMHeader.dat, TRUE)
'TestManagerPrepareOPLCallback(200,200,200,200,200,0,0)
'TestManagerBind( 0, Dump, Dump, Use Callback function )
'TestManagerCommit
'TestManagerReinitialize(Reset)


10803:DRT: Bind to XML license with V1 header
If(WMDRMSupported)
TestManagerInitResponse
TestManagerAddLicenseToResponse(0qqx5q4y2kOTJDJTZSnwUw==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetRights( Play )
TestManagerSetV1Header(NORMAL, V1HeaderForStaticTests.dat, TRUE)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit
EndIf

10804:DRT: Bind to Chained license with V1 header should fail (XMR)
TestManagerAddXMRLicense(0qqx5q4y2kOTJDJTZSnwUw==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D==)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,1 Play count)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetRights( Play )
TestManagerSetV1Header(NORMAL, V1HeaderForStaticTests.dat, TRUE)
TestManagerPrepareOPLCallback(100,100,100,100,100,100,0)
TestManagerBind( 0, Dump, Dump, Use Callback function )=0x8004C057 (DRM_E_V1_LICENSE_CHAIN_NOT_SUPPORTED)

10805:DRT:Bind to Chained license with V1 header should fail (XML)
If(WMDRMSupported)
TestManagerInitResponse
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{00000508-0000-0010-8000-00AA006D2EA5},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(0qqx5q4y2kOTJDJTZSnwUw==,{00000508-0000-0010-8000-00AA006D2EA4},0,"<SOURCEID>2</SOURCEID>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetRights( Play )
TestManagerSetV1Header(NORMAL, V1HeaderForStaticTests.dat, TRUE)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )=0x8004C057 (DRM_E_V1_LICENSE_CHAIN_NOT_SUPPORTED)
EndIf

10806:DRT:Process response with XMR license containing Restricted Source ID, Serial Number, ExplicitAnalogVideoOutputProtection, Inclusion List(function coverage)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 20, NULL, NULL, NULL, Restricted Source ID, ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==, BwUAAAUAEACAAACqAG0upA==, 1 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestEnumLicense(nz/NueNnHDgdPwHsbrQhIw==,XMR,1)
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 0, 0, 0, 0, 0, 0, 1, NULL, 20 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback )

10807:FUNC:Process response with XMR license containing Restricted Source ID, Serial Number, ExplicitAnalogVideoOutputProtection, Inclusion List(function coverage) but no analog video protection configuration data
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 20, NULL, NULL, NULL, Restricted Source ID, ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==, BwUAAAcAEACAAACqAG0upA==, NULL)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestEnumLicense(nz/NueNnHDgdPwHsbrQhIw==,XMR,1)
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 0, 0, 0, 0, 0, 0, 1, NULL, 20 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback )

10808:FUNC:Process response with XMR license containing Restricted Source ID, Serial Number, ExplicitAnalogVideoOutputProtection, and Inclusion List but with incorrect analog video protection configuration data
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 20, NULL, NULL, NULL, Restricted Source ID, ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==, BwUAAAUAEACAAACqAG0upA==, 2)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestEnumLicense(nz/NueNnHDgdPwHsbrQhIw==,XMR,1)
TestManagerSetRights( Play )
TestManagerPrepareOPLCallback( 0, 0, 0, 0, 0, 0, 1, NULL, 20 )
'''''
' Expect OPL MisMatch because the check happens after finding a license to bind and the Config Data is '2' and '1' is expected
' Expect an assert on CHK builds because the error message from the OPL callback isn't in the Contract for Drm_Reader_Bind
'''''
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback )=DRM_E_TEST_OPL_MISMATCH
Test_EnsureAsserted

10810:BVT:Test that CleanupStore defragmentation works properly
If(WMDRMSupported)
TestManagerAddManyXMRLicenses(30,AXMR000ITE0qe11DalmK0D==,RANDOM,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,NULL,NULL,NULL,NULL,NULL,NULL,63072000,NULL,NULL,NULL)
TestManagerAddManyXMRLicenses(30,!XMR000oVg4eXCzWqPU!BA==,RANDOM,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)
TestManagerAddManyLicenses(30,7000000000,Acl2BY3ITE0qe11DalmK0D==,RANDOM, 2112 OP_LICGEN_NO_LICENSE_PRIORITY|OP_LICGEN_NO_DEFAULT_RIGHTS, "<PRIORITY>10</PRIORITY><ONACTION type=\"Play\"><CONDITION><![CDATA[1]]></CONDITION></ONACTION><ONSELECT><CONDITION><![CDATA[(machine.datetime < secstate.ExpirationDate)?1:(secstate.drmreason=1;0)]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,NULL,NULL,17520)
TestManagerAddManyLicenses(30,7000000000,!3x8NSroVg4eXCzWqPU!BA==,RANDOM, 0, NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,30)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,30)
TestEnumLicense(AXMR000ITE0qe11DalmK0D==,XMR,30)
TestEnumLicense(!XMR000oVg4eXCzWqPU!BA==,XMR,30)
'Change Time by two years + 2 days
Test_ChangeTimeSeconds(63244800)
TestManagerCleanLicenseStore( FALSE, 0, DELETE_EXPIRED_LICENSES)
TestEnumLicense(Acl2BY3ITE0qe11DalmK0D==,XML,0)
TestEnumLicense(!3x8NSroVg4eXCzWqPU!BA==,XML,30)
TestEnumLicense(AXMR000ITE0qe11DalmK0D==,XMR,0)
TestEnumLicense(!XMR000oVg4eXCzWqPU!BA==,XMR,30)
EndIf

10899:DRT:Test a call to Drm_ProcessRequest, should return DRM_E_NOTIMPL
TestManagerProcessRequest()=0x80004001

10900:FUNC:Restricted source ID binding
TestManagerAddXMRLicense(0qqx5q4y2kOTJDJTZSnwUw==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL , NULL , NULL, NULL, NULL, NULL , NULL , NULL, NULL, NULL, NULL , NULL , NULL, NULL, NULL, NULL , NULL , NULL, 20, NULL, NULL, NULL, Restricted)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetRights( Play )
TestManagerSetKID(0qqx5q4y2kOTJDJTZSnwUw==)
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100,100, 100, NULL, 20 )
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Callback )
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
' Now expect to get an unhandled restricted source ID and fail.
TestManagerSetRights( Play )
TestManagerSetKID(0qqx5q4y2kOTJDJTZSnwUw==)
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100,100, 100, NULL, 21 )
'LICENSEEXPIRED is expceted because there is a synclist entry but the license can't be bound.
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Callback )=DRM_E_LICENSEEXPIRED
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
'Now add a license for the same KID with the Second Source ID. Expect that the license can be used.
TestManagerAddXMRLicense(0qqx5q4y2kOTJDJTZSnwUw==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL , NULL , NULL, NULL, NULL, NULL , NULL , NULL, NULL, NULL, NULL , NULL , NULL, NULL, NULL, NULL , NULL , NULL, 21, NULL, NULL, NULL, Restricted)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetRights( Play )
TestManagerSetKID(0qqx5q4y2kOTJDJTZSnwUw==)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Callback )
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
' Now expect to get an unhandled restricted source ID and fail.
TestManagerSetRights( Play )
TestManagerSetKID(0qqx5q4y2kOTJDJTZSnwUw==)
TestManagerPrepareOPLCallback( 100, 100, 100, 100, 100,100, 100, NULL, 22 )
'LICENSEEXPIRED is expceted because there is a synclist entry but the license can't be bound.
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Callback )=DRM_E_LICENSEEXPIRED
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
'Now add a license for the same KID without a Source ID. Expect that the license can be used.
TestManagerAddXMRLicense(0qqx5q4y2kOTJDJTZSnwUw==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerSetRights( Play )
TestManagerSetKID(0qqx5q4y2kOTJDJTZSnwUw==)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Callback )
TestManagerCommit

10901:Func: Process chained V4 license response with "expire after first use" in leaf license.
TestManagerAddXMRLicense(0qqx5q4y2kOTJDJTZSnwUw==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D== , NULL , NULL , 3600)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, AES_128_ECB)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetRights( Play )
TestManagerSetKID(0qqx5q4y2kOTJDJTZSnwUw==)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump)
TestManagerCommit

10902:Func: Query the state of a V2 license that has a customized action foo.
If(WMDRMSupported)
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000507-0000-0010-8000-00AA006D2EA4},64 OP_LICGEN_NO_DEFAULT_RIGHTS, "<ONACTION type=\"Foo\"><CONDITION><![CDATA[(secstate.FooCount >0)?1:(secstate.drmreason=11;0)]]></CONDITION><ACTION><![CDATA[secstate.FooCount--]]></ACTION></ONACTION><ONSTORE><ACTION><![CDATA[!exists(secstate.FooCount)?secstate.FooCount=2:0;!exists(secstate.BeginFooCount)?secstate.BeginFooCount=2:0]]></ACTION></ONSTORE>",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetRights( Foo )
TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
TestManagerGetLicenseData(Dump,4,Dump,1,0)
EndIf


10903:Func: Process chained V4 license response with "expire after first use" in both leaf and root licenses.
TestManagerAddXMRLicense(0qqx5q4y2kOTJDJTZSnwUw==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D== , NULL , NULL , 3600)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT , NULL , NULL , 3600)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerReinitialize( Reset, FALSE, FALSE )
TestManagerInitialize( Dump )
TestManagerSetRights( Play )
TestManagerSetKID(0qqx5q4y2kOTJDJTZSnwUw==)
TestManagerGetLicenseData(Dump,3,Dump,1,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, NULL )
TestManagerCommit

'Counts aren't supported by XMR V3
'10904:Func: Process chained V4 license response with "expire after first use" in the leaf license, and a count in the root license.
'TestManagerAddXMRLicense(0qqx5q4y2kOTJDJTZSnwUw==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,Acl2BY3ITE0qe11DalmK0D== , NULL , NULL , 3600)
'TestManagerProcessResponse( Dump, Dump, 0, 0 ) (DRM_S_MOREDATA)
'TestManagerAddXMRLicense(Acl2BY3ITE0qe11DalmK0D==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL, ROOT , 3)
'TestManagerProcessResponse( Dump, Dump, 0, 0 ) (DRM_S_MOREDATA)
'TestManagerReinitialize( Reset, FALSE, FALSE )
'TestManagerInitialize( Dump )
'TestManagerSetRights( Play )
'TestManagerSetKID(TwKrGLrYgEK3i4vwwC/jwg==)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump )
'TestManagerCommit
'TestManagerReinitialize(Reset)

'50035:DRT: Bind to an XMR license with incorrect content key should fail
'TestManagerSetRights( Play )
'TestManagerInitResponse
'LoadResponseFromFile( extlicense.response )
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetHeader( NORMAL, headerXMR.xml )
'TestManagerGetLicenseData( Dump, 1, Dump, 3, 0 )
'TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
'TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function )=0x8004110E(DRM_E_CH_BAD_KEY)
'TestManagerReinitialize(Reset)


'' Testcases 50040-50046 are disabled because expire after store is not supported in xmr v3
'50040:DRT:Test that licenses with both expire after first use and expire after store works properly (expire after first use earlier)
'TestManagerSetRights(Play)
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,1000,2000)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'Test_ChangeTimeSeconds(300)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'Test_ChangeTimeSeconds(1005)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'Test_ChangeTimeSeconds(705)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'
'50041:DRT:Test that XMR licenses with both expire after first use and expire after store works properly (expire after store earlier)
'TestManagerSetRights(Play)
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,2000,1000)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
'Test_ChangeTimeSeconds(300)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Test_ChangeTimeSeconds(705)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'Test_ChangeTimeSeconds(1005)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'
'50042:DRT:Test that licenses with both expire after first use and expire after store works properly (expire after first use earlier, testing first store expiry)
'TestManagerSetRights(Play)
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,1000,2000)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
'Test_ChangeTimeSeconds(1900)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Test_ChangeTimeSeconds(105)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'Test_ChangeTimeSeconds(1005)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'
'50043:DRT:Test that XMR licenses with both expire after first use and expire after store works properly (expire after store earlier, testing first store expiry)
'TestManagerSetRights(Play)
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,2000,1000)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
'Test_ChangeTimeSeconds(900)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Test_ChangeTimeSeconds(105)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'Test_ChangeTimeSeconds(1005)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'
'50044:DRT:Test that licenses with both expire after first use and expire after store works properly (expire after first use earlier, testing first use expiry)
'TestManagerSetRights(Play)
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,1000,2000)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Test_ChangeTimeSeconds(900)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Test_ChangeTimeSeconds(105)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'Test_ChangeTimeSeconds(1005)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'
'50045:DRT:Test that XMR licenses with both expire after first use and expire after store works properly (expire after store earlier, testing first use expiry)
'TestManagerSetRights(Play)
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,2000,1000)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Test_ChangeTimeSeconds(900)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Test_ChangeTimeSeconds(105)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'Test_ChangeTimeSeconds(1005)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'
'50046:DRT:Test that XMR licenses with expire after store works properly
'TestManagerSetRights(Play)
'TestManagerAddXMRLicense(!3x8NSroVg4eXCzWqPU!BA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I,NULL,NULL,NULL,NULL,NULL,1000)
'TestManagerProcessResponse( Dump, Dump, 0, 0 )
'TestManagerSetKID(!3x8NSroVg4eXCzWqPU!BA==)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'Test_ChangeTimeSeconds(900)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'TestManagerCommit
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'Test_ChangeTimeSeconds(105)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'Test_ChangeTimeSeconds(1005)
'TestManagerGetLicenseData(Dump,3,Dump,1,0)
'TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0X8004C009 (DRM_E_LICENSEEXPIRED)

'License Security Level Test Cases

'Simple XMR Licenses Security Level Tests

2040:FUNC: Consume a simple XMR license with a security level (100) below the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

2041:FUNC: Consume a simple XMR license with a security level (150) at the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

2042:FUNC: Consume a simple XMR license with a security level (200) above the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

2043:FUNC: Bind to SL100 XMR Content using SL100 PR cert
If(WMDRMSupported)
TestManagerUninitialize
TestManagerInitialize( Normal Appcontext, NULL, files\bgroupcert100.dat, files\zgpriv100.dat )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
EndIf


2044:FUNC: Bind to SL150 XMR Content using SL100 PR cert
If(WMDRMSupported)
TestManagerUninitialize
TestManagerInitialize( Normal Appcontext, NULL, files\bgroupcert100.dat, files\zgpriv100.dat )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)
EndIf


'Chained XMR Licenses Security Level Tests

2078:FUNC: Consume a chained XMR license with a leaf security level (100) below the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

51012:FUNC: Consume a chained XMR license with a root security level (100) below the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

51013:FUNC: Consume a chained XMR license with a root and leaf security level (100) below the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

51014:FUNC: Consume a chained XMR license with a leaf security level (100) below, and a root at (150) the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

51015:FUNC: Consume a chained XMR license with a root security level (100) below, and a leaf at (150) the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

51016:FUNC: Consume a chained XMR license with a root and leaf security level (150) at the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

51017:FUNC: Consume a chained XMR license with a leaf security level (150) at the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

51018:FUNC: Consume a chained XMR license with a root security level (150) at the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

2079:BVT: Attempt to consume a chained XMR license with a leaf security level (200) above the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

2080:BVT: Attempt to consume a chained XMR license with a root security level (200) above the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=DRM_E_UPLINKLICENSENOTFOUND

2081:FUNC: Attempt to consume a chained XMR license with a root and leaf security level (200) above the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

2082:FUNC: Attempt to consume a chained XMR license with a leaf security level (200) above, and a root at (150) the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

2083:FUNC: Attempt to consume a chained XMR license with a root security level (200) above, and a leaf at (150) the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=DRM_E_UPLINKLICENSENOTFOUND

2084:FUNC: Attempt to consume a chained XMR license with a leaf security level (100) below, and a root above (200) the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=DRM_E_UPLINKLICENSENOTFOUND

51027:FUNC: Attempt to consume a chained XMR license with a root security level (100) below, and a leaf above (200) the current certificate security level (150) (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

'Simple domain-bound XMR Licenses Security Level Tests

53001:BVT: Consume a simple domain-bound XMR license with a security level (100) below the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 , OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53002:BVT: Consume a simple domain-bound XMR license with a security level (150) at the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 , OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53003:BVT: Consume a simple domain-bound XMR license with a security level (200) above the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 , OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

'Chained domain-bound XMR Licenses Security Level Tests

53011:BVT: Consume a Chained domain-bound XMR license with a leaf security level (100) below the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, pgUadCv6D0KmSrTgf1HV0w== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( pgUadCv6D0KmSrTgf1HV0w==, RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53012:BVT: Consume a Chained domain-bound XMR license with a root security level (100) below the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53013:FUNC: Consume a Chained domain-bound XMR license with a root and leaf security level (100) below the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53014:FUNC: Consume a Chained domain-bound XMR license with a leaf security level (100) below, and a root at (150) the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53015:FUNC: Consume a Chained domain-bound XMR license with a root security level (100) below, and a leaf at (150) the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53016:FUNC: Consume a Chained domain-bound XMR license with a root and leaf security level (150) at the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53017:FUNC: Consume a Chained domain-bound XMR license with a leaf security level (150) at the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53018:FUNC: Consume a Chained domain-bound XMR license with a root security level (150) at the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit

53021:BVT: Attempt to consume a Chained domain-bound XMR license with a leaf security level (200) above the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

53022:BVT: Attempt to consume a Chained domain-bound XMR license with a root security level (200) above the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=DRM_E_UPLINKLICENSENOTFOUND

53023:FUNC: Attempt to consume a Chained domain-bound XMR license with a root and leaf security level (200) above the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

53024:FUNC: Attempt to consume a Chained domain-bound XMR license with a leaf security level (200) above, and a root at (150) the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

53025:FUNC: Attempt to consume a Chained domain-bound XMR license with a root security level (200) above, and a leaf at (150) the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 150 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=DRM_E_UPLINKLICENSENOTFOUND

53026:FUNC: Attempt to consume a Chained domain-bound XMR license with a leaf security level (100) below, and a root above (200) the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=DRM_E_UPLINKLICENSENOTFOUND

53027:FUNC: Attempt to consume a Chained domain-bound XMR license with a root security level (100) below, and a leaf above (200) the current certificate security level (150) (XMR)
' Join Account NjU0MzIxMDk4NzY1NDMyMQ==
ProcessDomainJoinResponse( DomainContext, DomainResponseForEmbeddingTest.dat ) = 0x02 ( DRM_S_MORE_DATA )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, lFmb2gxg0Cr5bfEnJXgJeA== , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 200 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( lFmb2gxg0Cr5bfEnJXgJeA== , RANDOM, XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL, ROOT , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 100, OMIT, NULL, NULL, NULL, NjU0MzIxMDk4NzY1NDMyMQ== )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)=0x8004C00B (DRM_E_RIGHTSNOTAVAILABLE)

53028:BVT: Consume an invalid license from a file - use for fuzz testing (XMR)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL, music1V4header.xml)
TestManagerGenerateChallenge(Dump,NULL,0,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,0,2, ChallengeBuffer, "UseAesKey")
TestManagerAddXMRLicenseFromFile( xmrlicense.dat )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function) = 0x8004C013 DRM_E_LICENSENOTFOUND

53029:BVT: Consume an invalid license from a file - use for fuzz testing (XML)
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerInitResponse
TestManagerAddLicenseFromFileToResponse( xmllicense.dat )
TestManagerGenerateResponse
TestManagerProcessResponse( Dump, Dump, 0, 0 ) = 0x8004C056 DRM_E_UNKNOWN_BINDING_KEY
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, Use Callback function) = 0x8004C013 DRM_E_LICENSENOTFOUND
EndIf

71100:BVT: Bind to a Simple Non-Persistant License Repeatedly
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerGenerateChallenge(Dump,NULL,0,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,0,2, ChallengeBuffer, "UseAesKey")
TestManagerParseNonceTokenFromChallenge(ChallengeBuffer)
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , NONCE , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , TRUE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit

71101:BVT: Bind to a Simple Non-Persistant License and Verify failure to store a License that doesn't match the Nonce in store
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerGenerateChallenge(Dump,NULL,0,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,0,2, ChallengeBuffer, "UseAesKey")
TestManagerParseNonceTokenFromChallenge(ChallengeBuffer)
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , TRUE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( nz/NueNnHDgdPwHsbrQhIw==, SHARED, 0x8004D000 DRM_E_NONCE_STORE_TOKEN_NOT_FOUND, 0 NO_FLAGS ) 

71102:BVT: Bind to a Silverlight License that matches latest Nonce token in NST, verify inability to bind to SL license matching previous license
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerGenerateChallenge(Dump,NULL,0,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,0,2, ChallengeBuffer1, "UseAesKey")
TestManagerGenerateChallenge(Dump,NULL,0,NULL,NULL,NULL,0,NULL,NULL,NULL,NULL,NULL,0,2, ChallengeBuffer2, "UseAesKey")
TestManagerParseNonceTokenFromChallenge(ChallengeBuffer1)
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , NONCE , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , TRUE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerProcessResponse_CheckResults( nz/NueNnHDgdPwHsbrQhIw==, SHARED, 0x8004D000 DRM_E_NONCE_STORE_TOKEN_NOT_FOUND, 0 NO_FLAGS ) 
TestManagerParseNonceTokenFromChallenge(ChallengeBuffer2)
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , NONCE , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I, NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , TRUE)
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit

100000:FUNC:Test Mixing Legacy and PlayReady Content. Use Chained PR content and Simple Legacy
If(WMDRMSupported)
TestManagerSetRights(Play)
TestManagerInitResponse
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , 8ouFnKYiJtBjWpeoQpyD+g== , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , 2 )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerAddXMRLicense( 8ouFnKYiJtBjWpeoQpyD+g== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I  , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL , AES_128_ECB )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerInitResponse
TestManagerAddLicenseToResponse(!3x8NSroVg4eXCzWqPU!BA==,{00000506-0000-0010-8000-00AA006D2EA4},0,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
TestManagerReinitialize(Drm_Reinitialize)
TestManagerSetHeader(NORMAL,header1.xml)
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
EndIf


100001:BVT:Consume a Simple Symmetrically Optimized XML license
If(WMDRMSupported)
GenerateRandomHeader(300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,GgiTW/I53qZncoLHHAAmbtWOspU=,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,http://www.contoso.com,files\randomheader.xml,0)
TestManagerSetRights(Play)
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(PREGENERATEDRANDOM,RANDOM,32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetHeader(NORMAL,randomheader.xml,UTF-16)
TestManagerPrepareOPLCallback(100,100,100,100,100,0,0)
TestManagerBind( 0 don't overwrite drmmanager context, Dump, Dump, Use Callback function)
TestManagerCommit
EndIf

100002:BVT:Consume a Chained Symmetrically Optimized XML license
If(WMDRMSupported)
GenerateRandomHeader(300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,GgiTW/I53qZncoLHHAAmbtWOspU=,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,http://www.contoso.com,files\randomheader.xml,0)
TestManagerSetRights(Play)
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerInitResponse(V2, OptOldSLK)
TestManagerAddLicenseToResponse(PREGENERATEDRANDOM,{00000508-0000-0010-8000-00AA006D2EA4},32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetHeader(NORMAL,randomheader.xml,UTF-16)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf

100003:FUNC:Attempt to consume a Chained Symmetrically Optimized XML license without the SymVal in the leaf license. Expect to succeed
If(WMDRMSupported)
GenerateRandomHeader(300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,GgiTW/I53qZncoLHHAAmbtWOspU=,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,http://www.contoso.com,files\randomheader.xml,0)
TestManagerSetRights(Play)
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerInitResponse(V2, OptOldSLK)
TestManagerAddLicenseToResponse(PREGENERATEDRANDOM,{00000508-0000-0010-8000-00AA006D2EA4},32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==, NULL, NOSYMVAL)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
EndIf

100004:BVT:Consume a Chained Symmetrically Optimized XML license with both root and leaf in same response
If(WMDRMSupported)
GenerateRandomHeader(300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,GgiTW/I53qZncoLHHAAmbtWOspU=,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,http://www.contoso.com,files\randomheader.xml,0)
TestManagerSetRights(Play)
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(PREGENERATEDRANDOM,{00000508-0000-0010-8000-00AA006D2EA4},32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, 0)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetHeader(NORMAL,randomheader.xml,UTF-16)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf

100005:FUNC:Consume a Chained Symmetrically Optimized XML license with one root and 2 leaf licenses in response
If(WMDRMSupported)
GenerateRandomHeader(300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,GgiTW/I53qZncoLHHAAmbtWOspU=,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,http://www.contoso.com,files\randomheader.xml,0)
TestManagerSetRights(Play)
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2)
TestManagerAddLicenseToResponse(PREGENERATEDRANDOM,{00000508-0000-0010-8000-00AA006D2EA4},32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, 0)
TestManagerAddLicenseToResponse(hFB7k/58xUeZg5cpgJaXRw==,{F915464C-104B-47c4-A372-AFAEA187DCBE},32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==, NULL, NULL, 0)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
TestManagerSetHeader(NORMAL,randomheader.xml,UTF-16)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerCommit
EndIf

100006:BVT:Consume a Chained Symmetrically Optimized XML license, expire the Root, install new root, subsequent bind should fail - KID and LID are picked specifically to have _DecryptContentKeyXML() check fail with DRM_E_LIC_KEY_DECODE_FAILURE error.
If(WMDRMSupported)
TestManagerSetRights(Play)
' Root, expires in 2 years
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,32768 Symmetrically Optimized,"<ONSELECT><CONDITION><![CDATA[machine.datetime < secstate.ExpirationDate]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2,NULL,17520)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
' Chained Leaf
TestManagerInitResponse(V2, OptOldSLK)
TestManagerAddLicenseToResponse(kYL1Kut4qiPpAW5VofSu1w==,{00000508-0000-0010-8000-00AA006D2EA4},32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
' Play, should succeed
TestManagerSetHeader(NORMAL,header7.xml,UTF-16)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'Change Time by two years + 2 days to expire the first root license; play should fail
Test_ChangeTimeSeconds(63244800)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
' Download a new Root license with no expiration and a different content key, but same uplink KID
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{424B9076-091F-64A9-E42A-E591D0BC4B88},32768 Symmetrically Optimized,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E,2)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
' Play, should still fail
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
EndIf

100007:BVT:Consume a Chained Symmetrically Optimized XML license, expire the Root, install new root, subsequent bind should fail - KID and LID are picked specifically to trick _DecryptContentKeyXML() into successfull verification of "1st byte of decrypted data LessThanOrEqualTo SIZEOF(rgbDecContKey)" condition after call to DRM_DES_Decrypt(). Binding must still fail later with DRM_E_CH_BAD_KEY error.
If(WMDRMSupported)
TestManagerSetRights(Play)
' Root, expires in 2 years
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,RANDOM,32768 Symmetrically Optimized,"<ONSELECT><CONDITION><![CDATA[machine.datetime < secstate.ExpirationDate]]></CONDITION></ONSELECT><ONSTORE><ACTION><![CDATA[secstate.ExpirationDate=#",ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,2,NULL,17520)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
' Chained Leaf
TestManagerInitResponse(V2, OptOldSLK)
TestManagerAddLicenseToResponse(JDB2wo3wIUFkVGTqllL66Q==,{00000508-0000-0010-8000-00AA006D2EA4},32768 Symmetrically Optimized,NULL,ERdtAxucAFKJnAWxuFQYuyVd3BAFR7N!PO8vPJWRPzxV0MaUNCXrSQ==,300RGKoeuuIsIX04ZRKnNVZVP3fFXjykdp0o2hRG,1,Acl2BY3ITE0qe11DalmK0D==)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
' Play, should succeed
TestManagerSetHeader(NORMAL,header8.xml,UTF-16)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)
'Change Time by two years + 2 days to expire the first root license; play should fail
Test_ChangeTimeSeconds(63244800)
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=DRM_E_UPLINKLICENSENOTFOUND
' Download a new Root license with no expiration and a different content key, but same uplink KID
TestManagerInitResponse(V2, OptNewSLK)
TestManagerAddLicenseToResponse(Acl2BY3ITE0qe11DalmK0D==,{7976A907-7B55-53AC-118B-0F99A199F242},32768 Symmetrically Optimized,NULL,jsmKgeWLEXdzM4XqL1J1uacu4TjPDTBo1CrK!U!1elg6V2gYb0tXNw==,pLtgG421X5SdG2wolkcNr7SB1Ot6A0A2uDQUZF7E,2)
TestManagerGenerateResponse
TestManagerProcessResponse(Dump,Dump,0,0)
' Play, should still fail
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump,NULL)=0x8004110EL DRM_E_CH_BAD_KEY
EndIf

100100:FUNC:Tests of opaque buffer resizing
' Error paths
TestManagerResizeOpaqueBuffer()=DRM_E_INVALIDARG
TestManagerResizeOpaqueBuffer(0)=DRM_E_INVALIDARG
TestManagerResizeOpaqueBuffer(100)=DRM_E_INVALIDARG

' Success path, part 1, normal default size
Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL )

' Success path, part 2, make it bigger and re-test
TestManagerReinitialize(Reset)
TestManagerResizeOpaqueBuffer(208768)

Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL )

' Succcess path, part 3, make it default size again and re-test
TestManagerReinitialize(Reset)

Test_SetRandomSeed( FIXED RandomSeedType )
TestManagerSetRights(Play)
TestManagerSetHeader( NORMAL, music1V4header.xml )
TestManagerAddXMRLicense( nz/NueNnHDgdPwHsbrQhIw== , RANDOM , XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I )
TestManagerEncrypt( AES CipherType, 100 DataLengthToEncrypt )
TestManagerProcessResponse( Dump, Dump, 0, 0 )
TestManagerBind(0 don't overwrite drmmanager context, Dump, Dump, NULL)
TestManagerCommit
TestManagerInitDecrypt( NORMAL DecryptContext, 0 OffsetFromLast15 )
TestManagerDecrypt( NORMAL DecryptContext, 100 DataLengthToDecrypt, NORMAL pbData, 0 MisAlignmentBytes, NORMAL )

100014:BVT:Retrieve custom data that does not exist in the response.
TestManagerAddXMRLicense(eFY0IjQSNBISNBI0VniavA==,RANDOM,XVBovsmzhP9gRIZxWfFta3VVRPzVEWmJsazEJ46I)
TestManagerProcessResponse(Dump,Dump,0,0)
TestProcessAdditionalData( SharedResponse, CustomData, CUSTOM ) = 0x8004CB05L (DRM_E_SOAPXML_DATA_NOT_FOUND)

