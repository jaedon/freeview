11444:BVT:P0:DRM_DDC_GetDeviceCertificate returns the devcert if it is present
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, TRUE)

' Check the XML Device certificate
Test_API_GetDeviceCertificate(10240, 0, NORMAL, 0 DataBuffer)
Test_CompareXMLDataBuffer(0 DataBuffer, Devcert)
Test_API_GetDeviceCertificate(10240, 1, NORMAL, 1 DataBuffer)
Test_CompareXMLDataBuffer(1 DataBuffer, Devcert)
Test_CompareXMLDataBuffer(0 DataBuffer, 1 DataBuffer)
EndIf


12444:BVT:P0:DRM_DDC_GetDeviceCertificate returns the bindevcert if it is present
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, TRUE)

'Check the binary device certificate
Test_API_GetBinaryDeviceCertificate(10240, 0, NORMAL, 0 DataBuffer)
Test_CompareBinaryDataBuffer(0 DataBuffer, Devcert)
Test_API_GetBinaryDeviceCertificate(10240, 1, NORMAL, 1 DataBuffer)
Test_CompareBinaryDataBuffer(1 DataBuffer, Devcert)
Test_CompareBinaryDataBuffer(0 DataBuffer, 1 DataBuffer)

11445:BVT:P0:DRM_DDC_GetDeviceCertificate creates a valid devcert if it does not exist
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)

' Check the XML Device certificate generation
Test_API_GetDeviceCertificate(10240, 1, NORMAL, 0 DataBuffer)
Test_CompareXMLDataBuffer(0 DataBuffer, Devcert)
Test_VerifyXMLDevcert(0 DataBuffer)
EndIf


12445:BVT:P0:DRM_DDC_GetDeviceCertificate creates a valid bindevcert if it does not exist
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)

'Check the binary device certificate generation
Test_API_GetBinaryDeviceCertificate(10240, 1, NORMAL, 1 DataBuffer)
Test_CompareBinaryDataBuffer(1 DataBuffer, Devcert)
Test_VerifyBinaryDevcert(1 DataBuffer)

11461:BVT:WM7 model specific exclusion, confirm model info in device cert is correct after drm_initialize
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_InitWithOemData("DeviceModel", "RealModelInfo");

' Check the XML Device certificate generated by Drm_Initialize
Test_API_GetDeviceCertificate(10240, 0, NORMAL, 0 DataBuffer)
Test_CompareXMLDataBuffer(0 DataBuffer, Devcert)
Test_VerifyXMLDevcert(0 DataBuffer)
Test_VerifyXMLDevcert_ModelInfo(0 DataBuffer, "RealModelInfo")
EndIf


12461:BVT:WM7 model specific exclusion, confirm model info in binary device cert is correct after drm_initialize
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_InitWithOemData("DeviceModel", "RealModelInfo");

' Check the binary device certificate generated by Drm_Initialize
Test_API_GetBinaryDeviceCertificate(10240, 0, NORMAL, 1 DataBuffer)
Test_CompareBinaryDataBuffer(1 DataBuffer, Devcert)
Test_VerifyBinaryDevcert(1 DataBuffer, NULL, NULL, "RealModelInfo")

-------------------BVT ends here--------------------------

11462:FUNC:WM7 model specific exclusion, confirm model info in device cert is correct after drm_initialize, test model info with special characters
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_InitWithOemData("DeviceModel", "TestDeviceModelBlah ~`!@#$%^&*()_+-=\|{}[]:;'?><,./\\345");

' Check the XML Device certificate generated by Drm_Initialize
Test_API_GetDeviceCertificate(10240, 0, NORMAL, 0 DataBuffer)
Test_CompareXMLDataBuffer(0 DataBuffer, Devcert)
Test_VerifyXMLDevcert(0 DataBuffer)
Test_VerifyXMLDevcert_ModelInfo(0 DataBuffer, "TestDeviceModelBlah ~`!@#$%^&*()_+-=\|{}[]:;'?><,./\\345")
EndIf


12462:FUNC:WM7 model specific exclusion, confirm model info in binary device cert is correct after drm_initialize, test model info with special characters
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_InitWithOemData("DeviceModel", "TestDeviceModelBlah ~`!@#$%^&*()_+-=\|{}[]:;'?><,./\\345");

' Check the binary device certificate generated by Drm_Initialize
Test_API_GetBinaryDeviceCertificate(10240, 0, NORMAL, 1 DataBuffer)
Test_CompareBinaryDataBuffer(1 DataBuffer, Devcert)
Test_VerifyBinaryDevcert(1 DataBuffer, NULL, NULL, "TestDeviceModelBlah ~`!@#$%^&*()_+-=\|{}[]:;'?><,./\\345")

11463:FUNC:WM7 model specific exclusion, confirm model info in device cert after drm_initialize, test model info with string length 64
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_InitWithOemData("DeviceModel", "64aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64");

' Check the XML Device certificate generated by Drm_Initialize
Test_API_GetDeviceCertificate(10240, 0, NORMAL, 0 DataBuffer)
Test_CompareXMLDataBuffer(0 DataBuffer, Devcert)
Test_VerifyXMLDevcert(0 DataBuffer)
Test_VerifyXMLDevcert_ModelInfo(0 DataBuffer, "64aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64")
EndIf


12463:FUNC:WM7 model specific exclusion, confirm model info in binary device cert after drm_initialize, test model info with string length 64
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_InitWithOemData("DeviceModel", "64aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64");

' Check the binary device certificate generated by Drm_Initialize
Test_API_GetBinaryDeviceCertificate(10240, 0, NORMAL, 1 DataBuffer)
Test_CompareBinaryDataBuffer(1 DataBuffer, Devcert)
Test_VerifyBinaryDevcert(1 DataBuffer, NULL, NULL, "64aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64")

11464:FUNC:WM7 model specific exclusion, test model info with string length 65 for XML device certificate, confirm truncated to 64
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_InitWithOemData("DeviceModel", "64aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64b")

' Check the XML Device certificate generated by Drm_Initialize
Test_API_GetDeviceCertificate(10240, 0, NORMAL, 0 DataBuffer)
Test_CompareXMLDataBuffer(0 DataBuffer, Devcert)
Test_VerifyXMLDevcert(0 DataBuffer)
Test_VerifyXMLDevcert_ModelInfo(0 DataBuffer, "64aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64")
EndIf


12464:FUNC:WM7 model specific exclusion, test model info with string length 65 for binary device certificate, confirm truncated to 64
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_InitWithOemData("DeviceModel", "64aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64b");

' Check the binary device certificate generated by Drm_Initialize
Test_API_GetBinaryDeviceCertificate(10240, 0, NORMAL, 1 DataBuffer)
Test_CompareBinaryDataBuffer(1 DataBuffer, Devcert)
Test_VerifyBinaryDevcert(1 DataBuffer, NULL, NULL, "64aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa64")


11446:FUNC:P1:DRM_DDC_GetDeviceCertificate creates different (random) device keys
If(WMDRMSupported)
' Check the XML Device certificate
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetDeviceCertificate(10240, 1, NORMAL, 0 DataBuffer)
Test_RemoveDeviceData
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetDeviceCertificate(10240, 1, NORMAL, 1 DataBuffer)
Test_CompareXMLDataBuffer(0 DataBuffer, 1 DataBuffer)=1 (S_FALSE)
EndIf


12446:FUNC:P1:DRM_DDC_GetDeviceCertificate creates different (random) device keys for bin certs
' Check the binary Device certificate
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetBinaryDeviceCertificate(10240, 1, NORMAL, 0 DataBuffer)
Test_RemoveDeviceData
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetBinaryDeviceCertificate(10240, 1, NORMAL, 1 DataBuffer)
Test_CompareBinaryDataBuffer(0 DataBuffer, 1 DataBuffer)=1 (S_FALSE)

11449:DRM_DDC_GetDeviceCertificate should fail if the group cert security level is higher than the one in DAC
If(WMDRMSupported)
Test_SetDeviceEnv(dt_badsec.dat, priv.dat, NULL, NULL, FALSE)

'Optimization: no longer check template validity on device
'Test_API_GetDeviceCertificate(10240, 1, NORMAL, 0 DataBuffer)=!S_OK
Test_API_GetDeviceCertificate(10240, 1, NORMAL, 0 DataBuffer)
EndIf


11450:FUNC:P1:DRM_DDC_GetDeviceCertificate should fail if devcert template signature is broken
If(WMDRMSupported)
Test_SetDeviceEnv(dt_badsign.dat, priv.dat, NULL, NULL, FALSE)
'Optimization: no longer check template validity on device
'Test_API_GetDeviceCertificate(10240, 1, NORMAL, 0 DataBuffer) = -2147172286(0X8004C042, DRM_E_INVALIDDEVICECERTIFICATETEMPLATE)
Test_API_GetDeviceCertificate(10240, 1, NORMAL, 0 DataBuffer)
EndIf


11452:FUNC:P1:DRM_DDC_GetDeviceCertificate should fail if input parameters are null
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetDeviceCertificate(NULL, 0, NORMAL, 0 DataBuffer)=-2147024809(0X80070057, DRM_E_INVALIDARG)
Test_API_GetDeviceCertificate(10240, 0, NULL, 0 DataBuffer)=-2147024809(0X80070057, DRM_E_INVALIDARG)
EndIf


12452:FUNC:P1:DRM_DDC_GetDeviceCertificate should fail if input parameters are null with binary certs
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetBinaryDeviceCertificate(NULL, 0, NORMAL, 0 DataBuffer)=-2147024809(0X80070057, DRM_E_INVALIDARG)
Test_API_GetBinaryDeviceCertificate(NULL, 1, NORMAL, 0 DataBuffer)=-2147024809(0X80070057, DRM_E_INVALIDARG)
Test_API_GetBinaryDeviceCertificate(10240, 0, NULL, 0 DataBuffer)=-2147024809(0X80070057, DRM_E_INVALIDARG)

11453:FUNC:P1:DRM_DDC_GetDeviceCertificate should fail to create or retrieve a cert if output buffer is not large enough
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, TRUE)
Test_API_GetDeviceCertificate(2, 0, NORMAL, 0 DataBuffer)=0x8007007A DRM_E_BUFFERTOOSMALL
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetDeviceCertificate(2, 1, NORMAL, 0 DataBuffer)=0x8004C042 DRM_E_INVALIDDEVICECERTIFICATETEMPLATE
EndIf


12453:FUNC:P1:DRM_DDC_GetDeviceCertificate should fail if output buffer is not large enough to hold the bin devcert
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, TRUE)
Test_API_GetBinaryDeviceCertificate(2, 0, NORMAL, 0 DataBuffer)=0x8007007A DRM_E_BUFFERTOOSMALL
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetBinaryDeviceCertificate(2, 1, NORMAL, 0 DataBuffer)=0x8007007A DRM_E_BUFFERTOOSMALL
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetBinaryDeviceCertificate(11, 1, NORMAL, 0 DataBuffer)=0x8004C042 DRM_E_INVALIDDEVICECERTIFICATETEMPLATE

11454:FUNC:P1:DRM_DDC_GetDeviceCertificate should fail if devcert does not exist and dwFlag is 0
If(WMDRMSupported)
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetDeviceCertificate(10240, 0, NORMAL, 0 DataBuffer)=0X8004D503 DRM_E_KEYFILE_CERTIFICATE_CHAIN_NOT_FOUND
EndIf


12454:FUNC:P1:DRM_DDC_GetDeviceCertificate should fail if bin devcert does not exist and dwFlag is 0
Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert.dat, zgpriv.dat, FALSE)
Test_API_GetBinaryDeviceCertificate(10240, 0, NORMAL, 0 DataBuffer)=0X8004D503 DRM_E_KEYFILE_CERTIFICATE_CHAIN_NOT_FOUND

'Disable, it needs a special cert chain
'11455:FUNC:P1:DRM_DDC_GetDeviceCertificate should fail if PlayReady devcerttemplate doesn't chain up to the MS root
'Test_SetDeviceEnv(devcerttemplate.dat, priv.dat, bgroupcert_notms.dat, zgpriv_notms.dat, FALSE)
'Test_API_GetBinaryDeviceCertificate(10240, 1, NORMAL, 0 DataBuffer)
'Test_API_GetBinaryDeviceCertificate(10240, 3, NORMAL, 0 DataBuffer)=0X8004C81E DRM_E_BCERT_ISSUERKEY_KEYINFO_MISMATCH
'Test_EnsureAsserted
