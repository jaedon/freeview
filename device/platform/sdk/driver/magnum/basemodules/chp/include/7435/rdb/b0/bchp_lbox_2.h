/***************************************************************************
 *     Copyright (c) 1999-2012, Broadcom Corporation
 *     All Rights Reserved
 *     Confidential Property of Broadcom Corporation
 *
 *
 * THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
 * AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
 * EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
 *
 * $brcm_Workfile: bchp_lbox_2.h $
 * $brcm_Revision: Hydra_Software_Devel/1 $
 * $brcm_Date: 2/28/12 5:14p $
 *
 * Module Description:
 *                     DO NOT EDIT THIS FILE DIRECTLY
 *
 * This module was generated magically with RDB from a source description
 * file. You must edit the source file for changes to be made to this file.
 *
 *
 * Date:           Generated on         Tue Feb 28 11:03:18 2012
 *                 MD5 Checksum         d41d8cd98f00b204e9800998ecf8427e
 *
 * Compiled with:  RDB Utility          combo_header.pl
 *                 RDB Parser           3.0
 *                 unknown              unknown
 *                 Perl Interpreter     5.008008
 *                 Operating System     linux
 *
 * Revision History:
 *
 * $brcm_Log: /magnum/basemodules/chp/7435/rdb/b0/bchp_lbox_2.h $
 * 
 * Hydra_Software_Devel/1   2/28/12 5:14p tdo
 * SW7435-40: Need 7435B0 public/central RDB (magnum) headers checked into
 * clearcase
 *
 ***************************************************************************/

#ifndef BCHP_LBOX_2_H__
#define BCHP_LBOX_2_H__

/***************************************************************************
 *LBOX_2 - Letter Box Detector 2 Registers
 ***************************************************************************/
#define BCHP_LBOX_2_REVISION_ID                  0x00624400 /* Chip Revision ID. */
#define BCHP_LBOX_2_CTRL                         0x00624404 /* OPERATIONS MODES (Control). */
#define BCHP_LBOX_2_CONFIGURATION                0x00624408 /* OPERATIONS MODES (Control). */
#define BCHP_LBOX_2_HORIZONTAL_WINDOW_REGION     0x0062440c /* Top/Bottom Horizontal Region (Control). */
#define BCHP_LBOX_2_VERTICAL_WINDOW_REGION       0x00624410 /* Left/Right Vertical Region (Control). */
#define BCHP_LBOX_2_PIXEL_THRESHOLD              0x00624414 /* Black Pixel Threshold (Control). */
#define BCHP_LBOX_2_BLACK_LINE_THRESHOLD_NTA     0x00624418 /* Black Line Threshold (Control - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_BLACK_COL_THRESHOLD_NTA      0x0062441c /* Black Column Threshold (Control - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_WHITE_LINE_THRESHOLD_NTA     0x00624420 /* White Line Threshold (Control - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_WHITE_COL_THRESHOLD_NTA      0x00624424 /* White Column Threshold (Control - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_BLACK_LINE_THRESHOLD_LSUM    0x00624428 /* Black Line Threshold (Control - Luma Sum Algorithm) */
#define BCHP_LBOX_2_WHITE_LINE_THRESHOLD_LSUM    0x0062442c /* White Line Threshold (Control - Luma Sum Algorithm) */
#define BCHP_LBOX_2_NON_BLACK_LINE               0x00624430 /* First/Last Non-Black Line (Status - Number & Threshold and Luma Sum Algorithms) */
#define BCHP_LBOX_2_FIRST_WHITE_LINE             0x00624434 /* First White Line Statistics (Status - Number & Threshold and Luma Sum Algorithms) */
#define BCHP_LBOX_2_LAST_WHITE_LINE              0x00624438 /* Last White Line Statistics (Status - Number & Threshold and Luma Sum Algorithms) */
#define BCHP_LBOX_2_MINMAX_NON_BLACK_LINES       0x0062443c /* Min/Max Non-Black Line (Status - Number & Threshold and Luma Sum Algorithms) */
#define BCHP_LBOX_2_MIN_WHITE_LINE               0x00624440 /* Minimum First White Line Statistics (Status - Number & Threshold and Luma Sum Algorithms) */
#define BCHP_LBOX_2_MAX_WHITE_LINE               0x00624444 /* Maximum Last White Line Statistics (Status - Number & Threshold and Luma Sum Algorithms) */
#define BCHP_LBOX_2_NON_BLACK_COL                0x00624448 /* First/Last Non-Black Column (Status - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_FIRST_WHITE_COL              0x0062444c /* First White Column Statistics (Status - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_LAST_WHITE_COL               0x00624450 /* Last White Column Statistics (Status - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_MINMAX_NON_BLACK_COL         0x00624454 /* Min/Max Non-Black Column (Status - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_MIN_WHITE_COL                0x00624458 /* Minimum First White Column Statistics (Status - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_MAX_WHITE_COL                0x0062445c /* Maximum Last White Column Statistics (Status - Number & Threshold Algorithm) */
#define BCHP_LBOX_2_MIN_LUMA_VALUE               0x00624460 /* The minimum luma value over all time (Control). */
#define BCHP_LBOX_2_TB_INTERRUPT_THRESHOLD       0x00624464 /* Top/Bottom Interrupt Threshold (Control). */
#define BCHP_LBOX_2_LR_INTERRUPT_THRESHOLD       0x00624468 /* Left/Right Interrupt Threshold (Control). */
#define BCHP_LBOX_2_CLEAR_STATUS                 0x0062446c /* Clear all of the Status registers. */
#define BCHP_LBOX_2_SCRATCH                      0x00624470 /* Reserved Register For Future Use. */

#endif /* #ifndef BCHP_LBOX_2_H__ */

/* End of File */
