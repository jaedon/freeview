/***************************************************************
*
* This file is auto-generated by generate_chp_pwr.pl, based on
* bchp_pwr_resources.txt.
*
* This file contains a list of private power resource IDs that
* represent HW clocks, and function prototypes for controlling
* them.
*
***************************************************************/

#ifndef BCHP_PWR_RESOURCES_PRIV_H__
#define BCHP_PWR_RESOURCES_PRIV_H__

#include "bchp_pwr.h"

/* Private power resource IDs */
#define BCHP_PWR_HW_SVD0_CLK               0xff000001
#define BCHP_PWR_HW_SVD0_PWR               0xff000002
#define BCHP_PWR_HW_VEC_AIO                0xff000003
#define BCHP_PWR_HW_RAAGA                  0xff000004
#define BCHP_PWR_HW_AUD_PLL0               0xff000005
#define BCHP_PWR_HW_AUD_PLL1               0xff000006
#define BCHP_PWR_HW_RAAGA_SRAM             0xff000007
#define BCHP_PWR_HW_HDMI_TX_TMDS           0xff000008
#define BCHP_PWR_HW_BVN                    0xff000009
#define BCHP_PWR_HW_BVN_108M               0xff00000a
#define BCHP_PWR_HW_BVN_SRAM               0xff00000b
#define BCHP_PWR_HW_VDC_DAC                0xff00000c
#define BCHP_PWR_HW_VEC_SRAM               0xff00000d
#define BCHP_PWR_HW_VDC_656_OUT            0xff00000e
#define BCHP_PWR_HW_XPT_108M               0xff00000f
#define BCHP_PWR_HW_XPT_XMEMIF             0xff000010
#define BCHP_PWR_HW_XPT_RMX                0xff000011
#define BCHP_PWR_HW_XPT_SRAM               0xff000012
#define BCHP_PWR_HW_XPT_WAKEUP             0xff000013
#define BCHP_PWR_HW_HDMI_TX_TMDS_CH        0xff000014
#define BCHP_PWR_HW_HDMI_SRAM              0xff000015
#define BCHP_PWR_HW_HDMI_TX_CEC_HOTPLUG    0xff000016
#define BCHP_PWR_HW_HDMI_TX_108M           0xff000017
#define BCHP_PWR_HW_M2MC                   0xff000018
#define BCHP_PWR_HW_V3D                    0xff000019
#define BCHP_PWR_HW_GFX_SRAM               0xff00001a
#define BCHP_PWR_HW_GFX_108M               0xff00001b
#define BCHP_PWR_HW_DMA                    0xff00001c
#define BCHP_PWR_HW_SCD0                   0xff00001d
#define BCHP_PWR_HW_PLL_SCD_CH0            0xff00001e
#define BCHP_PWR_HW_SCD1                   0xff00001f
#define BCHP_PWR_HW_PLL_SCD_CH1            0xff000020
#define BCHP_PWR_HW_MDM                    0xff000021
#define BCHP_PWR_HW_PLL_AVD_CH0            0xff000022
#define BCHP_PWR_HW_PLL_AVD_CH1            0xff000023
#define BCHP_PWR_HW_PLL_AVD_CH2            0xff000024
#define BCHP_PWR_HW_PLL_AVD_CH3            0xff000025
#define BCHP_PWR_HW_PLL_AVD                0xff000026
#define BCHP_PWR_HW_PLL_VCXO_CH0           0xff000027
#define BCHP_PWR_HW_PLL_SCD                0xff000028
#define BCHP_PWR_HW_PLL_VCXO_CH2           0xff000029
#define BCHP_PWR_HW_PLL_VCXO               0xff00002a

/* Protoypes */
void BCHP_PWR_P_HW_SVD0_CLK_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_SVD0_PWR_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_VEC_AIO_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_RAAGA_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_AUD_PLL0_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_AUD_PLL1_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_RAAGA_SRAM_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_HDMI_TX_TMDS_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_BVN_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_BVN_108M_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_BVN_SRAM_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_VDC_DAC_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_VEC_SRAM_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_VDC_656_OUT_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_XPT_108M_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_XPT_XMEMIF_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_XPT_RMX_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_XPT_SRAM_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_XPT_WAKEUP_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_HDMI_TX_TMDS_CH_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_HDMI_SRAM_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_HDMI_TX_CEC_HOTPLUG_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_HDMI_TX_108M_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_M2MC_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_V3D_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_GFX_SRAM_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_GFX_108M_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_DMA_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_SCD0_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_SCD_CH0_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_SCD1_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_SCD_CH1_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_MDM_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_AVD_CH0_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_AVD_CH1_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_AVD_CH2_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_AVD_CH3_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_AVD_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_VCXO_CH0_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_SCD_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_VCXO_CH2_Control(BCHP_Handle handle, bool activate);
void BCHP_PWR_P_HW_PLL_VCXO_Control(BCHP_Handle handle, bool activate);

/* This is the link between the public and private interface */
void BCHP_PWR_P_HW_Control(BCHP_Handle handle, const BCHP_PWR_P_Resource *resource, bool activate);

#define BCHP_PWR_P_NUM_NONLEAFS   39
#define BCHP_PWR_P_NUM_NONLEAFSHW 20
#define BCHP_PWR_P_NUM_LEAFS      22
#define BCHP_PWR_P_NUM_ALLNODES   81

#endif
