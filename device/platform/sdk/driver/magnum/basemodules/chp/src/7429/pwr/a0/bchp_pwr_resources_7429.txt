#
# 7429 power resources
#

# SVD (AVD0) 
AVD -> AVD0
AVD0 -> {AVD0_CLK, AVD0_PWR}
AVD0_CLK -> {HW_SVD0_CORE_CLK, HW_SVD0_CPU_CLK, HW_SVD0_SCB_108_CLK}
AVD0_PWR -> HW_SVD0_PWR     # SVD0 SRAM


# Audio
AUD_AIO -> {RAAGA, HW_AIO, HW_AIO_SRAM}

# RAAGA
RAAGA  -> RAAGA0
RAAGA0 -> {HW_RAAGA0, HW_RAAGA0_SRAM}
RAAGA_SRAM -> HW_RAAGA0_SRAM                     


# Display
VDC -> {BVN, VDC_DAC, VDC_VEC, VDC_656_OUT}    # entire BVN and VEC blocks
VDC -> {HW_HDMI_RX0_ALT_216M, HW_HDMI_TX_CLK}
BVN -> {HW_BVN, HW_BVN_108M, HW_BVN_SRAM}               # entire BVN block.
VDC_DAC -> HW_VDC_DAC                                   # DAC clocks
VDC_VEC -> {HW_VEC, HW_VEC_SRAM}                        # VEC_AIO 108M, VEC_AIO_324, 216M, and SCB clocks.
VDC_656_OUT -> HW_VDC_656_OUT                           # 656 output clock


#
# Transport
#
XPT -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX}             # entire XPT block

XPT_PARSER    -> {HW_XPT_108M, HW_XPT_XMEMIF}               # input parsers
XPT_PLAYBACK  -> {HW_XPT_108M, HW_XPT_XMEMIF}               # playback channels
XPT_RAVE      -> {HW_XPT_108M, HW_XPT_XMEMIF}               # RAVE contexts
XPT_PACKETSUB -> {HW_XPT_108M, HW_XPT_XMEMIF}               # packet substitution channels
XPT_REMUX     -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX}   # remux

XPT_108M   -> {HW_XPT_108M, HW_XPT_SRAM}
XPT_XMEMIF -> HW_XPT_XMEMIF
XPT_SRAM   -> HW_XPT_SRAM
XPT_WAKEUP -> HW_XPT_WAKEUP

# HDMI TX
HDMI_TX          -> {HDMI_TX_CLK, HDMI_TX_CEC}           # entire HDMI block
HDMI_TX_CLK      -> {HW_HDMI_TX_CLK, HW_HDMI_TX_SRAM}    # HDMI Clocks
HW_HDMI_TX_CLK   -> {HW_HDMI_TX_108M, HW_BVN_108M}       # 108M clock for register R/W
HDMI_TX_CEC      -> {HW_HDMI_TX_CEC}                     # CEC and hotplug interrupts

# HDMI RX
HDMI_RX -> HDMI_RX0                                                                  # HDMI Rx block
HDMI_RX0 -> {HDMI_RX0_FE, HDMI_RX0_216M, HDMI_RX0_CEC_HOTPLUG}
HDMI_RX0_216M -> {HW_HDMI_RX0_216M, HW_HDMI_RX0_ALT_216M}
HDMI_RX0_FE -> {HW_HDMI_RX0_FE, HW_HDMI_RX0_SRAM}
HW_HDMI_RX0_FE -> {HW_HDMI_RX0_216M, HW_HDMI_RX0_ALT_216M}
HDMI_RX0_CEC_HOTPLUG -> {HDMI_RX0_216M, HW_HDMI_RX0_CEC_HOTPLUG}
HW_HDMI_RX0_216M -> HW_BVN_108M


# Graphics 2D
M2MC -> HW_M2MC                                    # Graphics2D

# Graphics 3D
GRAPHICS3D -> HW_V3D                               # Graphics3D

{M2MC_SRAM, GRAPHICS3D_SRAM} -> HW_M2MC_SRAM       # Graphics 3D SRAM
{HW_M2MC, HW_V3D} -> HW_GFX_108M                   # Graphics 2D and V3D both depend on 108M and SCB clock

#RFM
RFM -> HW_RFM

# Security, DMA
HSM -> DMA                                   # HSM depends on DMA and XPT
DMA -> {HW_DMA, HW_XPT_108M, HW_XPT_XMEMIF}

# SmartCard
SMARTCARD -> {SMARTCARD0, SMARTCARD1}        # Smartcard
SMARTCARD0 -> HW_SCD0     
SMARTCARD1 -> HW_SCD1

# Softmodem
SOFTMODEM -> HW_MDM                          # disabled for now

#AVS -> HW_AVS

# Picture Decoder
SID -> HW_GFX_108M
SID_SRAM -> HW_M2MC_SRAM


#
# Top Level PLLs and VCXOs
#

# AVD PLLs
HW_SVD0_CPU_CLK  -> HW_PLL_AVD_CH0
HW_SVD0_CORE_CLK -> HW_PLL_AVD_CH1
{HW_PLL_AVD_CH0, HW_PLL_AVD_CH1} -> HW_PLL_AVD

# AUD PLL
HW_AIO  -> {HW_AUD_PLL0, HW_AUD_PLL1}

# VCXO PLL0
{HW_VEC, HW_AIO, HW_VDC_656_OUT} -> HW_PLL_VCXO_PLL0_CH0
{HW_AUD_PLL0, HW_AUD_PLL1} -> HW_PLL_VCXO_PLL0_CH2
{HW_PLL_VCXO_PLL0_CH0, HW_PLL_VCXO_PLL0_CH2} -> HW_PLL_VCXO_PLL0

# VCXO PLL1
{HW_VEC, HW_AIO, HW_VDC_656_OUT} -> HW_PLL_VCXO_PLL1_CH0
{HW_AUD_PLL0, HW_AUD_PLL1} -> HW_PLL_VCXO_PLL1_CH2
{HW_PLL_VCXO_PLL1_CH0, HW_PLL_VCXO_PLL1_CH2} -> HW_PLL_VCXO_PLL1


# SCD PLL
HW_SCD0 -> HW_PLL_SCD0_CH0
HW_PLL_SCD0_CH0 -> HW_PLL_SCD0
HW_SCD1 -> HW_PLL_SCD1_CH0
HW_PLL_SCD1_CH0 -> HW_PLL_SCD1

# RAAGA PLL
HW_RAAGA0 -> HW_PLL_RAAGA_PLL_CH0
HW_PLL_RAAGA_PLL_CH0 -> HW_PLL_RAAGA



# BINT_Open requires access to L2 interrupt registers after BCHP_PWR_Open turns off the CLOCK_GEN clocks.
# BPWR_Open used to guarantee this initial power requirement, but BPWR is being phased-out.
# The BINT_OPEN node will handle this instead, by being acquired and released around the BINT_Open call.

BINT_OPEN -> {AVD, RAAGA, AUD_AIO, VDC, XPT, HDMI_TX, HDMI_RX, M2MC, GRAPHICS3D, RFM}


# MAGNUM_CONTROLLED is a special node that keeps track of resources whose power management is done in Magnum (as opposed to upper-level SW, e.g. Nexus)
# During BCHP_PWR_Open, all HW resources that are dependants of MAGNUM_CONTROLLED will be initialized (i.e. powered down)
# Upper-level SW is responsible for initializing all other HW resources

MAGNUM_CONTROLLED -> {AVD, AUD_AIO, RAAGA, VDC, XPT, HDMI_TX, HDMI_RX, SMARTCARD, RFM}
