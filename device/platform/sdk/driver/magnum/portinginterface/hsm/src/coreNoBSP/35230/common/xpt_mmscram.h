/***************************************************************************
 *     Copyright (c) 1999-2012, Broadcom Corporation
 *     All Rights Reserved
 *     Confidential Property of Broadcom Corporation
 *
 *
 * THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
 * AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
 * EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
 *
 * $brcm_Workfile: xpt_mmscram.h $
 * $brcm_Revision: Hydra_Software_Devel/1 $
 * $brcm_Date: 9/11/12 11:16p $
 *
 * Module Description:
 *                     DO NOT EDIT THIS FILE DIRECTLY
 *
 * This module was generated magically with RDB from a source description
 * file. You must edit the source file for changes to be made to this file.
 *
 *
 * Date:           Generated on         Tue Oct 20 11:36:51 2009
 *                 MD5 Checksum         28b53d6a25227361eac3ba4f58ece18b
 *
 * Compiled with:  RDB Utility          3.0
 *                 RDB Parser           3.0
 *                 rdb2macro.pm         4.0
 *                 Perl Interpreter     5.008008
 *                 Operating System     linux
 *
 * Spec Versions:  XPT_MMSCRAM          1
 *
 * RDB Files:  /projects/sd_security/hw/BCM7408/A0/xptsectop/work/jdel/bcm7408_a0/design/xptsectop/rdb/xpt_mmscram.rdb
 *
 * Revision History:
 *
 * $brcm_Log: /magnum/portinginterface/hsm/src/coreNoBSP/35230/common/xpt_mmscram.h $
 * 
 * Hydra_Software_Devel/1   9/11/12 11:16p atruong
 * SWSECURITY-175: Remove symbolic links in HSM PI
 * 
 * Hydra_Software_Devel/1   1/21/11 9:50a haoboy
 * SW7550-666:initial version
 *
 ***************************************************************************/

#ifndef XPT_SECURITY_H__
#define XPT_SECURITY_H__

/**
 * m = memory, c = core, r = register, f = field, d = data.
 */
#if !defined(GET_FIELD) && !defined(SET_FIELD)
#define BRCM_ALIGN(c,r,f)   c##_##r##_##f##_ALIGN
#define BRCM_BITS(c,r,f)    c##_##r##_##f##_BITS
#define BRCM_MASK(c,r,f)    c##_##r##_##f##_MASK
#define BRCM_SHIFT(c,r,f)   c##_##r##_##f##_SHIFT

#define GET_FIELD(m,c,r,f) \
	((((m) & BRCM_MASK(c,r,f)) >> BRCM_SHIFT(c,r,f)) << BRCM_ALIGN(c,r,f))

#define SET_FIELD(m,c,r,f,d) \
	((m) = (((m) & ~BRCM_MASK(c,r,f)) | ((((d) >> BRCM_ALIGN(c,r,f)) << \
	 BRCM_SHIFT(c,r,f)) & BRCM_MASK(c,r,f))) \
	)

#define SET_TYPE_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,c##_##d)
#define SET_NAME_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,c##_##r##_##f##_##d)
#define SET_VALUE_FIELD(m,c,r,f,d) SET_FIELD(m,c,r,f,d)

#endif /* GET & SET */

/****************************************************************************
 * Core Enums.
 ***************************************************************************/
/****************************************************************************
 * XPT_SECURITY_Registers
 ***************************************************************************/
#define XPT_SECURITY_SECURITY_CTRL      0x00779000 /* Security Control Register */
#define XPT_SECURITY_DTV_MSC_CTRL       0x00779004 /* DTV Local Scrambling MSC Control */
#define XPT_SECURITY_ENDIAN_SWAP        0x00779008 /* 32 bit word byte swap control */
#define XPT_SECURITY_MMSCRAM_ERROR      0x0077900c /* Security Errors */
#define XPT_SECURITY_PROC_IN_LO         0x00779010 /* Proc_in LSW */
#define XPT_SECURITY_PROC_IN_HI         0x00779014 /* Proc_in MSW */
#define XPT_SECURITY_KEYGEN_CTRL        0x00779018 /* Key Ladder Control */
#define XPT_SECURITY_RNG_WORD           0x0077901c /* Random number Output Word */
#define XPT_SECURITY_RNG_CTRL           0x00779020 /* RNG Control */
#define XPT_SECURITY_RNG_STATUS         0x00779024 /* RNG Status */
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE 0x00779028 /* CR Reset Lock Release */


/****************************************************************************
 * XPT_SECURITY_Registers
 ***************************************************************************/
/****************************************************************************
 * XPT_MMSCRAM :: SECURITY_CTRL
 ***************************************************************************/
/* XPT_MMSCRAM :: SECURITY_CTRL :: reserved0 [31:02] */
#define XPT_SECURITY_SECURITY_CTRL_reserved0_MASK                   0xfffffffc
#define XPT_SECURITY_SECURITY_CTRL_reserved0_ALIGN                  0
#define XPT_SECURITY_SECURITY_CTRL_reserved0_BITS                   30
#define XPT_SECURITY_SECURITY_CTRL_reserved0_SHIFT                  2

/* XPT_MMSCRAM :: SECURITY_CTRL :: reserved_for_eco1 [01:00] */
#define XPT_SECURITY_SECURITY_CTRL_reserved_for_eco1_MASK           0x00000003
#define XPT_SECURITY_SECURITY_CTRL_reserved_for_eco1_ALIGN          0
#define XPT_SECURITY_SECURITY_CTRL_reserved_for_eco1_BITS           2
#define XPT_SECURITY_SECURITY_CTRL_reserved_for_eco1_SHIFT          0


/****************************************************************************
 * XPT_MMSCRAM :: DTV_MSC_CTRL
 ***************************************************************************/
/* XPT_MMSCRAM :: DTV_MSC_CTRL :: reserved_for_eco0 [31:00] */
#define XPT_SECURITY_DTV_MSC_CTRL_reserved_for_eco0_MASK            0xffffffff
#define XPT_SECURITY_DTV_MSC_CTRL_reserved_for_eco0_ALIGN           0
#define XPT_SECURITY_DTV_MSC_CTRL_reserved_for_eco0_BITS            32
#define XPT_SECURITY_DTV_MSC_CTRL_reserved_for_eco0_SHIFT           0


/****************************************************************************
 * XPT_MMSCRAM :: ENDIAN_SWAP
 ***************************************************************************/
/* XPT_MMSCRAM :: ENDIAN_SWAP :: reserved0 [31:03] */
#define XPT_SECURITY_ENDIAN_SWAP_reserved0_MASK                     0xfffffff8
#define XPT_SECURITY_ENDIAN_SWAP_reserved0_ALIGN                    0
#define XPT_SECURITY_ENDIAN_SWAP_reserved0_BITS                     29
#define XPT_SECURITY_ENDIAN_SWAP_reserved0_SHIFT                    3

/* XPT_MMSCRAM :: ENDIAN_SWAP :: reserved_for_eco1 [02:00] */
#define XPT_SECURITY_ENDIAN_SWAP_reserved_for_eco1_MASK             0x00000007
#define XPT_SECURITY_ENDIAN_SWAP_reserved_for_eco1_ALIGN            0
#define XPT_SECURITY_ENDIAN_SWAP_reserved_for_eco1_BITS             3
#define XPT_SECURITY_ENDIAN_SWAP_reserved_for_eco1_SHIFT            0


/****************************************************************************
 * XPT_MMSCRAM :: MMSCRAM_ERROR
 ***************************************************************************/
/* XPT_MMSCRAM :: MMSCRAM_ERROR :: reserved0 [31:04] */
#define XPT_SECURITY_MMSCRAM_ERROR_reserved0_MASK                   0xfffffff0
#define XPT_SECURITY_MMSCRAM_ERROR_reserved0_ALIGN                  0
#define XPT_SECURITY_MMSCRAM_ERROR_reserved0_BITS                   28
#define XPT_SECURITY_MMSCRAM_ERROR_reserved0_SHIFT                  4

/* XPT_MMSCRAM :: MMSCRAM_ERROR :: CR_CHECK_ERR [03:03] */
#define XPT_SECURITY_MMSCRAM_ERROR_CR_CHECK_ERR_MASK                0x00000008
#define XPT_SECURITY_MMSCRAM_ERROR_CR_CHECK_ERR_ALIGN               0
#define XPT_SECURITY_MMSCRAM_ERROR_CR_CHECK_ERR_BITS                1
#define XPT_SECURITY_MMSCRAM_ERROR_CR_CHECK_ERR_SHIFT               3

/* XPT_MMSCRAM :: MMSCRAM_ERROR :: CR_TIMER_ERR [02:02] */
#define XPT_SECURITY_MMSCRAM_ERROR_CR_TIMER_ERR_MASK                0x00000004
#define XPT_SECURITY_MMSCRAM_ERROR_CR_TIMER_ERR_ALIGN               0
#define XPT_SECURITY_MMSCRAM_ERROR_CR_TIMER_ERR_BITS                1
#define XPT_SECURITY_MMSCRAM_ERROR_CR_TIMER_ERR_SHIFT               2

/* XPT_MMSCRAM :: MMSCRAM_ERROR :: MMSCRAM_KEY_ERR [01:01] */
#define XPT_SECURITY_MMSCRAM_ERROR_MMSCRAM_KEY_ERR_MASK             0x00000002
#define XPT_SECURITY_MMSCRAM_ERROR_MMSCRAM_KEY_ERR_ALIGN            0
#define XPT_SECURITY_MMSCRAM_ERROR_MMSCRAM_KEY_ERR_BITS             1
#define XPT_SECURITY_MMSCRAM_ERROR_MMSCRAM_KEY_ERR_SHIFT            1

/* XPT_MMSCRAM :: MMSCRAM_ERROR :: MMSCRAM_MODE_ERR [00:00] */
#define XPT_SECURITY_MMSCRAM_ERROR_MMSCRAM_MODE_ERR_MASK            0x00000001
#define XPT_SECURITY_MMSCRAM_ERROR_MMSCRAM_MODE_ERR_ALIGN           0
#define XPT_SECURITY_MMSCRAM_ERROR_MMSCRAM_MODE_ERR_BITS            1
#define XPT_SECURITY_MMSCRAM_ERROR_MMSCRAM_MODE_ERR_SHIFT           0


/****************************************************************************
 * XPT_MMSCRAM :: PROC_IN_LO
 ***************************************************************************/
/* XPT_MMSCRAM :: PROC_IN_LO :: PROC_IN_LO [31:00] */
#define XPT_SECURITY_PROC_IN_LO_PROC_IN_LO_MASK                     0xffffffff
#define XPT_SECURITY_PROC_IN_LO_PROC_IN_LO_ALIGN                    0
#define XPT_SECURITY_PROC_IN_LO_PROC_IN_LO_BITS                     32
#define XPT_SECURITY_PROC_IN_LO_PROC_IN_LO_SHIFT                    0


/****************************************************************************
 * XPT_MMSCRAM :: PROC_IN_HI
 ***************************************************************************/
/* XPT_MMSCRAM :: PROC_IN_HI :: PROC_IN_HI [31:00] */
#define XPT_SECURITY_PROC_IN_HI_PROC_IN_HI_MASK                     0xffffffff
#define XPT_SECURITY_PROC_IN_HI_PROC_IN_HI_ALIGN                    0
#define XPT_SECURITY_PROC_IN_HI_PROC_IN_HI_BITS                     32
#define XPT_SECURITY_PROC_IN_HI_PROC_IN_HI_SHIFT                    0


/****************************************************************************
 * XPT_MMSCRAM :: KEYGEN_CTRL
 ***************************************************************************/
/* XPT_MMSCRAM :: KEYGEN_CTRL :: reserved0 [31:30] */
#define XPT_SECURITY_KEYGEN_CTRL_reserved0_MASK                     0xc0000000
#define XPT_SECURITY_KEYGEN_CTRL_reserved0_ALIGN                    0
#define XPT_SECURITY_KEYGEN_CTRL_reserved0_BITS                     2
#define XPT_SECURITY_KEYGEN_CTRL_reserved0_SHIFT                    30

/* XPT_MMSCRAM :: KEYGEN_CTRL :: PROC_MMSCRAM [29:29] */
#define XPT_SECURITY_KEYGEN_CTRL_PROC_MMSCRAM_MASK                  0x20000000
#define XPT_SECURITY_KEYGEN_CTRL_PROC_MMSCRAM_ALIGN                 0
#define XPT_SECURITY_KEYGEN_CTRL_PROC_MMSCRAM_BITS                  1
#define XPT_SECURITY_KEYGEN_CTRL_PROC_MMSCRAM_SHIFT                 29

/* XPT_MMSCRAM :: KEYGEN_CTRL :: PROC_DEST [28:24] */
#define XPT_SECURITY_KEYGEN_CTRL_PROC_DEST_MASK                     0x1f000000
#define XPT_SECURITY_KEYGEN_CTRL_PROC_DEST_ALIGN                    0
#define XPT_SECURITY_KEYGEN_CTRL_PROC_DEST_BITS                     5
#define XPT_SECURITY_KEYGEN_CTRL_PROC_DEST_SHIFT                    24

/* XPT_MMSCRAM :: KEYGEN_CTRL :: Reserved [23:23] */
#define XPT_SECURITY_KEYGEN_CTRL_PROC_CA_MASK                      0x00800000
#define XPT_SECURITY_KEYGEN_CTRL_PROC_CA_ALIGN                     0
#define XPT_SECURITY_KEYGEN_CTRL_PROC_CA_BITS                      1
#define XPT_SECURITY_KEYGEN_CTRL_PROC_CA_SHIFT                     23

/* XPT_MMSCRAM :: KEYGEN_CTRL :: PROC_CUS [22:17] */
#define XPT_SECURITY_KEYGEN_CTRL_PROC_CUS_MASK                      0x007e0000
#define XPT_SECURITY_KEYGEN_CTRL_PROC_CUS_ALIGN                     0
#define XPT_SECURITY_KEYGEN_CTRL_PROC_CUS_BITS                      6
#define XPT_SECURITY_KEYGEN_CTRL_PROC_CUS_SHIFT                     17

/* XPT_MMSCRAM :: KEYGEN_CTRL :: KEY_VAR [16:09] */
#define XPT_SECURITY_KEYGEN_CTRL_KEY_VAR_MASK                       0x0001fe00
#define XPT_SECURITY_KEYGEN_CTRL_KEY_VAR_ALIGN                      0
#define XPT_SECURITY_KEYGEN_CTRL_KEY_VAR_BITS                       8
#define XPT_SECURITY_KEYGEN_CTRL_KEY_VAR_SHIFT                      9

/* XPT_MMSCRAM :: KEYGEN_CTRL :: KEY_ADDR [08:00] */
#define XPT_SECURITY_KEYGEN_CTRL_KEY_ADDR_MASK                      0x000001ff
#define XPT_SECURITY_KEYGEN_CTRL_KEY_ADDR_ALIGN                     0
#define XPT_SECURITY_KEYGEN_CTRL_KEY_ADDR_BITS                      9
#define XPT_SECURITY_KEYGEN_CTRL_KEY_ADDR_SHIFT                     0


/****************************************************************************
 * XPT_MMSCRAM :: RNG_WORD
 ***************************************************************************/
/* XPT_MMSCRAM :: RNG_WORD :: RNG_WORD [31:00] */
#define XPT_SECURITY_RNG_WORD_RNG_WORD_MASK                         0xffffffff
#define XPT_SECURITY_RNG_WORD_RNG_WORD_ALIGN                        0
#define XPT_SECURITY_RNG_WORD_RNG_WORD_BITS                         32
#define XPT_SECURITY_RNG_WORD_RNG_WORD_SHIFT                        0


/****************************************************************************
 * XPT_MMSCRAM :: RNG_CTRL
 ***************************************************************************/
/* XPT_MMSCRAM :: RNG_CTRL :: reserved0 [31:01] */
#define XPT_SECURITY_RNG_CTRL_reserved0_MASK                        0xfffffffe
#define XPT_SECURITY_RNG_CTRL_reserved0_ALIGN                       0
#define XPT_SECURITY_RNG_CTRL_reserved0_BITS                        31
#define XPT_SECURITY_RNG_CTRL_reserved0_SHIFT                       1

/* XPT_MMSCRAM :: RNG_CTRL :: RNG_SEND [00:00] */
#define XPT_SECURITY_RNG_CTRL_RNG_SEND_MASK                         0x00000001
#define XPT_SECURITY_RNG_CTRL_RNG_SEND_ALIGN                        0
#define XPT_SECURITY_RNG_CTRL_RNG_SEND_BITS                         1
#define XPT_SECURITY_RNG_CTRL_RNG_SEND_SHIFT                        0


/****************************************************************************
 * XPT_MMSCRAM :: RNG_STATUS
 ***************************************************************************/
/* XPT_MMSCRAM :: RNG_STATUS :: reserved0 [31:01] */
#define XPT_SECURITY_RNG_STATUS_reserved0_MASK                      0xfffffffe
#define XPT_SECURITY_RNG_STATUS_reserved0_ALIGN                     0
#define XPT_SECURITY_RNG_STATUS_reserved0_BITS                      31
#define XPT_SECURITY_RNG_STATUS_reserved0_SHIFT                     1

/* XPT_MMSCRAM :: RNG_STATUS :: RNG_READY [00:00] */
#define XPT_SECURITY_RNG_STATUS_RNG_READY_MASK                      0x00000001
#define XPT_SECURITY_RNG_STATUS_RNG_READY_ALIGN                     0
#define XPT_SECURITY_RNG_STATUS_RNG_READY_BITS                      1
#define XPT_SECURITY_RNG_STATUS_RNG_READY_SHIFT                     0


/****************************************************************************
 * XPT_MMSCRAM :: CR_RESET_LOCK_RELEASE
 ***************************************************************************/
/* XPT_MMSCRAM :: CR_RESET_LOCK_RELEASE :: reserved0 [31:01] */
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE_reserved0_MASK           0xfffffffe
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE_reserved0_ALIGN          0
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE_reserved0_BITS           31
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE_reserved0_SHIFT          1

/* XPT_MMSCRAM :: CR_RESET_LOCK_RELEASE :: reserved_for_eco1 [00:00] */
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE_reserved_for_eco1_MASK   0x00000001
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE_reserved_for_eco1_ALIGN  0
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE_reserved_for_eco1_BITS   1
#define XPT_SECURITY_CR_RESET_LOCK_RELEASE_reserved_for_eco1_SHIFT  0


/****************************************************************************
 * Datatype Definitions.
 ***************************************************************************/
#endif /* #ifndef XPT_SECURITY_H__ */

/* End of File */

