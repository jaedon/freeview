#############################################################################
#    (c)2010 Broadcom Corporation
# 
# This program is the proprietary software of Broadcom Corporation and/or its licensors,
# and may only be used, duplicated, modified or distributed pursuant to the terms and
# conditions of a separate, written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
# no license (express or implied), right to use, or waiver of any kind with respect to the
# Software, and Broadcom expressly reserves all rights in and to the Software and all
# intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
# HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
# NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.  
#  
# Except as expressly set forth in the Authorized License,
#  
# 1.     This program, including its structure, sequence and organization, constitutes the valuable trade
# secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of Broadcom integrated circuit products.
#  
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS" 
# AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR 
# WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO 
# THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES 
# OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, 
# LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION 
# OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF 
# USE OR PERFORMANCE OF THE SOFTWARE.
# 
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS 
# LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR 
# EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR 
# USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT 
# ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE 
# LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF 
# ANY LIMITED REMEDY.
#
# $brcm_Workfile: module_rules.inc $
# $brcm_Revision: 1 $
# $brcm_Date: 3/25/10 2:35p $
# 
# Module Description:
# 
# Revision History:
# 
# $brcm_Log: /nexus/build/os/linuxpal/module_rules.inc $
# 
# 1   3/25/10 2:35p adtran
# SW35230-126: Add support for Palladium testing
# 
#############################################################################
#####################################################
# This file is automatically generated.  Do not edit.
#####################################################
$(NEXUS_SYNCTHUNK_DIR)/exists:
	$(Q_)$(MKDIR) $@

#
# CORE
#
$(NEXUS_OBJ_DIR)/CORE/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter CORE,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_CORE_OBJECTS := $(NEXUS_OBJ_DIR)/CORE/nexus_core_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_core_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_core_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_core_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_CORE_PUBLIC_INCLUDES)))
	@echo "[Proxy..... core]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl CORE $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_CORE_PUBLIC_INCLUDES))
# CORE does not have syncthunks

ifdef NEXUS_CORE_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/CORE/nexus_core_precompiled.h.gch: $(NEXUS_CORE_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/CORE/exists $(NEXUS_CORE_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (core)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_CORE_CFLAGS) -c $< -o $@

$(NEXUS_CORE_OBJECTS): $(NEXUS_OBJ_DIR)/CORE/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/CORE/exists ${NEXUS_OBJ_DIR}/CORE/nexus_core_precompiled.h.gch $(NEXUS_CORE_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (core)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_CORE_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_core_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/CORE/nexus_core_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_CORE_CFLAGS) -c $< -o $@

else
$(NEXUS_CORE_OBJECTS): $(NEXUS_OBJ_DIR)/CORE/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/CORE/exists $(NEXUS_CORE_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (core)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_CORE_CFLAGS) -c $< -o $@

endif
#
# FRONTEND
#
$(NEXUS_OBJ_DIR)/FRONTEND/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter FRONTEND,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_FRONTEND_OBJECTS := $(NEXUS_OBJ_DIR)/FRONTEND/nexus_frontend_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_FRONTEND_PUBLIC_INCLUDES)))
	@echo "[Proxy..... frontend]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl FRONTEND $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_FRONTEND_PUBLIC_INCLUDES))
NEXUS_FRONTEND_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_FRONTEND_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... frontend]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl FRONTEND $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_FRONTEND_PUBLIC_INCLUDES))

ifdef NEXUS_FRONTEND_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/FRONTEND/nexus_frontend_precompiled.h.gch: $(NEXUS_FRONTEND_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/FRONTEND/exists $(NEXUS_FRONTEND_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (frontend)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_FRONTEND_CFLAGS) -c $< -o $@

$(NEXUS_FRONTEND_OBJECTS): $(NEXUS_OBJ_DIR)/FRONTEND/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/FRONTEND/exists ${NEXUS_OBJ_DIR}/FRONTEND/nexus_frontend_precompiled.h.gch $(NEXUS_FRONTEND_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (frontend)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_FRONTEND_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_frontend_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/FRONTEND/nexus_frontend_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_FRONTEND_CFLAGS) -c $< -o $@

else
$(NEXUS_FRONTEND_OBJECTS): $(NEXUS_OBJ_DIR)/FRONTEND/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/FRONTEND/exists $(NEXUS_FRONTEND_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (frontend)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_FRONTEND_CFLAGS) -c $< -o $@

endif
#
# TRANSPORT
#
$(NEXUS_OBJ_DIR)/TRANSPORT/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter TRANSPORT,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_TRANSPORT_OBJECTS := $(NEXUS_OBJ_DIR)/TRANSPORT/nexus_transport_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_transport_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_transport_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_transport_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_TRANSPORT_PUBLIC_INCLUDES)))
	@echo "[Proxy..... transport]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl TRANSPORT $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_TRANSPORT_PUBLIC_INCLUDES))
NEXUS_TRANSPORT_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_transport_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_transport_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_transport_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_transport_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_transport_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_TRANSPORT_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... transport]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl TRANSPORT $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_TRANSPORT_PUBLIC_INCLUDES))

ifdef NEXUS_TRANSPORT_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/TRANSPORT/nexus_transport_precompiled.h.gch: $(NEXUS_TRANSPORT_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/TRANSPORT/exists $(NEXUS_TRANSPORT_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (transport)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_TRANSPORT_CFLAGS) -c $< -o $@

$(NEXUS_TRANSPORT_OBJECTS): $(NEXUS_OBJ_DIR)/TRANSPORT/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/TRANSPORT/exists ${NEXUS_OBJ_DIR}/TRANSPORT/nexus_transport_precompiled.h.gch $(NEXUS_TRANSPORT_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (transport)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_TRANSPORT_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_transport_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/TRANSPORT/nexus_transport_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_TRANSPORT_CFLAGS) -c $< -o $@

else
$(NEXUS_TRANSPORT_OBJECTS): $(NEXUS_OBJ_DIR)/TRANSPORT/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/TRANSPORT/exists $(NEXUS_TRANSPORT_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (transport)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_TRANSPORT_CFLAGS) -c $< -o $@

endif
#
# AUDIO
#
$(NEXUS_OBJ_DIR)/AUDIO/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter AUDIO,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_AUDIO_OBJECTS := $(NEXUS_OBJ_DIR)/AUDIO/nexus_audio_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_audio_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_audio_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_audio_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_AUDIO_PUBLIC_INCLUDES)))
	@echo "[Proxy..... audio]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl AUDIO $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_AUDIO_PUBLIC_INCLUDES))
NEXUS_AUDIO_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_audio_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_audio_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_audio_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_audio_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_audio_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_AUDIO_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... audio]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl AUDIO $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_AUDIO_PUBLIC_INCLUDES))

ifdef NEXUS_AUDIO_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/AUDIO/nexus_audio_precompiled.h.gch: $(NEXUS_AUDIO_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/AUDIO/exists $(NEXUS_AUDIO_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (audio)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_AUDIO_CFLAGS) -c $< -o $@

$(NEXUS_AUDIO_OBJECTS): $(NEXUS_OBJ_DIR)/AUDIO/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/AUDIO/exists ${NEXUS_OBJ_DIR}/AUDIO/nexus_audio_precompiled.h.gch $(NEXUS_AUDIO_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (audio)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_AUDIO_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_audio_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/AUDIO/nexus_audio_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_AUDIO_CFLAGS) -c $< -o $@

else
$(NEXUS_AUDIO_OBJECTS): $(NEXUS_OBJ_DIR)/AUDIO/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/AUDIO/exists $(NEXUS_AUDIO_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (audio)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_AUDIO_CFLAGS) -c $< -o $@

endif
#
# VIDEO_DECODER
#
$(NEXUS_OBJ_DIR)/VIDEO_DECODER/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter VIDEO_DECODER,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_VIDEO_DECODER_OBJECTS := $(NEXUS_OBJ_DIR)/VIDEO_DECODER/nexus_video_decoder_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_VIDEO_DECODER_PUBLIC_INCLUDES)))
	@echo "[Proxy..... video_decoder]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl VIDEO_DECODER $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_VIDEO_DECODER_PUBLIC_INCLUDES))
NEXUS_VIDEO_DECODER_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_VIDEO_DECODER_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... video_decoder]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl VIDEO_DECODER $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_VIDEO_DECODER_PUBLIC_INCLUDES))

ifdef NEXUS_VIDEO_DECODER_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/VIDEO_DECODER/nexus_video_decoder_precompiled.h.gch: $(NEXUS_VIDEO_DECODER_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/VIDEO_DECODER/exists $(NEXUS_VIDEO_DECODER_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (video_decoder)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_VIDEO_DECODER_CFLAGS) -c $< -o $@

$(NEXUS_VIDEO_DECODER_OBJECTS): $(NEXUS_OBJ_DIR)/VIDEO_DECODER/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/VIDEO_DECODER/exists ${NEXUS_OBJ_DIR}/VIDEO_DECODER/nexus_video_decoder_precompiled.h.gch $(NEXUS_VIDEO_DECODER_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (video_decoder)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_VIDEO_DECODER_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_video_decoder_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/VIDEO_DECODER/nexus_video_decoder_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_VIDEO_DECODER_CFLAGS) -c $< -o $@

else
$(NEXUS_VIDEO_DECODER_OBJECTS): $(NEXUS_OBJ_DIR)/VIDEO_DECODER/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/VIDEO_DECODER/exists $(NEXUS_VIDEO_DECODER_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (video_decoder)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_VIDEO_DECODER_CFLAGS) -c $< -o $@

endif
#
# SURFACE
#
$(NEXUS_OBJ_DIR)/SURFACE/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter SURFACE,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_SURFACE_OBJECTS := $(NEXUS_OBJ_DIR)/SURFACE/nexus_surface_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_surface_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_surface_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_surface_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_SURFACE_PUBLIC_INCLUDES)))
	@echo "[Proxy..... surface]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl SURFACE $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_SURFACE_PUBLIC_INCLUDES))
NEXUS_SURFACE_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_surface_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_surface_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_surface_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_surface_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_surface_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_SURFACE_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... surface]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl SURFACE $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_SURFACE_PUBLIC_INCLUDES))

ifdef NEXUS_SURFACE_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/SURFACE/nexus_surface_precompiled.h.gch: $(NEXUS_SURFACE_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/SURFACE/exists $(NEXUS_SURFACE_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (surface)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SURFACE_CFLAGS) -c $< -o $@

$(NEXUS_SURFACE_OBJECTS): $(NEXUS_OBJ_DIR)/SURFACE/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/SURFACE/exists ${NEXUS_OBJ_DIR}/SURFACE/nexus_surface_precompiled.h.gch $(NEXUS_SURFACE_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (surface)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_SURFACE_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_surface_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/SURFACE/nexus_surface_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SURFACE_CFLAGS) -c $< -o $@

else
$(NEXUS_SURFACE_OBJECTS): $(NEXUS_OBJ_DIR)/SURFACE/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/SURFACE/exists $(NEXUS_SURFACE_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (surface)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SURFACE_CFLAGS) -c $< -o $@

endif
#
# I2C
#
$(NEXUS_OBJ_DIR)/I2C/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter I2C,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_I2C_OBJECTS := $(NEXUS_OBJ_DIR)/I2C/nexus_i2c_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_I2C_PUBLIC_INCLUDES)))
	@echo "[Proxy..... i2c]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl I2C $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_I2C_PUBLIC_INCLUDES))
NEXUS_I2C_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_I2C_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... i2c]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl I2C $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_I2C_PUBLIC_INCLUDES))

ifdef NEXUS_I2C_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/I2C/nexus_i2c_precompiled.h.gch: $(NEXUS_I2C_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/I2C/exists $(NEXUS_I2C_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (i2c)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_I2C_CFLAGS) -c $< -o $@

$(NEXUS_I2C_OBJECTS): $(NEXUS_OBJ_DIR)/I2C/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/I2C/exists ${NEXUS_OBJ_DIR}/I2C/nexus_i2c_precompiled.h.gch $(NEXUS_I2C_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (i2c)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_I2C_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_i2c_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/I2C/nexus_i2c_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_I2C_CFLAGS) -c $< -o $@

else
$(NEXUS_I2C_OBJECTS): $(NEXUS_OBJ_DIR)/I2C/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/I2C/exists $(NEXUS_I2C_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (i2c)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_I2C_CFLAGS) -c $< -o $@

endif
#
# DISPLAY
#
$(NEXUS_OBJ_DIR)/DISPLAY/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter DISPLAY,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_DISPLAY_OBJECTS := $(NEXUS_OBJ_DIR)/DISPLAY/nexus_display_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_display_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_display_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_display_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_DISPLAY_PUBLIC_INCLUDES)))
	@echo "[Proxy..... display]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl DISPLAY $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_DISPLAY_PUBLIC_INCLUDES))
NEXUS_DISPLAY_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_display_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_display_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_display_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_display_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_display_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_DISPLAY_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... display]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl DISPLAY $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_DISPLAY_PUBLIC_INCLUDES))

ifdef NEXUS_DISPLAY_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/DISPLAY/nexus_display_precompiled.h.gch: $(NEXUS_DISPLAY_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/DISPLAY/exists $(NEXUS_DISPLAY_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (display)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DISPLAY_CFLAGS) -c $< -o $@

$(NEXUS_DISPLAY_OBJECTS): $(NEXUS_OBJ_DIR)/DISPLAY/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/DISPLAY/exists ${NEXUS_OBJ_DIR}/DISPLAY/nexus_display_precompiled.h.gch $(NEXUS_DISPLAY_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (display)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_DISPLAY_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_display_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/DISPLAY/nexus_display_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DISPLAY_CFLAGS) -c $< -o $@

else
$(NEXUS_DISPLAY_OBJECTS): $(NEXUS_OBJ_DIR)/DISPLAY/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/DISPLAY/exists $(NEXUS_DISPLAY_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (display)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DISPLAY_CFLAGS) -c $< -o $@

endif
#
# PWM
#
$(NEXUS_OBJ_DIR)/PWM/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter PWM,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_PWM_OBJECTS := $(NEXUS_OBJ_DIR)/PWM/nexus_pwm_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_PWM_PUBLIC_INCLUDES)))
	@echo "[Proxy..... pwm]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl PWM $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_PWM_PUBLIC_INCLUDES))
NEXUS_PWM_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_PWM_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... pwm]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl PWM $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_PWM_PUBLIC_INCLUDES))

ifdef NEXUS_PWM_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/PWM/nexus_pwm_precompiled.h.gch: $(NEXUS_PWM_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/PWM/exists $(NEXUS_PWM_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (pwm)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PWM_CFLAGS) -c $< -o $@

$(NEXUS_PWM_OBJECTS): $(NEXUS_OBJ_DIR)/PWM/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/PWM/exists ${NEXUS_OBJ_DIR}/PWM/nexus_pwm_precompiled.h.gch $(NEXUS_PWM_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (pwm)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_PWM_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_pwm_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/PWM/nexus_pwm_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PWM_CFLAGS) -c $< -o $@

else
$(NEXUS_PWM_OBJECTS): $(NEXUS_OBJ_DIR)/PWM/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/PWM/exists $(NEXUS_PWM_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (pwm)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PWM_CFLAGS) -c $< -o $@

endif
#
# SPI
#
$(NEXUS_OBJ_DIR)/SPI/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter SPI,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_SPI_OBJECTS := $(NEXUS_OBJ_DIR)/SPI/nexus_spi_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_spi_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_spi_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_spi_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_SPI_PUBLIC_INCLUDES)))
	@echo "[Proxy..... spi]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl SPI $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_SPI_PUBLIC_INCLUDES))
NEXUS_SPI_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_spi_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_spi_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_spi_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_spi_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_spi_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_SPI_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... spi]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl SPI $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_SPI_PUBLIC_INCLUDES))

ifdef NEXUS_SPI_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/SPI/nexus_spi_precompiled.h.gch: $(NEXUS_SPI_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/SPI/exists $(NEXUS_SPI_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (spi)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SPI_CFLAGS) -c $< -o $@

$(NEXUS_SPI_OBJECTS): $(NEXUS_OBJ_DIR)/SPI/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/SPI/exists ${NEXUS_OBJ_DIR}/SPI/nexus_spi_precompiled.h.gch $(NEXUS_SPI_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (spi)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_SPI_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_spi_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/SPI/nexus_spi_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SPI_CFLAGS) -c $< -o $@

else
$(NEXUS_SPI_OBJECTS): $(NEXUS_OBJ_DIR)/SPI/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/SPI/exists $(NEXUS_SPI_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (spi)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SPI_CFLAGS) -c $< -o $@

endif
#
# GPIO
#
$(NEXUS_OBJ_DIR)/GPIO/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter GPIO,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_GPIO_OBJECTS := $(NEXUS_OBJ_DIR)/GPIO/nexus_gpio_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_GPIO_PUBLIC_INCLUDES)))
	@echo "[Proxy..... gpio]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl GPIO $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_GPIO_PUBLIC_INCLUDES))
NEXUS_GPIO_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_GPIO_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... gpio]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl GPIO $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_GPIO_PUBLIC_INCLUDES))

ifdef NEXUS_GPIO_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/GPIO/nexus_gpio_precompiled.h.gch: $(NEXUS_GPIO_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/GPIO/exists $(NEXUS_GPIO_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (gpio)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_GPIO_CFLAGS) -c $< -o $@

$(NEXUS_GPIO_OBJECTS): $(NEXUS_OBJ_DIR)/GPIO/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/GPIO/exists ${NEXUS_OBJ_DIR}/GPIO/nexus_gpio_precompiled.h.gch $(NEXUS_GPIO_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (gpio)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_GPIO_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_gpio_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/GPIO/nexus_gpio_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_GPIO_CFLAGS) -c $< -o $@

else
$(NEXUS_GPIO_OBJECTS): $(NEXUS_OBJ_DIR)/GPIO/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/GPIO/exists $(NEXUS_GPIO_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (gpio)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_GPIO_CFLAGS) -c $< -o $@

endif
#
# GRAPHICS2D
#
$(NEXUS_OBJ_DIR)/GRAPHICS2D/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter GRAPHICS2D,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_GRAPHICS2D_OBJECTS := $(NEXUS_OBJ_DIR)/GRAPHICS2D/nexus_graphics2d_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_GRAPHICS2D_PUBLIC_INCLUDES)))
	@echo "[Proxy..... graphics2d]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl GRAPHICS2D $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_GRAPHICS2D_PUBLIC_INCLUDES))
NEXUS_GRAPHICS2D_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_GRAPHICS2D_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... graphics2d]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl GRAPHICS2D $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_GRAPHICS2D_PUBLIC_INCLUDES))

ifdef NEXUS_GRAPHICS2D_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/GRAPHICS2D/nexus_graphics2d_precompiled.h.gch: $(NEXUS_GRAPHICS2D_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/GRAPHICS2D/exists $(NEXUS_GRAPHICS2D_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (graphics2d)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_GRAPHICS2D_CFLAGS) -c $< -o $@

$(NEXUS_GRAPHICS2D_OBJECTS): $(NEXUS_OBJ_DIR)/GRAPHICS2D/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/GRAPHICS2D/exists ${NEXUS_OBJ_DIR}/GRAPHICS2D/nexus_graphics2d_precompiled.h.gch $(NEXUS_GRAPHICS2D_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (graphics2d)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_GRAPHICS2D_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_graphics2d_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/GRAPHICS2D/nexus_graphics2d_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_GRAPHICS2D_CFLAGS) -c $< -o $@

else
$(NEXUS_GRAPHICS2D_OBJECTS): $(NEXUS_OBJ_DIR)/GRAPHICS2D/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/GRAPHICS2D/exists $(NEXUS_GRAPHICS2D_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (graphics2d)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_GRAPHICS2D_CFLAGS) -c $< -o $@

endif
#
# HDMI_INPUT
#
$(NEXUS_OBJ_DIR)/HDMI_INPUT/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter HDMI_INPUT,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_HDMI_INPUT_OBJECTS := $(NEXUS_OBJ_DIR)/HDMI_INPUT/nexus_hdmi_input_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_HDMI_INPUT_PUBLIC_INCLUDES)))
	@echo "[Proxy..... hdmi_input]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl HDMI_INPUT $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_HDMI_INPUT_PUBLIC_INCLUDES))
NEXUS_HDMI_INPUT_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_HDMI_INPUT_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... hdmi_input]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl HDMI_INPUT $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_HDMI_INPUT_PUBLIC_INCLUDES))

ifdef NEXUS_HDMI_INPUT_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/HDMI_INPUT/nexus_hdmi_input_precompiled.h.gch: $(NEXUS_HDMI_INPUT_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/HDMI_INPUT/exists $(NEXUS_HDMI_INPUT_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (hdmi_input)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_HDMI_INPUT_CFLAGS) -c $< -o $@

$(NEXUS_HDMI_INPUT_OBJECTS): $(NEXUS_OBJ_DIR)/HDMI_INPUT/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/HDMI_INPUT/exists ${NEXUS_OBJ_DIR}/HDMI_INPUT/nexus_hdmi_input_precompiled.h.gch $(NEXUS_HDMI_INPUT_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (hdmi_input)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_HDMI_INPUT_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_hdmi_input_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/HDMI_INPUT/nexus_hdmi_input_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_HDMI_INPUT_CFLAGS) -c $< -o $@

else
$(NEXUS_HDMI_INPUT_OBJECTS): $(NEXUS_OBJ_DIR)/HDMI_INPUT/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/HDMI_INPUT/exists $(NEXUS_HDMI_INPUT_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (hdmi_input)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_HDMI_INPUT_CFLAGS) -c $< -o $@

endif
#
# DVB_CI
#
$(NEXUS_OBJ_DIR)/DVB_CI/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter DVB_CI,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_DVB_CI_OBJECTS := $(NEXUS_OBJ_DIR)/DVB_CI/nexus_dvb_ci_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_DVB_CI_PUBLIC_INCLUDES)))
	@echo "[Proxy..... dvb_ci]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl DVB_CI $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_DVB_CI_PUBLIC_INCLUDES))
NEXUS_DVB_CI_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_DVB_CI_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... dvb_ci]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl DVB_CI $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_DVB_CI_PUBLIC_INCLUDES))

ifdef NEXUS_DVB_CI_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/DVB_CI/nexus_dvb_ci_precompiled.h.gch: $(NEXUS_DVB_CI_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/DVB_CI/exists $(NEXUS_DVB_CI_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (dvb_ci)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DVB_CI_CFLAGS) -c $< -o $@

$(NEXUS_DVB_CI_OBJECTS): $(NEXUS_OBJ_DIR)/DVB_CI/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/DVB_CI/exists ${NEXUS_OBJ_DIR}/DVB_CI/nexus_dvb_ci_precompiled.h.gch $(NEXUS_DVB_CI_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (dvb_ci)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_DVB_CI_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_dvb_ci_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/DVB_CI/nexus_dvb_ci_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DVB_CI_CFLAGS) -c $< -o $@

else
$(NEXUS_DVB_CI_OBJECTS): $(NEXUS_OBJ_DIR)/DVB_CI/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/DVB_CI/exists $(NEXUS_DVB_CI_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (dvb_ci)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DVB_CI_CFLAGS) -c $< -o $@

endif
#
# DMA
#
$(NEXUS_OBJ_DIR)/DMA/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter DMA,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_DMA_OBJECTS := $(NEXUS_OBJ_DIR)/DMA/nexus_dma_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_dma_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_dma_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_dma_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_DMA_PUBLIC_INCLUDES)))
	@echo "[Proxy..... dma]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl DMA $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_DMA_PUBLIC_INCLUDES))
NEXUS_DMA_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_dma_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_dma_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_dma_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_dma_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_dma_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_DMA_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... dma]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl DMA $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_DMA_PUBLIC_INCLUDES))

ifdef NEXUS_DMA_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/DMA/nexus_dma_precompiled.h.gch: $(NEXUS_DMA_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/DMA/exists $(NEXUS_DMA_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (dma)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DMA_CFLAGS) -c $< -o $@

$(NEXUS_DMA_OBJECTS): $(NEXUS_OBJ_DIR)/DMA/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/DMA/exists ${NEXUS_OBJ_DIR}/DMA/nexus_dma_precompiled.h.gch $(NEXUS_DMA_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (dma)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_DMA_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_dma_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/DMA/nexus_dma_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DMA_CFLAGS) -c $< -o $@

else
$(NEXUS_DMA_OBJECTS): $(NEXUS_OBJ_DIR)/DMA/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/DMA/exists $(NEXUS_DMA_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (dma)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_DMA_CFLAGS) -c $< -o $@

endif
#
# PICTURE_DECODER
#
$(NEXUS_OBJ_DIR)/PICTURE_DECODER/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter PICTURE_DECODER,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_PICTURE_DECODER_OBJECTS := $(NEXUS_OBJ_DIR)/PICTURE_DECODER/nexus_picture_decoder_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_PICTURE_DECODER_PUBLIC_INCLUDES)))
	@echo "[Proxy..... picture_decoder]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl PICTURE_DECODER $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_PICTURE_DECODER_PUBLIC_INCLUDES))
NEXUS_PICTURE_DECODER_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_PICTURE_DECODER_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... picture_decoder]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl PICTURE_DECODER $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_PICTURE_DECODER_PUBLIC_INCLUDES))

ifdef NEXUS_PICTURE_DECODER_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/PICTURE_DECODER/nexus_picture_decoder_precompiled.h.gch: $(NEXUS_PICTURE_DECODER_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/PICTURE_DECODER/exists $(NEXUS_PICTURE_DECODER_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (picture_decoder)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PICTURE_DECODER_CFLAGS) -c $< -o $@

$(NEXUS_PICTURE_DECODER_OBJECTS): $(NEXUS_OBJ_DIR)/PICTURE_DECODER/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/PICTURE_DECODER/exists ${NEXUS_OBJ_DIR}/PICTURE_DECODER/nexus_picture_decoder_precompiled.h.gch $(NEXUS_PICTURE_DECODER_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (picture_decoder)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_PICTURE_DECODER_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_picture_decoder_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/PICTURE_DECODER/nexus_picture_decoder_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PICTURE_DECODER_CFLAGS) -c $< -o $@

else
$(NEXUS_PICTURE_DECODER_OBJECTS): $(NEXUS_OBJ_DIR)/PICTURE_DECODER/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/PICTURE_DECODER/exists $(NEXUS_PICTURE_DECODER_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (picture_decoder)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PICTURE_DECODER_CFLAGS) -c $< -o $@

endif
#
# SYNC_CHANNEL
#
$(NEXUS_OBJ_DIR)/SYNC_CHANNEL/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter SYNC_CHANNEL,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_SYNC_CHANNEL_OBJECTS := $(NEXUS_OBJ_DIR)/SYNC_CHANNEL/nexus_sync_channel_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_SYNC_CHANNEL_PUBLIC_INCLUDES)))
	@echo "[Proxy..... sync_channel]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl SYNC_CHANNEL $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_SYNC_CHANNEL_PUBLIC_INCLUDES))
NEXUS_SYNC_CHANNEL_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_SYNC_CHANNEL_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... sync_channel]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl SYNC_CHANNEL $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_SYNC_CHANNEL_PUBLIC_INCLUDES))

ifdef NEXUS_SYNC_CHANNEL_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/SYNC_CHANNEL/nexus_sync_channel_precompiled.h.gch: $(NEXUS_SYNC_CHANNEL_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/SYNC_CHANNEL/exists $(NEXUS_SYNC_CHANNEL_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (sync_channel)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SYNC_CHANNEL_CFLAGS) -c $< -o $@

$(NEXUS_SYNC_CHANNEL_OBJECTS): $(NEXUS_OBJ_DIR)/SYNC_CHANNEL/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/SYNC_CHANNEL/exists ${NEXUS_OBJ_DIR}/SYNC_CHANNEL/nexus_sync_channel_precompiled.h.gch $(NEXUS_SYNC_CHANNEL_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (sync_channel)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_SYNC_CHANNEL_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_sync_channel_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/SYNC_CHANNEL/nexus_sync_channel_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SYNC_CHANNEL_CFLAGS) -c $< -o $@

else
$(NEXUS_SYNC_CHANNEL_OBJECTS): $(NEXUS_OBJ_DIR)/SYNC_CHANNEL/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/SYNC_CHANNEL/exists $(NEXUS_SYNC_CHANNEL_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (sync_channel)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_SYNC_CHANNEL_CFLAGS) -c $< -o $@

endif
#
# ASTM
#
$(NEXUS_OBJ_DIR)/ASTM/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter ASTM,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_ASTM_OBJECTS := $(NEXUS_OBJ_DIR)/ASTM/nexus_astm_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_astm_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_astm_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_astm_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_ASTM_PUBLIC_INCLUDES)))
	@echo "[Proxy..... astm]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl ASTM $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_ASTM_PUBLIC_INCLUDES))
NEXUS_ASTM_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_astm_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_astm_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_astm_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_astm_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_astm_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_ASTM_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... astm]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl ASTM $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_ASTM_PUBLIC_INCLUDES))

ifdef NEXUS_ASTM_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/ASTM/nexus_astm_precompiled.h.gch: $(NEXUS_ASTM_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/ASTM/exists $(NEXUS_ASTM_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (astm)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_ASTM_CFLAGS) -c $< -o $@

$(NEXUS_ASTM_OBJECTS): $(NEXUS_OBJ_DIR)/ASTM/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/ASTM/exists ${NEXUS_OBJ_DIR}/ASTM/nexus_astm_precompiled.h.gch $(NEXUS_ASTM_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (astm)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_ASTM_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_astm_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/ASTM/nexus_astm_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_ASTM_CFLAGS) -c $< -o $@

else
$(NEXUS_ASTM_OBJECTS): $(NEXUS_OBJ_DIR)/ASTM/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/ASTM/exists $(NEXUS_ASTM_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (astm)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_ASTM_CFLAGS) -c $< -o $@

endif
#
# PLATFORM
#
$(NEXUS_OBJ_DIR)/PLATFORM/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter PLATFORM,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_PLATFORM_OBJECTS := $(NEXUS_OBJ_DIR)/PLATFORM/nexus_platform_proxy.$(NEXUS_OBJ_SUFFIX)
NEXUS_PLATFORM_OBJECTS += $(addprefix $(NEXUS_OBJ_DIR)/PLATFORM/,$(patsubst %.c,%.$(NEXUS_OBJ_SUFFIX),$(notdir $(NEXUS_PLATFORM_PROXY_SOURCES))))
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_platform_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_platform_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_platform_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_PLATFORM_PUBLIC_INCLUDES)))
	@echo "[Proxy..... platform]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl PLATFORM $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_PLATFORM_PUBLIC_INCLUDES))
# PLATFORM does not have syncthunks

ifdef NEXUS_PLATFORM_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/PLATFORM/nexus_platform_precompiled.h.gch: $(NEXUS_PLATFORM_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/PLATFORM/exists $(NEXUS_PLATFORM_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (platform)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PLATFORM_CFLAGS) -c $< -o $@

$(NEXUS_PLATFORM_OBJECTS): $(NEXUS_OBJ_DIR)/PLATFORM/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/PLATFORM/exists ${NEXUS_OBJ_DIR}/PLATFORM/nexus_platform_precompiled.h.gch $(NEXUS_PLATFORM_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (platform)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_PLATFORM_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_platform_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/PLATFORM/nexus_platform_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PLATFORM_CFLAGS) -c $< -o $@

else
$(NEXUS_PLATFORM_OBJECTS): $(NEXUS_OBJ_DIR)/PLATFORM/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/PLATFORM/exists $(NEXUS_PLATFORM_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (platform)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PLATFORM_CFLAGS) -c $< -o $@

endif
#
# BASE
#
$(NEXUS_OBJ_DIR)/BASE/exists:
	$(Q_)$(MKDIR) $@

# BASE does not have syncthunks

ifdef NEXUS_BASE_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/BASE/nexus_base_precompiled.h.gch: $(NEXUS_BASE_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/BASE/exists $(NEXUS_BASE_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (base)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_BASE_CFLAGS) -c $< -o $@

$(NEXUS_BASE_OBJECTS): $(NEXUS_OBJ_DIR)/BASE/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/BASE/exists ${NEXUS_OBJ_DIR}/BASE/nexus_base_precompiled.h.gch $(NEXUS_BASE_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (base)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_BASE_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_base_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/BASE/nexus_base_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_BASE_CFLAGS) -c $< -o $@

else
$(NEXUS_BASE_OBJECTS): $(NEXUS_OBJ_DIR)/BASE/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/BASE/exists $(NEXUS_BASE_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (base)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_BASE_CFLAGS) -c $< -o $@

endif
#
# FILE
#
$(NEXUS_OBJ_DIR)/FILE/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter FILE,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_FILE_OBJECTS := $(NEXUS_OBJ_DIR)/FILE/nexus_file_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_file_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_file_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_file_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_FILE_PUBLIC_INCLUDES)))
	@echo "[Proxy..... file]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl FILE $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_FILE_PUBLIC_INCLUDES))
NEXUS_FILE_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_file_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_file_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_file_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_file_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_file_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_FILE_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... file]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl FILE $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_FILE_PUBLIC_INCLUDES))

ifdef NEXUS_FILE_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/FILE/nexus_file_precompiled.h.gch: $(NEXUS_FILE_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/FILE/exists $(NEXUS_FILE_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (file)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_FILE_CFLAGS) -c $< -o $@

$(NEXUS_FILE_OBJECTS): $(NEXUS_OBJ_DIR)/FILE/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/FILE/exists ${NEXUS_OBJ_DIR}/FILE/nexus_file_precompiled.h.gch $(NEXUS_FILE_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (file)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_FILE_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_file_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/FILE/nexus_file_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_FILE_CFLAGS) -c $< -o $@

else
$(NEXUS_FILE_OBJECTS): $(NEXUS_OBJ_DIR)/FILE/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/FILE/exists $(NEXUS_FILE_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (file)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_FILE_CFLAGS) -c $< -o $@

endif
#
# PLAYBACK
#
$(NEXUS_OBJ_DIR)/PLAYBACK/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter PLAYBACK,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_PLAYBACK_OBJECTS := $(NEXUS_OBJ_DIR)/PLAYBACK/nexus_playback_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_playback_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_playback_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_playback_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_PLAYBACK_PUBLIC_INCLUDES)))
	@echo "[Proxy..... playback]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl PLAYBACK $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_PLAYBACK_PUBLIC_INCLUDES))
NEXUS_PLAYBACK_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_playback_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_playback_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_playback_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_playback_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_playback_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_PLAYBACK_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... playback]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl PLAYBACK $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_PLAYBACK_PUBLIC_INCLUDES))

ifdef NEXUS_PLAYBACK_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/PLAYBACK/nexus_playback_precompiled.h.gch: $(NEXUS_PLAYBACK_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/PLAYBACK/exists $(NEXUS_PLAYBACK_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (playback)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PLAYBACK_CFLAGS) -c $< -o $@

$(NEXUS_PLAYBACK_OBJECTS): $(NEXUS_OBJ_DIR)/PLAYBACK/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/PLAYBACK/exists ${NEXUS_OBJ_DIR}/PLAYBACK/nexus_playback_precompiled.h.gch $(NEXUS_PLAYBACK_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (playback)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_PLAYBACK_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_playback_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/PLAYBACK/nexus_playback_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PLAYBACK_CFLAGS) -c $< -o $@

else
$(NEXUS_PLAYBACK_OBJECTS): $(NEXUS_OBJ_DIR)/PLAYBACK/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/PLAYBACK/exists $(NEXUS_PLAYBACK_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (playback)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_PLAYBACK_CFLAGS) -c $< -o $@

endif
#
# RECORD
#
$(NEXUS_OBJ_DIR)/RECORD/exists:
	$(Q_)$(MKDIR) $@

ifneq (,$(filter RECORD,$(NEXUS_EXCLUDED_MODULES)))
NEXUS_RECORD_OBJECTS := $(NEXUS_OBJ_DIR)/RECORD/nexus_record_proxy.$(NEXUS_OBJ_SUFFIX)
endif
$(NEXUS_SYNCTHUNK_DIR)/nexus_record_proxy.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_record_ioctl.h
$(NEXUS_SYNCTHUNK_DIR)/nexus_record_ioctl.h: $(NEXUS_SYNCTHUNK_DIR)/exists $(wildcard $(addsuffix /*.h,$(NEXUS_RECORD_PUBLIC_INCLUDES)))
	@echo "[Proxy..... record]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/kernelproxy && $(PERL) bapi_build.pl RECORD $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_RECORD_PUBLIC_INCLUDES))
NEXUS_RECORD_SYNCTHUNKS := $(NEXUS_SYNCTHUNK_DIR)/nexus_record_thunks.c $(NEXUS_SYNCTHUNK_DIR)/nexus_record_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_record_thunks.c: $(NEXUS_SYNCTHUNK_DIR)/nexus_record_thunks.h

$(NEXUS_SYNCTHUNK_DIR)/nexus_record_thunks.h: $(wildcard $(addsuffix /*.h,$(NEXUS_RECORD_PUBLIC_INCLUDES))) $(NEXUS_SYNCTHUNK_DIR)/exists
	@echo "[Thunk..... record]"
	$(Q_)cd $(NEXUS_TOP)/build/tools/syncthunk && $(PERL) bapi_build.pl RECORD $(NEXUS_SYNCTHUNK_DIR) $(addsuffix /*.h,$(NEXUS_RECORD_PUBLIC_INCLUDES))

ifdef NEXUS_RECORD_PRECOMPILED_HEADER
$(NEXUS_OBJ_DIR)/RECORD/nexus_record_precompiled.h.gch: $(NEXUS_RECORD_PRECOMPILED_HEADER) ${NEXUS_OBJ_DIR}/RECORD/exists $(NEXUS_RECORD_SYNCTHUNKS)
	@echo "[Compile... $(notdir $<) (record)] "
	$(Q_)$(CC) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_RECORD_CFLAGS) -c $< -o $@

$(NEXUS_RECORD_OBJECTS): $(NEXUS_OBJ_DIR)/RECORD/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/RECORD/exists ${NEXUS_OBJ_DIR}/RECORD/nexus_record_precompiled.h.gch $(NEXUS_RECORD_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (record)]"
	$(Q_)$(CC) -include $(if $(filter $<,$(NEXUS_RECORD_SYNCTHUNKS) $(NEXUS_SYNCTHUNK_DIR)/nexus_record_proxy.c),${NEXUS_PRECOMPILED_HEADER_H},${NEXUS_OBJ_DIR}/RECORD/nexus_record_precompiled.h) $(CDEP_FLAG) $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_RECORD_CFLAGS) -c $< -o $@

else
$(NEXUS_RECORD_OBJECTS): $(NEXUS_OBJ_DIR)/RECORD/%.$(NEXUS_OBJ_SUFFIX): %.c ${NEXUS_OBJ_DIR}/RECORD/exists $(NEXUS_RECORD_SYNCTHUNKS) ${NEXUS_PRECOMPILED_HEADER_H}.gch
	@echo "[Compile... $(notdir $<) (record)]"
	$(Q_)$(CC) $(CDEP_FLAG) -include ${NEXUS_PRECOMPILED_HEADER_H} $(NEXUS_CFLAGS) $(NEXUS_CFLAGS_BPROFILE) $(NEXUS_RECORD_CFLAGS) -c $< -o $@

endif
