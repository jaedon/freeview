/***************************************************************************
*     (c)2004-2012 Broadcom Corporation
*
*  This program is the proprietary software of Broadcom Corporation and/or its licensors,
*  and may only be used, duplicated, modified or distributed pursuant to the terms and
*  conditions of a separate, written license agreement executed between you and Broadcom
*  (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
*  no license (express or implied), right to use, or waiver of any kind with respect to the
*  Software, and Broadcom expressly reserves all rights in and to the Software and all
*  intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
*  HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
*  NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
*
*  Except as expressly set forth in the Authorized License,
*
*  1.     This program, including its structure, sequence and organization, constitutes the valuable trade
*  secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
*  and to use this information only in connection with your use of Broadcom integrated circuit products.
*
*  2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
*  AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
*  WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
*  THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
*  OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
*  LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
*  OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
*  USE OR PERFORMANCE OF THE SOFTWARE.
*
*  3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
*  LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
*  EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
*  USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
*  THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
*  ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
*  LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
*  ANY LIMITED REMEDY.
*
* $brcm_Workfile: nexus_core_module.h $
* $brcm_Revision: 22 $
* $brcm_Date: 10/25/12 11:54a $
*
* API Description:
*   API name: Coree
*    Dummy module for the code generated by a proxy layer
*
* Revision History:
*
* $brcm_Log: /nexus/modules/core/src/nexus_core_module.h $
* 
* 22   10/25/12 11:54a erickson
* SW7435-453: add core standby
* 
* 21   10/11/12 12:25p vsilyaev
* SW7435-329: Converted NEXUS_VideoInput to NEXUS_VideoInputHandle and
*  added object verification
* 
* 20   10/8/12 1:03p erickson
* SW7425-3782: add NEXUS_FrontendConnector for frontend -> transport
*  connections
* 
* 19   7/9/12 3:48p vsilyaev
* SW7435-256: Use BLST_AAT implementation of AA Tree
* 
* 18   6/21/12 2:55p vsilyaev
* SW7420-2315: Use AA tree for address->handle lookup
* 
* 17   6/20/12 4:41p vsilyaev
* SW7420-2315: Insert entries into the tail of list (instead of head) so
*  to exploit weakness of the unit test
* 
* 16   6/19/12 12:42p vsilyaev
* SW7420-2085: Converted from BDBG_OBJECT to NEXUS_OBJECT
* 
* 15   1/19/12 10:31a erickson
* SW7425-2218: add NEXUS_AVS_EXTENSION. fix core thunk.
* 
* 14   1/19/11 11:15a erickson
* SW7420-1123: expose NEXUS_MODULE_SELF as normal
* 
* 13   1/11/11 9:35a erickson
* SW7550-618: add AVS functions
* 
* 12   1/29/10 4:03p gmohile
* SW7408-69 : Add AVS support for 7408
* 
* 11   7/23/09 10:37a katrep
* PR57010: Fixed issue with memc arc .
* 
* 10   4/20/09 10:49a jtna
* PR54011: added nexus_watchdog.h
* 
* 9   4/8/09 5:21p erickson
* PR53866: support ARC's on all memc's and for all heaps
*
* 8   4/8/09 4:01p erickson
* PR53866: correct spelling of mrc struct member
*
* 7   12/15/08 12:01p erickson
* PR48908: add public api to module.h
*
* 6   12/10/08 3:19p vsilyaev
* PR 48908: Added transport and DMA modules
*
* 5   4/10/08 5:45p vsilyaev
* PR 41083: Added BTRC support
*
* 4   4/9/08 11:01a erickson
* PR39453: merge
*
* PR39453/1   4/9/08 9:02p honglang
* PR39453: Need to build Nexus for 3548. All current DTV features should
*  be supported.
*
* 3   4/8/08 10:40a vsilyaev
* PR 41083: Added bprofile support
*
* 2   3/6/08 6:10p bandrews
* PR38682: Fixed include guard
*
* 1   1/31/08 12:43p vsilyaev
* PR 38682: Dummy module header file for the core module
*
*
***************************************************************************/
#ifndef NEXUS_CORE_MODULE_H__
#define NEXUS_CORE_MODULE_H__

#include "nexus_base.h"
#include "nexus_core_thunks.h"
#include "nexus_memory.h"
#include "nexus_watchdog.h"
#include "nexus_core_utils.h"
#include "nexus_avs.h"
#include "nexus_power_management.h"
#if NEXUS_AVS_EXTENSION
#include "nexus_avs_extension.h"
#endif
#include "priv/nexus_core.h"
#include "priv/nexus_core_video.h"
#include "nexus_platform_features.h"
#include "blst_queue.h"
#include "blst_aa_tree.h"

BLST_AA_TREE_HEAD(NEXUS_P_MemoryBlockTree, NEXUS_MemoryBlock);

typedef struct NEXUS_Core_P_State {
    NEXUS_Core_MagnumHandles publicHandles;
    NEXUS_Core_Settings cfg;
    NEXUS_TimerHandle timer;
    NEXUS_ModuleHandle module;
#if NEXUS_AVS_MONITOR    
    NEXUS_TimerHandle pvtTimer;
#endif
    BLST_Q_HEAD(NEXUS_P_MemoryBlockList, NEXUS_MemoryBlock) allocatedBlocks;
    struct NEXUS_P_MemoryBlockTree allocatedBlocksTree;
    bool standby;
} NEXUS_Core_P_State;
extern NEXUS_Core_P_State g_NexusCore;

#define NEXUS_MODULE_SELF g_NexusCore.module
NEXUS_OBJECT_CLASS_DECLARE(NEXUS_MemoryBlock);
NEXUS_OBJECT_CLASS_DECLARE(NEXUS_FrontendConnector);

NEXUS_Error NEXUS_Core_P_Profile_Init(void);
void NEXUS_Core_P_Profile_Uninit(void);

void NEXUS_PowerManagement_Init(void);
void NEXUS_PowerManagement_Uninit(void);

void NEXUS_VideoInput_P_Destroy(NEXUS_VideoInputHandle videoInput);

/* #define B_MODULE_OBJDB_EXTRA B_OBJDB_TABLE_ENTRY(NEXUS_VideoInput, NULL, NEXUS_VideoInput_P_Destroy) */

#endif /* NEXUS_CORE_MODULE_H__ */

