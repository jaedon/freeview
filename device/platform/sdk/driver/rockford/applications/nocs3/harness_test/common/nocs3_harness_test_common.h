
#ifndef __NOCS3_HARNESS_TEST_COMMON_H__
#define __NOCS3_HARNESS_TEST_COMMON_H__

#ifdef __cplusplus
extern "C"
{
#endif

#define NOCS3_HARNESS_TEST_MAX_IV_SIZE 16

typedef enum NOCS3_HARNESS_TEST
{
	NOCS3_HARNESS_TEST_R2R,
	NOCS3_HARNESS_TEST_DSC,
	NOCS3_HARNESS_TEST_SCR,
	NOCS3_HARNESS_TEST_SPV,
	NOCS3_HARNESS_TEST_GPV,
	NOCS3_HARNESS_TEST_FP,
	NOCS3_HARNESS_TEST_CN,
	NOCS3_HARNESS_TEST_STATUS,
	NOCS3_HARNESS_TEST_HELP,
	NOCS3_HARNESS_TEST_VERSION,

	NOCS3_HARNESS_TEST_RESET,
	NOCS3_HARNESS_TEST_SUSPEND,
	NOCS3_HARNESS_TEST_FLASH,
	NOCS3_HARNESS_TEST_APV,
	NOCS3_HARNESS_TEST_RAMSCRAM,
	NOCS3_HARNESS_TEST_SCE,
	NOCS3_HARNESS_TEST_RAM,

	NOCS3_HARNESS_TEST_LR2R,
	NOCS3_HARNESS_TEST_LCHIPID,
	NOCS3_HARNESS_TEST_CHIPID,
	NOCS3_HARNESS_TEST_RSA,
	NOCS3_HARNESS_TEST_DH,
	NOCS3_HARNESS_TEST_SHA,
	NOCS3_HARNESS_TEST_HMAC,
	NOCS3_HARNESS_TEST_RAND,
	NOCS3_HARNESS_TEST_ECDSA,
	NOCS3_HARNESS_TEST_ECDH,

	/* Add new test types BEFORE this line */
	NOCS3_HARNESS_TEST_MAX
} NOCS3_HARNESS_TEST;


typedef enum NOCS3_HARNESS_TEST_STATUS_CODE
{
	NOCS3_HARNESS_TEST_STATUS_CODE_SUCCESS,
	NOCS3_HARNESS_TEST_STATUS_CODE_FAIL,
	NOCS3_HARNESS_TEST_STATUS_CODE_BAD_PARAMS,
	NOCS3_HARNESS_TEST_STATUS_CODE_NOT_SUPPORTED,

	/* Add new status code BEFORE this line */
	NOCS3_HARNESS_TEST_STATUS_CODE_MAX
} NOCS3_HARNESS_TEST_STATUS_CODE;

extern char gNocsGenericErrorString [NOCS3_HARNESS_TEST_STATUS_CODE_MAX][64];

#ifdef __cplusplus
}
#endif

#endif /* __NOCS3_HARNESS_TEST_UTILITIES_H__ */