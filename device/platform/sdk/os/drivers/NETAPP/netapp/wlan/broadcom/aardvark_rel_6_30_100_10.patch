diff -Bru aardvark_rel_6_30_100_4_org/src/usbdev/usbdl/Makefile aardvark_rel_6_30_100_4/src/usbdev/usbdl/Makefile
--- aardvark_rel_6_30_100_4_org/src/usbdev/usbdl/Makefile	2012-08-30 15:38:57.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/usbdev/usbdl/Makefile	2012-09-13 09:28:06.743814878 -0400
@@ -41,20 +41,18 @@
 ifeq ($(TARGETENV), linuxmips_be) 
 	OBJECTS += $(OBJDIR)usb_linux.o
 	COMPILE = mips-linux-gcc 
-	LIBS := -L$(LIBUSB_PATH)/.libs $(LIBUSB_PATH)/.libs/libusb.a
-	CFLAGS += -I$(LIBUSB_PATH) -DIL_BIGENDIAN
+	LIBS := -L$(LIBUSB_PATH)/lib $(LIBUSB_PATH)/lib/libusb.a
+	CFLAGS += -I$(LIBUSB_PATH)/include -DIL_BIGENDIAN
 endif
 
 ifeq ($(TARGETENV), linuxmips)
 	TARGET_PREFIX := mipsel-linux-
 	OBJECTS += $(OBJDIR)usb_linux.o
-	CFLAGS += -I ../libusb
 	COMPILE = mipsel-linux-gcc 
 	CLEAN = clean_linux
-	LDFLAGS += -L$(LIBUSB_PATH)/.libs
-	LIBS= ../libusb/.libs/libusb.a
-	LIBS := -L$(LIBUSB_PATH)/.libs $(LIBUSB_PATH)/.libs/libusb.a
-	CFLAGS += -I$(LIBUSB_PATH)
+	LDFLAGS += -L$(LIBUSB_PATH)/lib
+	LIBS := -L$(LIBUSB_PATH)/lib $(LIBUSB_PATH)/lib/libusb.a
+	CFLAGS += -I$(LIBUSB_PATH)/include
 install: 
 	cp bcmdl $(SRCBASE)/router/mipsel-uclibc/target/bin
 endif
diff -Bru aardvark_rel_6_30_100_4_org/src/wl/config/wlconfig_lx_wl_media aardvark_rel_6_30_100_4/src/wl/config/wlconfig_lx_wl_media
--- aardvark_rel_6_30_100_4_org/src/wl/config/wlconfig_lx_wl_media	2012-08-30 15:38:47.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wl/config/wlconfig_lx_wl_media	2012-09-13 09:28:06.743814878 -0400
@@ -37,7 +37,8 @@
 EXTENDED_VID_PID={ USB_DEVICE(0x0846, 0x9011) }, \
                  { USB_DEVICE(0x050d, 0xd321) }, \
                  { USB_DEVICE(0x1eda, 0x0bdc) }, \
-                 { USB_DEVICE(0x043E, 0x3001) }
+                 { USB_DEVICE(0x043E, 0x3001) }, \
+                 { USB_DEVICE(0x13b1, 0x003a) }
 SEQ_CMDS=0
 WOWL=1
 WL_WOWL_MEDIA=1
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/include/wps_api_osl.h aardvark_rel_6_30_100_4/src/wps/wpsapi/common/include/wps_api_osl.h
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/include/wps_api_osl.h	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/common/include/wps_api_osl.h	2012-09-13 09:28:06.743814878 -0400
@@ -61,7 +61,7 @@
 extern char *wps_osl_get_short_adapter_name();
 extern int wps_osl_get_mac(uint8 *mac);
 extern char *wps_osl_get_ssid();
-extern uint32 wps_osl_init(void *cb_ctx, void *cb, const char *adapter_id);
+extern uint32 wps_osl_init(void *cb_ctx, void *cb, const char *adapter_id, const char* bridge_id);
 extern void wps_osl_deinit();
 extern void wps_osl_abort();
 extern uint32 wps_osl_setup_802_1x(uint8 *bssid);
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/include/wps_sdk.h aardvark_rel_6_30_100_4/src/wps/wpsapi/common/include/wps_sdk.h
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/include/wps_sdk.h	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/common/include/wps_sdk.h	2012-09-13 09:28:06.743814878 -0400
@@ -276,6 +276,8 @@
  * Function : wps_api_open
  * Parameters :
  *		adapter_id - Adapter identifier
+ *		bridge_id Bridge adaptor name that the interface is connected too (the interface to
+ *		listen for events on)
  *		cb_ctx  - Optional. If provided, the WPS status callback
  *			will be called with this context.
  *		callback - WPS status callback.
@@ -302,10 +304,10 @@
  *			serial Number = "5678"
  */
 #ifdef WFA_WPS_20_TESTBED
-BCM_WPSAPI bool wps_api_open(const char *adapter_id, void *cb_ctx, fnWpsProcessCB callback,
+BCM_WPSAPI bool wps_api_open(const char *adapter_id, const char* bridge_id, void *cb_ctx, fnWpsProcessCB callback,
 	wps_devinf *devinf, wps20_testbed_inf *wps20_tbinf, bool ap_pin, bool version2);
 #else
-BCM_WPSAPI bool wps_api_open(const char *adapter_id, void *cb_ctx, fnWpsProcessCB callback,
+BCM_WPSAPI bool wps_api_open(const char *adapter_id, const char* bridge_id, void *cb_ctx, fnWpsProcessCB callback,
 	wps_devinf *devinf, bool ap_pin, bool version2);
 #endif
 
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/wps_api.c aardvark_rel_6_30_100_4/src/wps/wpsapi/common/wps_api.c
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/wps_api.c	2012-08-30 15:38:59.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/common/wps_api.c	2012-09-13 09:28:06.743814878 -0400
@@ -732,10 +732,10 @@
 /* wps_api_open function must be called first, before any other wps api call */
 BCM_WPSAPI bool
 #ifdef WFA_WPS_20_TESTBED
-wps_api_open(const char *adapter_id, void *cb_ctx, fnWpsProcessCB callback, wps_devinf *devinf,
+wps_api_open(const char *adapter_id, const char* bridge_id, void *cb_ctx, fnWpsProcessCB callback, wps_devinf *devinf,
 	wps20_testbed_inf *wps20_tbinf, bool ap_pin, bool b_v2)
 #else
-wps_api_open(const char *adapter_id, void *cb_ctx, fnWpsProcessCB callback, wps_devinf *devinf,
+wps_api_open(const char *adapter_id, const char* bridge_id, void *cb_ctx, fnWpsProcessCB callback, wps_devinf *devinf,
 	bool ap_pin, bool b_v2)
 #endif /* WFA_WPS_20_TESTBED */
 {
@@ -794,7 +794,7 @@
 	wps_api_status_cb(&wps_api_wksp->cb, wps_api_wksp->cb_ctx, WPS_STATUS_INIT, NULL);
 
 	/* WPS hook init for adapter and led (HW) */
-	if (wps_hook_init(cb_ctx, callback, adapter_id) == false) {
+	if (wps_hook_init(cb_ctx, callback, adapter_id, bridge_id) == false) {
 		TUTRACE((TUTRACE_ERR, "wps_api_open : Failed to initial wireless adapter.\n"));
 		return false;
 	}
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/wps_api_priv.h aardvark_rel_6_30_100_4/src/wps/wpsapi/common/wps_api_priv.h
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/wps_api_priv.h	2012-08-30 15:38:59.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/common/wps_api_priv.h	2012-09-13 09:28:06.743814878 -0400
@@ -35,7 +35,7 @@
 
 extern bool wps_hook_create_profile(const struct _wps_credentials *credentials);
 extern int wps_hook_get_mac(uint8 *mac);
-extern bool wps_hook_init(void *cb_ctx, void *cb, const char *adapter_id);
+extern bool wps_hook_init(void *cb_ctx, void *cb, const char *adapter_id, const char* bridge_id);
 extern void wps_hook_deinit();
 extern void wps_hook_abort();
 extern uint32 wps_hook_setup_802_1x(char *bssid);
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/wps_hooks.c aardvark_rel_6_30_100_4/src/wps/wpsapi/common/wps_hooks.c
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/common/wps_hooks.c	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/common/wps_hooks.c	2012-09-13 09:28:06.743814878 -0400
@@ -61,9 +61,9 @@
 
 /* Initial HW related */
 bool
-wps_hook_init(void *cb_ctx, void *cb, const char *adapter_id)
+wps_hook_init(void *cb_ctx, void *cb, const char *adapter_id, const char * bridge_id)
 {
-	uint32 retVal = wps_osl_init(cb_ctx, cb, adapter_id);
+	uint32 retVal = wps_osl_init(cb_ctx, cb, adapter_id, bridge_id);
 	return ((retVal == WPS_OSL_SUCCESS) ? true : false);
 }
 
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/Makefile aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/Makefile
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/Makefile	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/Makefile	2012-09-13 09:28:06.747814883 -0400
@@ -123,7 +123,7 @@
 APP_SOURCE += src/wps/wpsapi/linux/wps_api_ui.c
 
 ifeq ($(SHARED_LIB),1)
-API_SOURCE + = src/wps/wpsapi/linux/wps_linux_osl.c
+API_SOURCE += src/wps/wpsapi/linux/wps_linux_osl.c
 else
 APP_SOURCE += src/wps/wpsapi/linux/wps_linux_osl.c
 endif
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/wps_api_tester.c aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/wps_api_tester.c
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/wps_api_tester.c	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/wps_api_tester.c	2012-09-13 09:29:00.835817446 -0400
@@ -343,11 +343,11 @@
 
 	/* 2. Open WPS */
 #ifdef WFA_WPS_20_TESTBED
-	bRet = wps_api_open(STRP(wps->ifname), NULL, _wps_join_callback,
+	bRet = wps_api_open(STRP(wps->ifname), STRP(wps->brname), NULL, _wps_join_callback,
 		_wps_my_devinf(&my_devinf, wps->transport_uuid), &wps->wps20_tbinf, wps->b_appin,
 		wps->b_v2);
 #else
-	bRet = wps_api_open(STRP(wps->ifname), NULL, _wps_join_callback,
+	bRet = wps_api_open(STRP(wps->ifname), STRP(wps->brname), NULL, _wps_join_callback,
 		_wps_my_devinf(&my_devinf, wps->transport_uuid), wps->b_appin, wps->b_v2);
 #endif
 	if (bRet == FALSE) {
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/wps_api_tester.h aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/wps_api_tester.h
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/wps_api_tester.h	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/wps_api_tester.h	2012-09-13 09:29:14.007818069 -0400
@@ -29,7 +29,8 @@
 
 	char bssid[6];
 	char ssid[33];
-	char ifname[16];
+    char ifname[16];
+    char brname[16];
 	char def_dhclient_pf[256];
 	char ip_addr[16];
 	char dhcp_cmd[256];
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/wps_api_ui.c aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/wps_api_ui.c
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/wps_api_ui.c	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/wps_api_ui.c	2012-09-13 09:30:40.203822139 -0400
@@ -968,11 +968,16 @@
 			wps->b_ssid = TRUE;
 			WPS_PRINT(("SSID : %s", wps->ssid));
 		}
-		else if (!strcmp(cmd, "-if")) {
-			WPS_ARGC_CHECK();
-			val = argv[index++]; argc--;
-			wps_strncpy(wps->ifname, val, sizeof(wps->ifname));
-		}
+        else if (!strcmp(cmd, "-if")) {
+            WPS_ARGC_CHECK();
+            val = argv[index++]; argc--;
+            wps_strncpy(wps->ifname, val, sizeof(wps->ifname));
+        }
+        else if (!strcmp(cmd, "-br")) {
+            WPS_ARGC_CHECK();
+            val = argv[index++]; argc--;
+            wps_strncpy(wps->brname, val, sizeof(wps->brname));
+        }
 		else if (!strcmp(cmd, "-bssid")) {
 			WPS_ARGC_CHECK();
 			/* 
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/wps_linux_osl.c aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/wps_linux_osl.c
--- aardvark_rel_6_30_100_4_org/src/wps/wpsapi/linux/wps_linux_osl.c	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpsapi/linux/wps_linux_osl.c	2012-09-13 09:28:06.747814883 -0400
@@ -93,6 +93,8 @@
 WPS_OSL_T *wps_osl_wksp = NULL;
 
 static char ifname_lx[IFNAMSIZ] = "";
+static char ifname_br[IFNAMSIZ] = "";
+
 static uint8 peer_mac[6] = {0};
 static int eap_fd = -1; /* descriptor to raw socket  */
 static int ifindex = -1; /* interface index */
@@ -158,6 +160,12 @@
 
 	ifr.ifr_name[0] = '\0';
 
+	if (ifname_br[0] != '\0')
+    {
+	    strncpy(ifname, ifname_br, ifname_len);
+	    return 0;
+    }
+
 	if (!(fp = fopen(proc_net_dev, "r")))
 		return ret;
 
@@ -630,7 +638,15 @@
 		memcpy(peer_mac, bssid, 6);
 
 	memset(&ifr, 0, sizeof(ifr));
+
+    if (ifname_br[0])
+    {
+        wps_strncpy(ifr.ifr_name, ifname_br, sizeof(ifr.ifr_name));
+    }
+    else
+    {
 	wps_strncpy(ifr.ifr_name, ifname_lx, sizeof(ifr.ifr_name));
+    }
 
 	err = ioctl(eap_fd, SIOCGIFINDEX, &ifr);
 	if (err < 0) {
@@ -840,7 +856,7 @@
 }
 
 uint32
-wps_osl_init(void *cb_ctx, void *cb, const char *adapter_id)
+wps_osl_init(void *cb_ctx, void *cb, const char *adapter_id, const char* bridge_id)
 {
 	char *ifname = (char*) adapter_id;
 	char dyn_name[IFNAMSIZ];
@@ -869,6 +885,11 @@
 		ifname = dyn_name;
 	}
 
+	if (bridge_id != NULL)
+	{
+	    wps_strncpy(ifname_br, bridge_id, sizeof(ifname_br));
+	}
+
 	/* Save this specific interface for further use */
 	wps_strncpy(ifname_lx, ifname, sizeof(ifname_lx));
 
diff -Bru aardvark_rel_6_30_100_4_org/src/wps/wpscli/common/wpscli_wl.c aardvark_rel_6_30_100_4/src/wps/wpscli/common/wpscli_wl.c
--- aardvark_rel_6_30_100_4_org/src/wps/wpscli/common/wpscli_wl.c	2012-08-30 15:38:58.000000000 -0400
+++ aardvark_rel_6_30_100_4/src/wps/wpscli/common/wpscli_wl.c	2012-09-13 09:28:06.747814883 -0400
@@ -740,7 +740,7 @@
 		proberesp->primDeviceOui = devinfo->primDeviceOui;
 		proberesp->primDeviceSubCategory = devinfo->primDeviceSubCategory;
 		strcpy(proberesp->deviceName, devinfo->deviceName);
-		proberesp->configMethods = devinfo->configMethods & ~WPS_CONFMET_PBC;
+		proberesp->configMethods = devinfo->configMethods;
 		proberesp->rfBand = devinfo->rfBand;
 		if (b_wps_version2) {
 			proberesp->version2 = devinfo->version2;
